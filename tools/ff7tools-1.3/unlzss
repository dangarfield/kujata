#!/usr/bin/python

#
# UnLZSS - Decompress a Final Fantasy VII LZSS-compressed file
#
# Copyright (C) 2014 Christian Bauer <www.cebix.net>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#

__version__ = "1.0"

import sys
import os
import struct

import ff7


# Print usage information and exit.
def usage(exitcode, error = None):
    print "Usage: %s [OPTION...] <fromfile> <tofile>" % os.path.basename(sys.argv[0])
    print "  -V, --version                   Display version information and exit"
    print "  -?, --help                      Show this help message"

    if error is not None:
        print >>sys.stderr, "\nError:", error

    sys.exit(exitcode)


# Parse command line arguments
inputFileName = None
outputFileName = None

for arg in sys.argv[1:]:
    if arg == "--version" or arg == "-V":
        print "UnLZSS", __version__
        sys.exit(0)
    elif arg == "--help" or arg == "-?":
        usage(0)
    elif arg[0] == "-":
        usage(64, "Invalid option '%s'" % arg)
    else:
        if inputFileName is None:
            inputFileName = arg
        elif outputFileName is None:
            outputFileName = arg
        else:
            usage(64, "Unexpected extra argument '%s'" % arg)

if inputFileName is None:
    usage(64, "No input file specified")
if outputFileName is None:
    usage(64, "No output file specified")

# Read the input file
try:
    inputFile = open(inputFileName, "rb")
except IOError, e:
    print >>sys.stderr, "Error opening file '%s': %s" % (inputFileName, e.strerror)
    sys.exit(1)

data = inputFile.read()
compressedSize = struct.unpack_from("<L", data)[0]

# Decompress it
data = ff7.decompressLzss(data[4:4 + compressedSize])

# Write data to output file
try:
    outputFile = open(outputFileName, "wb")
except IOError, e:
    print >>sys.stderr, "Error creating file '%s': %s" % (outputFileName, e.strerror)
    sys.exit(1)

outputFile.write(data)
outputFile.close()
