#
# WM0
#

0000: return
0001: return
0002: clear stack
0003: push byte from bank 0 [Addr=0381]
0005: jump if !A [Addr=0019]
	0007: clear stack
	0008: push byte from bank 0 [Addr=0381]
	000a: push byte from bank 0 [Addr=0381]
	000c: push constant #0001
	000e: push A-B
	000f: write to bank: A=Addr, B=Value
	0010: clear stack
	0011: push byte from bank 0 [Addr=0381]
	0013: push constant #0000
	0015: push A==B
	0016: jump if !A [Addr=0019]
	0018: unknown
0019: return

001a: clear stack
001b: push halfword from bank 0 [Addr=0000]
001d: push constant #03e8
001f: push A>=B
0020: jump if !A [Addr=0026]
	0022: clear stack
	0023: push constant #0001
	0025: set meteor texture on/off, A=EnableMeteorTexture
0026: clear stack
0027: push bit from bank 0 [Addr=03f2]
0029: jump if !A [Addr=0031]
	002b: clear stack
	002c: push constant #0000
	002e: set chocobo type, A=ChocoboColor
	002f: jump [Addr=005b]
0031: clear stack
0032: push bit from bank 0 [Addr=03f3]
0034: jump if !A [Addr=003c]
	0036: clear stack
	0037: push constant #0001
	0039: set chocobo type, A=ChocoboColor
	003a: jump [Addr=005b]
003c: clear stack
003d: push bit from bank 0 [Addr=03f4]
003f: jump if !A [Addr=0047]
	0041: clear stack
	0042: push constant #0002
	0044: set chocobo type, A=ChocoboColor
	0045: jump [Addr=005b]
0047: clear stack
0048: push bit from bank 0 [Addr=03f5]
004a: jump if !A [Addr=0052]
	004c: clear stack
	004d: push constant #0003
	004f: set chocobo type, A=ChocoboColor
	0050: jump [Addr=005b]
0052: clear stack
0053: push bit from bank 0 [Addr=03f6]
0055: jump if !A [Addr=005b]
	0057: clear stack
	0058: push constant #0004
	005a: set chocobo type, A=ChocoboColor
005b: clear stack
005c: push bit from bank 0 [Addr=1a83]
005e: jump if !A [Addr=0066]
	0060: clear stack
	0061: push constant #0001
	0063: set submarine color, A=SubmarineColor
	0064: jump [Addr=006f]
0066: clear stack
0067: push bit from bank 0 [Addr=1a92]
0069: jump if !A [Addr=006f]
	006b: clear stack
	006c: push constant #0000
	006e: set submarine color, A=SubmarineColor
006f: clear stack
0070: push halfword from bank 0 [Addr=0000]
0072: push constant #04af
0074: push A>=B
0075: jump if !A [Addr=009e]
	0077: clear stack
	0078: push bit from bank 0 [Addr=03d8]
	007a: jump if !A [Addr=0098]
		007c: clear stack
		007d: push bit from bank 0 [Addr=1c38]
		007f: jump if !A [Addr=0092]
			0081: clear stack
			0082: push bit from bank 0 [Addr=1c34]
			0084: jump if !A [Addr=008c]
				0086: clear stack
				0087: push constant #0004
				0089: set world progress, A=ProgressValue0-4
				008a: jump [Addr=0090]
			008c: clear stack
				008d: push constant #0003
				008f: set world progress, A=ProgressValue0-4
			0090: jump [Addr=0096]
		0092: clear stack
			0093: push constant #0003
			0095: set world progress, A=ProgressValue0-4
		0096: jump [Addr=009c]
	0098: clear stack
		0099: push constant #0003
		009b: set world progress, A=ProgressValue0-4
	009c: jump [Addr=00c6]
009e: clear stack
	009f: push halfword from bank 0 [Addr=0000]
	00a1: push constant #04ad
	00a3: push A>=B
	00a4: jump if !A [Addr=00ac]
		00a6: clear stack
		00a7: push constant #0003
		00a9: set world progress, A=ProgressValue0-4
		00aa: jump [Addr=00c6]
	00ac: clear stack
		00ad: push halfword from bank 0 [Addr=0000]
		00af: push constant #03e8
		00b1: push A>=B
		00b2: jump if !A [Addr=00ba]
			00b4: clear stack
			00b5: push constant #0002
			00b7: set world progress, A=ProgressValue0-4
			00b8: jump [Addr=00c6]
		00ba: clear stack
			00bb: push halfword from bank 0 [Addr=0000]
			00bd: push constant #027e
			00bf: push A>=B
			00c0: jump if !A [Addr=00c6]
				00c2: clear stack
				00c3: push constant #0001
				00c5: set world progress, A=ProgressValue0-4
00c6: clear stack
00c7: push special [Type=0005]
00c9: push constant #0000
00cb: push A==B
00cc: jump if !A [Addr=083f]


00ce: clear stack
00cf: push bit from bank 0 [Addr=03db]
00d1: push !A
00d2: jump if !A [Addr=00dd]
	00d4: clear stack
	00d5: push bit from bank 0 [Addr=1c3c]
	00d7: jump if !A [Addr=00dd]
		00d9: clear stack
		00da: push constant #001d
		00dc: load model A
00dd: clear stack
00de: push bit from bank 0 [Addr=03d0]
00e0: push !A
00e1: jump if !A [Addr=00e7]
	00e3: clear stack
	00e4: push constant #0007
	00e6: load model A
00e7: clear stack
00e8: push bit from bank 0 [Addr=03d3]
00ea: jump if !A [Addr=00f0]
	00ec: clear stack
	00ed: push constant #0014
	00ef: load model A
00f0: clear stack
00f1: push bit from bank 0 [Addr=03d1]
00f3: push !A
00f4: jump if !A [Addr=00fa]
	00f6: clear stack
	00f7: push constant #000f
	00f9: load model A
00fa: clear stack
00fb: push byte from bank 0 [Addr=0351]
00fd: push !A
00fe: jump if !A [Addr=0104]
	0100: clear stack
	0101: push constant #000c
	0103: load model A
0104: clear stack
0105: push halfword from bank 0 [Addr=0000]
0107: push constant #062c
0109: push A<B
010a: jump if !A [Addr=0110]
	010c: clear stack
	010d: push constant #0018
	010f: load model A
0110: clear stack
0111: push constant #000e
0113: load model A
0114: clear stack
0115: push constant #0010
0117: load model A
0118: clear stack
0119: push constant #0019
011b: load model A
011c: clear stack
011d: push bit from bank 0 [Addr=03d8]
011f: push !A
0120: jump if !A [Addr=012e]
	0122: clear stack
	0123: push halfword from bank 0 [Addr=0000]
	0125: push constant #062c
	0127: push A>=B
	0128: jump if !A [Addr=012e]
		012a: clear stack
		012b: push constant #000b
		012d: load model A
012e: clear stack
012f: push bit from bank 0 [Addr=1a93]
0131: jump if !A [Addr=0137]
	0133: clear stack
	0134: push constant #000a
	0136: load model A
0137: clear stack
0138: push bit from bank 0 [Addr=03f0]
013a: jump if !A [Addr=0140]
	013c: clear stack
	013d: push constant #0004
	013f: load model A
0140: clear stack
0141: push bit from bank 0 [Addr=03f2]
0143: jump if !A [Addr=0149]
	0145: clear stack
	0146: push constant #0013
	0148: load model A
0149: clear stack
014a: push bit from bank 0 [Addr=03f3]
014c: jump if !A [Addr=0152]
	014e: clear stack
	014f: push constant #0013
	0151: load model A
0152: clear stack
0153: push bit from bank 0 [Addr=03f4]
0155: jump if !A [Addr=015b]
	0157: clear stack
	0158: push constant #0013
	015a: load model A
015b: clear stack
015c: push bit from bank 0 [Addr=03f5]
015e: jump if !A [Addr=0164]
	0160: clear stack
	0161: push constant #0013
	0163: load model A
0164: clear stack
0165: push bit from bank 0 [Addr=03f6]
0167: jump if !A [Addr=016d]
	0169: clear stack
	016a: push constant #0013
	016c: load model A
016d: clear stack
016e: push bit from bank 0 [Addr=0e7f]
0170: push !A
0171: jump if !A [Addr=017c]
	0173: clear stack
	0174: push bit from bank 0 [Addr=03f8]
	0176: jump if !A [Addr=017c]
		0178: clear stack
		0179: push constant #0006
		017b: load model A
017c: clear stack
017d: push bit from bank 0 [Addr=03fa]
017f: jump if !A [Addr=0185]
	0181: clear stack
	0182: push constant #0005
	0184: load model A
0185: clear stack
0186: push bit from bank 0 [Addr=03fc]
0188: jump if !A [Addr=018e]
	018a: clear stack
	018b: push constant #0003
	018d: load model A
018e: clear stack
018f: push bit from bank 0 [Addr=1a83]
0191: jump if !A [Addr=0197]
	0193: clear stack
	0194: push constant #000d
	0196: load model A
0197: clear stack
0198: push bit from bank 0 [Addr=1a92]
019a: jump if !A [Addr=01a0]
	019c: clear stack
	019d: push constant #000d
	019f: load model A
01a0: unknown
01a1: clear stack
01a2: push bit from bank 0 [Addr=0e7f]
01a4: push !A
01a5: jump if !A [Addr=01ab]
	01a7: clear stack
	01a8: push special [Type=000e]
	01aa: load model A
01ab: set player entity
01ac: clear stack
01ad: push special [Type=0006]
01af: push constant #0000
01b1: push A==B
01b2: jump if !A [Addr=01cc]
	01b4: clear stack
	01b5: push bit from bank 0 [Addr=1a83]
	01b7: jump if !A [Addr=01c0]
		01b9: clear stack
		01ba: push constant #000d
		01bc: load model A
		01bd: enter vehicle
		01be: jump [Addr=01ca]
	01c0: clear stack
		01c1: push bit from bank 0 [Addr=1a92]
		01c3: jump if !A [Addr=01ca]
			01c5: clear stack
			01c6: push constant #000d
			01c8: load model A
			01c9: enter vehicle
	01ca: jump [Addr=083d]
01cc: clear stack
01cd: push special [Type=0006]
01cf: push constant #0001
01d1: push A==B
01d2: jump if !A [Addr=01e6]
	01d4: clear stack
	01d5: push constant #0016
	01d7: push constant #000f
	01d9: set active entity mesh coordinates A=MeshX, B=MeshZ
	01da: clear stack
	01db: push constant #1524
	01dd: push constant #01bd
	01df: set active entity coordinates in mesh, A=XCoor, B=ZCoor
	01e0: clear stack
	01e1: push constant #0000
	01e3: set active entity direction & facing A=DirectionAndFacing
	01e4: jump [Addr=083d]
01e6: clear stack
01e7: push special [Type=0006]
01e9: push constant #0002
01eb: push A==B
01ec: jump if !A [Addr=0200]
	01ee: clear stack
	01ef: push constant #0018
	01f1: push constant #000d
	01f3: set active entity mesh coordinates A=MeshX, B=MeshZ
	01f4: clear stack
	01f5: push constant #13d6
	01f7: push constant #1920
	01f9: set active entity coordinates in mesh, A=XCoor, B=ZCoor
	01fa: clear stack
	01fb: push constant #0000
	01fd: set active entity direction & facing A=DirectionAndFacing
	01fe: jump [Addr=083d]
0200: clear stack
0201: push special [Type=0006]
0203: push constant #0003
0205: push A==B
0206: jump if !A [Addr=025b]
	0208: clear stack
	0209: push bit from bank 0 [Addr=03f1]
	020b: jump if !A [Addr=0249]
		020d: clear stack
		020e: push bit from bank 0 [Addr=03f0]
		0210: jump if !A [Addr=0217]
			0212: clear stack
			0213: push constant #0004
			0215: load model A
			0216: enter vehicle
		0217: clear stack
		0218: push bit from bank 0 [Addr=03f2]
		021a: jump if !A [Addr=0221]
			021c: clear stack
			021d: push constant #0013
			021f: load model A
			0220: enter vehicle
		0221: clear stack
		0222: push bit from bank 0 [Addr=03f3]
		0224: jump if !A [Addr=022b]
			0226: clear stack
			0227: push constant #0013
			0229: load model A
			022a: enter vehicle
		022b: clear stack
		022c: push bit from bank 0 [Addr=03f4]
		022e: jump if !A [Addr=0235]
			0230: clear stack
			0231: push constant #0013
			0233: load model A
			0234: enter vehicle
		0235: clear stack
		0236: push bit from bank 0 [Addr=03f5]
		0238: jump if !A [Addr=023f]
			023a: clear stack
			023b: push constant #0013
			023d: load model A
			023e: enter vehicle
		023f: clear stack
		0240: push bit from bank 0 [Addr=03f6]
		0242: jump if !A [Addr=0249]
			0244: clear stack
			0245: push constant #0013
			0247: load model A
			0248: enter vehicle
	0249: clear stack
	024a: push constant #001d
	024c: push constant #0010
	024e: set active entity mesh coordinates A=MeshX, B=MeshZ
	024f: clear stack
	0250: push constant #0712
	0252: push constant #1d23
	0254: set active entity coordinates in mesh, A=XCoor, B=ZCoor
	0255: clear stack
	0256: push constant #0000
	0258: set active entity direction & facing A=DirectionAndFacing
	0259: jump [Addr=083d]
025b: clear stack
025c: push special [Type=0006]
025e: push constant #0004
0260: push A==B
0261: jump if !A [Addr=0275]
	0263: clear stack
	0264: push constant #001a
	0266: push constant #0012
	0268: set active entity mesh coordinates A=MeshX, B=MeshZ
	0269: clear stack
	026a: push constant #073d
	026c: push constant #15ba
	026e: set active entity coordinates in mesh, A=XCoor, B=ZCoor
	026f: clear stack
	0270: push constant #0060
	0272: set active entity direction & facing A=DirectionAndFacing
	0273: jump [Addr=083d]
0275: clear stack
0276: push special [Type=0006]
0278: push constant #0005
027a: push A==B
027b: jump if !A [Addr=028f]
	027d: clear stack
	027e: push constant #0019
	0280: push constant #0013
	0282: set active entity mesh coordinates A=MeshX, B=MeshZ
	0283: clear stack
	0284: push constant #0fdd
	0286: push constant #095c
	0288: set active entity coordinates in mesh, A=XCoor, B=ZCoor
	0289: clear stack
	028a: push constant #00e4
	028c: set active entity direction & facing A=DirectionAndFacing
	028d: jump [Addr=083d]
028f: clear stack
0290: push special [Type=0006]
0292: push constant #0006
0294: push A==B
0295: jump if !A [Addr=02a9]
0297: clear stack
0298: push constant #0018
029a: push constant #0014
029c: set active entity mesh coordinates A=MeshX, B=MeshZ
029d: clear stack
029e: push constant #1a1d
02a0: push constant #19ff
02a2: set active entity coordinates in mesh, A=XCoor, B=ZCoor
02a3: clear stack
02a4: push constant #0000
02a6: set active entity direction & facing A=DirectionAndFacing
02a7: jump [Addr=083d]
02a9: clear stack
02aa: push special [Type=0006]
02ac: push constant #0007
02ae: push A==B
02af: jump if !A [Addr=02d2]
02b1: clear stack
02b2: push bit from bank 0 [Addr=03f8]
02b4: jump if !A [Addr=02c0]
02b6: clear stack
02b7: push bit from bank 0 [Addr=03f9]
02b9: jump if !A [Addr=02c0]
02bb: clear stack
02bc: push constant #0006
02be: load model A
02bf: enter vehicle
02c0: clear stack
02c1: push constant #0014
02c3: push constant #0011
02c5: set active entity mesh coordinates A=MeshX, B=MeshZ
02c6: clear stack
02c7: push constant #175d
02c9: push constant #1e0e
02cb: set active entity coordinates in mesh, A=XCoor, B=ZCoor
02cc: clear stack
02cd: push constant #0000
02cf: set active entity direction & facing A=DirectionAndFacing
02d0: jump [Addr=083d]
02d2: clear stack
02d3: push special [Type=0006]
02d5: push constant #0008
02d7: push A==B
02d8: jump if !A [Addr=02ec]
02da: clear stack
02db: push constant #0014
02dd: push constant #0016
02df: set active entity mesh coordinates A=MeshX, B=MeshZ
02e0: clear stack
02e1: push constant #1814
02e3: push constant #0d4d
02e5: set active entity coordinates in mesh, A=XCoor, B=ZCoor
02e6: clear stack
02e7: push constant #0000
02e9: set active entity direction & facing A=DirectionAndFacing
02ea: jump [Addr=083d]
02ec: clear stack
02ed: push special [Type=0006]
02ef: push constant #0009
02f1: push A==B
02f2: jump if !A [Addr=0306]
02f4: clear stack
02f5: push constant #0018
02f7: push constant #0010
02f9: set active entity mesh coordinates A=MeshX, B=MeshZ
02fa: clear stack
02fb: push constant #0a8b
02fd: push constant #09d1
02ff: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0300: clear stack
0301: push constant #0038
0303: set active entity direction & facing A=DirectionAndFacing
0304: jump [Addr=083d]
0306: clear stack
0307: push special [Type=0006]
0309: push constant #000a
030b: push A==B
030c: jump if !A [Addr=0320]
030e: clear stack
030f: push constant #000f
0311: push constant #0015
0313: set active entity mesh coordinates A=MeshX, B=MeshZ
0314: clear stack
0315: push constant #1908
0317: push constant #07f1
0319: set active entity coordinates in mesh, A=XCoor, B=ZCoor
031a: clear stack
031b: push constant #0000
031d: set active entity direction & facing A=DirectionAndFacing
031e: jump [Addr=083d]
0320: clear stack
0321: push special [Type=0006]
0323: push constant #000b
0325: push A==B
0326: jump if !A [Addr=034a]
0328: clear stack
0329: push constant #001a
032b: push constant #0018
032d: set active entity mesh coordinates A=MeshX, B=MeshZ
032e: clear stack
032f: push halfword from bank 0 [Addr=0000]
0331: push constant #04ad
0333: push A>=B
0334: jump if !A [Addr=033e]
0336: clear stack
0337: push constant #1a25
0339: push constant #18d8
033b: set active entity coordinates in mesh, A=XCoor, B=ZCoor
033c: jump [Addr=0344]
033e: clear stack
033f: push constant #1bd7
0341: push constant #153b
0343: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0344: clear stack
0345: push constant #0000
0347: set active entity direction & facing A=DirectionAndFacing
0348: jump [Addr=083d]
034a: clear stack
034b: push special [Type=0006]
034d: push constant #000c
034f: push A==B
0350: jump if !A [Addr=0364]
0352: clear stack
0353: push constant #0021
0355: push constant #0011
0357: set active entity mesh coordinates A=MeshX, B=MeshZ
0358: clear stack
0359: push constant #0f64
035b: push constant #05e8
035d: set active entity coordinates in mesh, A=XCoor, B=ZCoor
035e: clear stack
035f: push constant #0000
0361: set active entity direction & facing A=DirectionAndFacing
0362: jump [Addr=083d]
0364: clear stack
0365: push special [Type=0006]
0367: push constant #000d
0369: push A==B
036a: jump if !A [Addr=038d]
036c: clear stack
036d: push bit from bank 0 [Addr=03f8]
036f: jump if !A [Addr=037b]
0371: clear stack
0372: push bit from bank 0 [Addr=03f9]
0374: jump if !A [Addr=037b]
0376: clear stack
0377: push constant #0006
0379: load model A
037a: enter vehicle
037b: clear stack
037c: push constant #0011
037e: push constant #000f
0380: set active entity mesh coordinates A=MeshX, B=MeshZ
0381: clear stack
0382: push constant #0607
0384: push constant #0cb2
0386: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0387: clear stack
0388: push constant #0000
038a: set active entity direction & facing A=DirectionAndFacing
038b: jump [Addr=083d]
038d: clear stack
038e: push special [Type=0006]
0390: push constant #000e
0392: push A==B
0393: jump if !A [Addr=03a7]
0395: clear stack
0396: push constant #000d
0398: push constant #000e
039a: set active entity mesh coordinates A=MeshX, B=MeshZ
039b: clear stack
039c: push constant #1f1d
039e: push constant #1aa5
03a0: set active entity coordinates in mesh, A=XCoor, B=ZCoor
03a1: clear stack
03a2: push constant #0044
03a4: set active entity direction & facing A=DirectionAndFacing
03a5: jump [Addr=083d]
03a7: clear stack
03a8: push special [Type=0006]
03aa: push constant #000f
03ac: push A==B
03ad: jump if !A [Addr=03c1]
03af: clear stack
03b0: push constant #000d
03b2: push constant #000f
03b4: set active entity mesh coordinates A=MeshX, B=MeshZ
03b5: clear stack
03b6: push constant #0a98
03b8: push constant #0c93
03ba: set active entity coordinates in mesh, A=XCoor, B=ZCoor
03bb: clear stack
03bc: push constant #00fa
03be: set active entity direction & facing A=DirectionAndFacing
03bf: jump [Addr=083d]
03c1: clear stack
03c2: push special [Type=0006]
03c4: push constant #0010
03c6: push A==B
03c7: jump if !A [Addr=03ea]
03c9: clear stack
03ca: push bit from bank 0 [Addr=03f8]
03cc: jump if !A [Addr=03d8]
03ce: clear stack
03cf: push bit from bank 0 [Addr=03f9]
03d1: jump if !A [Addr=03d8]
03d3: clear stack
03d4: push constant #0006
03d6: load model A
03d7: enter vehicle
03d8: clear stack
03d9: push constant #000e
03db: push constant #0012
03dd: set active entity mesh coordinates A=MeshX, B=MeshZ
03de: clear stack
03df: push constant #1615
03e1: push constant #1e6e
03e3: set active entity coordinates in mesh, A=XCoor, B=ZCoor
03e4: clear stack
03e5: push constant #0000
03e7: set active entity direction & facing A=DirectionAndFacing
03e8: jump [Addr=083d]
03ea: clear stack
03eb: push special [Type=0006]
03ed: push constant #0011
03ef: push A==B
03f0: jump if !A [Addr=0404]
03f2: clear stack
03f3: push constant #000d
03f5: push constant #0016
03f7: set active entity mesh coordinates A=MeshX, B=MeshZ
03f8: clear stack
03f9: push constant #18dc
03fb: push constant #117a
03fd: set active entity coordinates in mesh, A=XCoor, B=ZCoor
03fe: clear stack
03ff: push constant #0000
0401: set active entity direction & facing A=DirectionAndFacing
0402: jump [Addr=083d]
0404: clear stack
0405: push special [Type=0006]
0407: push constant #0012
0409: push A==B
040a: jump if !A [Addr=041e]
040c: clear stack
040d: push constant #000a
040f: push constant #0014
0411: set active entity mesh coordinates A=MeshX, B=MeshZ
0412: clear stack
0413: push constant #14d9
0415: push constant #1c20
0417: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0418: clear stack
0419: push constant #0000
041b: set active entity direction & facing A=DirectionAndFacing
041c: jump [Addr=083d]
041e: clear stack
041f: push special [Type=0006]
0421: push constant #0013
0423: push A==B
0424: jump if !A [Addr=0438]
0426: clear stack
0427: push constant #000b
0429: push constant #0010
042b: set active entity mesh coordinates A=MeshX, B=MeshZ
042c: clear stack
042d: push constant #09f1
042f: push constant #17f0
0431: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0432: clear stack
0433: push constant #0000
0435: set active entity direction & facing A=DirectionAndFacing
0436: jump [Addr=083d]
0438: clear stack
0439: push special [Type=0006]
043b: push constant #0014
043d: push A==B
043e: jump if !A [Addr=0452]
0440: clear stack
0441: push constant #000a
0443: push constant #000e
0445: set active entity mesh coordinates A=MeshX, B=MeshZ
0446: clear stack
0447: push constant #0741
0449: push constant #1a88
044b: set active entity coordinates in mesh, A=XCoor, B=ZCoor
044c: clear stack
044d: push constant #0000
044f: set active entity direction & facing A=DirectionAndFacing
0450: jump [Addr=083d]
0452: clear stack
0453: push special [Type=0006]
0455: push constant #0015
0457: push A==B
0458: jump if !A [Addr=046c]
045a: clear stack
045b: push constant #000c
045d: push constant #0011
045f: set active entity mesh coordinates A=MeshX, B=MeshZ
0460: clear stack
0461: push constant #0e5d
0463: push constant #094a
0465: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0466: clear stack
0467: push constant #0000
0469: set active entity direction & facing A=DirectionAndFacing
046a: jump [Addr=083d]
046c: clear stack
046d: push special [Type=0006]
046f: push constant #0016
0471: push A==B
0472: jump if !A [Addr=0486]
0474: clear stack
0475: push constant #000e
0477: push constant #000d
0479: set active entity mesh coordinates A=MeshX, B=MeshZ
047a: clear stack
047b: push constant #061c
047d: push constant #0ce0
047f: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0480: clear stack
0481: push constant #0000
0483: set active entity direction & facing A=DirectionAndFacing
0484: jump [Addr=083d]
0486: clear stack
0487: push special [Type=0006]
0489: push constant #0017
048b: push A==B
048c: jump if !A [Addr=04a0]
048e: clear stack
048f: push constant #0004
0491: push constant #000a
0493: set active entity mesh coordinates A=MeshX, B=MeshZ
0494: clear stack
0495: push constant #141b
0497: push constant #1c3f
0499: set active entity coordinates in mesh, A=XCoor, B=ZCoor
049a: clear stack
049b: push constant #0000
049d: set active entity direction & facing A=DirectionAndFacing
049e: jump [Addr=083d]
04a0: clear stack
04a1: push special [Type=0006]
04a3: push constant #0018
04a5: push A==B
04a6: jump if !A [Addr=04ba]
04a8: clear stack
04a9: push constant #0006
04ab: push constant #000f
04ad: set active entity mesh coordinates A=MeshX, B=MeshZ
04ae: clear stack
04af: push constant #0f9f
04b1: push constant #14e9
04b3: set active entity coordinates in mesh, A=XCoor, B=ZCoor
04b4: clear stack
04b5: push constant #00bc
04b7: set active entity direction & facing A=DirectionAndFacing
04b8: jump [Addr=083d]
04ba: clear stack
04bb: push special [Type=0006]
04bd: push constant #0019
04bf: push A==B
04c0: jump if !A [Addr=04d4]
04c2: clear stack
04c3: push constant #0013
04c5: push constant #000a
04c7: set active entity mesh coordinates A=MeshX, B=MeshZ
04c8: clear stack
04c9: push constant #03c0
04cb: push constant #1f72
04cd: set active entity coordinates in mesh, A=XCoor, B=ZCoor
04ce: clear stack
04cf: push constant #0000
04d1: set active entity direction & facing A=DirectionAndFacing
04d2: jump [Addr=083d]
04d4: clear stack
04d5: push special [Type=0006]
04d7: push constant #001a
04d9: push A==B
04da: jump if !A [Addr=04ee]
04dc: clear stack
04dd: push constant #0013
04df: push constant #0008
04e1: set active entity mesh coordinates A=MeshX, B=MeshZ
04e2: clear stack
04e3: push constant #0720
04e5: push constant #171b
04e7: set active entity coordinates in mesh, A=XCoor, B=ZCoor
04e8: clear stack
04e9: push constant #00c0
04eb: set active entity direction & facing A=DirectionAndFacing
04ec: jump [Addr=083d]
04ee: clear stack
04ef: push special [Type=0006]
04f1: push constant #001b
04f3: push A==B
04f4: jump if !A [Addr=0508]
04f6: clear stack
04f7: push constant #000f
04f9: push constant #0008
04fb: set active entity mesh coordinates A=MeshX, B=MeshZ
04fc: clear stack
04fd: push constant #1817
04ff: push constant #1d0b
0501: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0502: clear stack
0503: push constant #0000
0505: set active entity direction & facing A=DirectionAndFacing
0506: jump [Addr=083d]
0508: clear stack
0509: push special [Type=0006]
050b: push constant #001c
050d: push A==B
050e: jump if !A [Addr=0522]
0510: clear stack
0511: push constant #0011
0513: push constant #0008
0515: set active entity mesh coordinates A=MeshX, B=MeshZ
0516: clear stack
0517: push constant #1cf4
0519: push constant #10a9
051b: set active entity coordinates in mesh, A=XCoor, B=ZCoor
051c: clear stack
051d: push constant #0060
051f: set active entity direction & facing A=DirectionAndFacing
0520: jump [Addr=083d]
0522: clear stack
0523: push special [Type=0006]
0525: push constant #001d
0527: push A==B
0528: jump if !A [Addr=053c]
052a: clear stack
052b: push constant #0020
052d: push constant #0001
052f: set active entity mesh coordinates A=MeshX, B=MeshZ
0530: clear stack
0531: push constant #0477
0533: push constant #16ad
0535: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0536: clear stack
0537: push constant #00e7
0539: set active entity direction & facing A=DirectionAndFacing
053a: jump [Addr=083d]
053c: clear stack
053d: push special [Type=0006]
053f: push constant #0020
0541: push A==B
0542: jump if !A [Addr=0597]
0544: clear stack
0545: push bit from bank 0 [Addr=03f1]
0547: jump if !A [Addr=0585]
0549: clear stack
054a: push bit from bank 0 [Addr=03f0]
054c: jump if !A [Addr=0553]
054e: clear stack
054f: push constant #0004
0551: load model A
0552: enter vehicle
0553: clear stack
0554: push bit from bank 0 [Addr=03f2]
0556: jump if !A [Addr=055d]
0558: clear stack
0559: push constant #0013
055b: load model A
055c: enter vehicle
055d: clear stack
055e: push bit from bank 0 [Addr=03f3]
0560: jump if !A [Addr=0567]
0562: clear stack
0563: push constant #0013
0565: load model A
0566: enter vehicle
0567: clear stack
0568: push bit from bank 0 [Addr=03f4]
056a: jump if !A [Addr=0571]
056c: clear stack
056d: push constant #0013
056f: load model A
0570: enter vehicle
0571: clear stack
0572: push bit from bank 0 [Addr=03f5]
0574: jump if !A [Addr=057b]
0576: clear stack
0577: push constant #0013
0579: load model A
057a: enter vehicle
057b: clear stack
057c: push bit from bank 0 [Addr=03f6]
057e: jump if !A [Addr=0585]
0580: clear stack
0581: push constant #0013
0583: load model A
0584: enter vehicle
0585: clear stack
0586: push special [Type=0000]
0588: push special [Type=0001]
058a: set active entity mesh coordinates A=MeshX, B=MeshZ
058b: clear stack
058c: push special [Type=0002]
058e: push special [Type=0003]
0590: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0591: clear stack
0592: push special [Type=0004]
0594: set active entity direction & facing A=DirectionAndFacing
0595: jump [Addr=083d]
0597: clear stack
0598: push special [Type=0006]
059a: push constant #0021
059c: push A==B
059d: jump if !A [Addr=05c0]
059f: clear stack
05a0: push bit from bank 0 [Addr=03f8]
05a2: jump if !A [Addr=05ae]
05a4: clear stack
05a5: push bit from bank 0 [Addr=03f9]
05a7: jump if !A [Addr=05ae]
05a9: clear stack
05aa: push constant #0006
05ac: load model A
05ad: enter vehicle
05ae: clear stack
05af: push special [Type=0000]
05b1: push special [Type=0001]
05b3: set active entity mesh coordinates A=MeshX, B=MeshZ
05b4: clear stack
05b5: push special [Type=0002]
05b7: push special [Type=0003]
05b9: set active entity coordinates in mesh, A=XCoor, B=ZCoor
05ba: clear stack
05bb: push special [Type=0004]
05bd: set active entity direction & facing A=DirectionAndFacing
05be: jump [Addr=083d]
05c0: clear stack
05c1: push special [Type=0006]
05c3: push constant #0022
05c5: push A==B
05c6: jump if !A [Addr=061b]
05c8: clear stack
05c9: push bit from bank 0 [Addr=03f1]
05cb: jump if !A [Addr=0609]
05cd: clear stack
05ce: push bit from bank 0 [Addr=03f0]
05d0: jump if !A [Addr=05d7]
05d2: clear stack
05d3: push constant #0004
05d5: load model A
05d6: enter vehicle
05d7: clear stack
05d8: push bit from bank 0 [Addr=03f2]
05da: jump if !A [Addr=05e1]
05dc: clear stack
05dd: push constant #0013
05df: load model A
05e0: enter vehicle
05e1: clear stack
05e2: push bit from bank 0 [Addr=03f3]
05e4: jump if !A [Addr=05eb]
05e6: clear stack
05e7: push constant #0013
05e9: load model A
05ea: enter vehicle
05eb: clear stack
05ec: push bit from bank 0 [Addr=03f4]
05ee: jump if !A [Addr=05f5]
05f0: clear stack
05f1: push constant #0013
05f3: load model A
05f4: enter vehicle
05f5: clear stack
05f6: push bit from bank 0 [Addr=03f5]
05f8: jump if !A [Addr=05ff]
05fa: clear stack
05fb: push constant #0013
05fd: load model A
05fe: enter vehicle
05ff: clear stack
0600: push bit from bank 0 [Addr=03f6]
0602: jump if !A [Addr=0609]
0604: clear stack
0605: push constant #0013
0607: load model A
0608: enter vehicle
0609: clear stack
060a: push special [Type=0000]
060c: push special [Type=0001]
060e: set active entity mesh coordinates A=MeshX, B=MeshZ
060f: clear stack
0610: push special [Type=0002]
0612: push special [Type=0003]
0614: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0615: clear stack
0616: push special [Type=0004]
0618: set active entity direction & facing A=DirectionAndFacing
0619: jump [Addr=083d]
061b: clear stack
061c: push special [Type=0006]
061e: push constant #0024
0620: push A==B
0621: jump if !A [Addr=062a]
0623: clear stack
0624: push constant #0008
0626: load model A
0627: set player entity
0628: jump [Addr=083d]
062a: clear stack
062b: push special [Type=0006]
062d: push constant #0025
062f: push A==B
0630: jump if !A [Addr=0639]
0632: clear stack
0633: push constant #0008
0635: load model A
0636: set player entity
0637: jump [Addr=083d]
0639: clear stack
063a: push special [Type=0006]
063c: push constant #0026
063e: push A==B
063f: jump if !A [Addr=0648]
0641: clear stack
0642: push constant #0008
0644: load model A
0645: set player entity
0646: jump [Addr=083d]
0648: clear stack
0649: push special [Type=0006]
064b: push constant #0027
064d: push A==B
064e: jump if !A [Addr=0657]
0650: clear stack
0651: push constant #0008
0653: load model A
0654: set player entity
0655: jump [Addr=083d]
0657: clear stack
0658: push special [Type=0006]
065a: push constant #0028
065c: push A==B
065d: jump if !A [Addr=067b]
065f: clear stack
0660: push bit from bank 0 [Addr=03fa]
0662: jump if !A [Addr=0669]
0664: clear stack
0665: push constant #0005
0667: load model A
0668: enter vehicle
0669: clear stack
066a: push constant #0006
066c: push constant #0013
066e: set active entity mesh coordinates A=MeshX, B=MeshZ
066f: clear stack
0670: push constant #1c3b
0672: push constant #0268
0674: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0675: clear stack
0676: push constant #0000
0678: set active entity direction & facing A=DirectionAndFacing
0679: jump [Addr=083d]
067b: clear stack
067c: push special [Type=0006]
067e: push constant #0029
0680: push A==B
0681: jump if !A [Addr=069b]
0683: clear stack
0684: push bit from bank 0 [Addr=03fc]
0686: jump if !A [Addr=068d]
0688: clear stack
0689: push constant #0003
068b: load model A
068c: enter vehicle
068d: clear stack
068e: push constant #0014
0690: push constant #0011
0692: set active entity mesh coordinates A=MeshX, B=MeshZ
0693: clear stack
0694: push constant #11d1
0696: push constant #18c9
0698: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0699: jump [Addr=083d]
069b: clear stack
069c: push special [Type=0006]
069e: push constant #002b
06a0: push A==B
06a1: jump if !A [Addr=06b5]
06a3: clear stack
06a4: push constant #000b
06a6: push constant #0010
06a8: set active entity mesh coordinates A=MeshX, B=MeshZ
06a9: clear stack
06aa: push constant #095a
06ac: push constant #1074
06ae: set active entity coordinates in mesh, A=XCoor, B=ZCoor
06af: clear stack
06b0: push constant #0080
06b2: set active entity direction & facing A=DirectionAndFacing
06b3: jump [Addr=083d]
06b5: clear stack
06b6: push special [Type=0006]
06b8: push constant #002c
06ba: push A==B
06bb: jump if !A [Addr=06cf]
06bd: clear stack
06be: push constant #000b
06c0: push constant #000f
06c2: set active entity mesh coordinates A=MeshX, B=MeshZ
06c3: clear stack
06c4: push constant #0f70
06c6: push constant #0e98
06c8: set active entity coordinates in mesh, A=XCoor, B=ZCoor
06c9: clear stack
06ca: push constant #0000
06cc: set active entity direction & facing A=DirectionAndFacing
06cd: jump [Addr=083d]
06cf: clear stack
06d0: push special [Type=0006]
06d2: push constant #002d
06d4: push A==B
06d5: jump if !A [Addr=0709]
06d7: clear stack
06d8: push bit from bank 0 [Addr=03fc]
06da: jump if !A [Addr=0707]
06dc: clear stack
06dd: push bit from bank 0 [Addr=03fd]
06df: jump if !A [Addr=0707]
06e1: clear stack
06e2: push bit from bank 0 [Addr=1c2f]
06e4: jump if !A [Addr=06eb]
06e6: clear stack
06e7: push constant #0013
06e9: load model A
06ea: enter vehicle
06eb: clear stack
06ec: push constant #0003
06ee: load model A
06ef: enter vehicle
06f0: clear stack
06f1: push bit from bank 0 [Addr=1c2e]
06f3: jump if !A [Addr=0707]
06f5: clear stack
06f6: push constant #0010
06f8: push constant #0004
06fa: set active entity mesh coordinates A=MeshX, B=MeshZ
06fb: clear stack
06fc: push constant #0033
06fe: push constant #0f8b
0700: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0701: clear stack
0702: push bit from bank 0 [Addr=1c2e]
0704: push constant #0000
0706: write to bank: A=Addr, B=Value
0707: jump [Addr=083d]
0709: clear stack
070a: push special [Type=0006]
070c: push constant #002e
070e: push A==B
070f: jump if !A [Addr=0723]
0711: clear stack
0712: push constant #000a
0714: push constant #0010
0716: set active entity mesh coordinates A=MeshX, B=MeshZ
0717: clear stack
0718: push constant #1707
071a: push constant #07e3
071c: set active entity coordinates in mesh, A=XCoor, B=ZCoor
071d: clear stack
071e: push constant #00e8
0720: set active entity direction & facing A=DirectionAndFacing
0721: jump [Addr=083d]
0723: clear stack
0724: push special [Type=0006]
0726: push constant #002f
0728: push A==B
0729: jump if !A [Addr=073d]
072b: clear stack
072c: push constant #000f
072e: push constant #0008
0730: set active entity mesh coordinates A=MeshX, B=MeshZ
0731: clear stack
0732: push constant #182b
0734: push constant #161f
0736: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0737: clear stack
0738: push constant #0080
073a: set active entity direction & facing A=DirectionAndFacing
073b: jump [Addr=083d]
073d: clear stack
073e: push special [Type=0006]
0740: push constant #0030
0742: push A==B
0743: jump if !A [Addr=0757]
0745: clear stack
0746: push constant #0010
0748: push constant #0006
074a: set active entity mesh coordinates A=MeshX, B=MeshZ
074b: clear stack
074c: push constant #13d9
074e: push constant #1420
0750: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0751: clear stack
0752: push constant #00e3
0754: set active entity direction & facing A=DirectionAndFacing
0755: jump [Addr=083d]
0757: clear stack
0758: push special [Type=0006]
075a: push constant #0031
075c: push A==B
075d: jump if !A [Addr=077b]
075f: clear stack
0760: push special [Type=0007]
0762: push constant #00fc
0764: push A&B
0765: push constant #0002
0767: push A|B
0768: unknown: A=?
0769: clear stack
076a: push constant #000a
076c: push constant #000e
076e: set active entity mesh coordinates A=MeshX, B=MeshZ
076f: clear stack
0770: push constant #0a37
0772: push constant #0fc1
0774: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0775: clear stack
0776: push constant #0080
0778: set active entity direction & facing A=DirectionAndFacing
0779: jump [Addr=083d]
077b: clear stack
077c: push special [Type=0006]
077e: push constant #0033
0780: push A==B
0781: jump if !A [Addr=0793]
0783: clear stack
0784: push bit from bank 0 [Addr=03fc]
0786: jump if !A [Addr=0791]
0788: clear stack
0789: push constant #0003
078b: load model A
078c: enter vehicle
078d: clear stack
078e: push constant #000a
0790: load model A
0791: jump [Addr=083d]
0793: clear stack
0794: push special [Type=0006]
0796: push constant #0035
0798: push A==B
0799: jump if !A [Addr=07ad]
079b: clear stack
079c: push special [Type=0000]
079e: push special [Type=0001]
07a0: set active entity mesh coordinates A=MeshX, B=MeshZ
07a1: clear stack
07a2: push special [Type=0002]
07a4: push special [Type=0003]
07a6: set active entity coordinates in mesh, A=XCoor, B=ZCoor
07a7: clear stack
07a8: push special [Type=0004]
07aa: set active entity direction & facing A=DirectionAndFacing
07ab: jump [Addr=083d]
07ad: clear stack
07ae: push special [Type=0006]
07b0: push constant #0036
07b2: push A==B
07b3: jump if !A [Addr=07d1]
07b5: clear stack
07b6: push bit from bank 0 [Addr=1a92]
07b8: jump if !A [Addr=07bf]
07ba: clear stack
07bb: push constant #000d
07bd: load model A
07be: enter vehicle
07bf: clear stack
07c0: push constant #0014
07c2: push constant #0011
07c4: set active entity mesh coordinates A=MeshX, B=MeshZ
07c5: clear stack
07c6: push constant #0fe1
07c8: push constant #1880
07ca: set active entity coordinates in mesh, A=XCoor, B=ZCoor
07cb: clear stack
07cc: push constant #00c0
07ce: set active entity direction & facing A=DirectionAndFacing
07cf: jump [Addr=083d]
07d1: clear stack
07d2: push special [Type=0006]
07d4: push constant #0037
07d6: push A==B
07d7: jump if !A [Addr=07eb]
07d9: clear stack
07da: push constant #000b
07dc: push constant #0016
07de: set active entity mesh coordinates A=MeshX, B=MeshZ
07df: clear stack
07e0: push constant #0b50
07e2: push constant #0247
07e4: set active entity coordinates in mesh, A=XCoor, B=ZCoor
07e5: clear stack
07e6: push constant #0000
07e8: set active entity direction & facing A=DirectionAndFacing
07e9: jump [Addr=083d]
07eb: clear stack
07ec: push special [Type=0006]
07ee: push constant #0039
07f0: push A==B
07f1: jump if !A [Addr=0805]
07f3: clear stack
07f4: push constant #0013
07f6: push constant #000a
07f8: set active entity mesh coordinates A=MeshX, B=MeshZ
07f9: clear stack
07fa: push constant #1d13
07fc: push constant #0f0c
07fe: set active entity coordinates in mesh, A=XCoor, B=ZCoor
07ff: clear stack
0800: push constant #0080
0802: set active entity direction & facing A=DirectionAndFacing
0803: jump [Addr=083d]
0805: clear stack
0806: push special [Type=0006]
0808: push constant #003a
080a: push A==B
080b: jump if !A [Addr=081f]
080d: clear stack
080e: push constant #0013
0810: push constant #000a
0812: set active entity mesh coordinates A=MeshX, B=MeshZ
0813: clear stack
0814: push constant #19f2
0816: push constant #00f9
0818: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0819: clear stack
081a: push constant #0019
081c: set active entity direction & facing A=DirectionAndFacing
081d: jump [Addr=083d]
081f: clear stack
0820: push special [Type=0006]
0822: push constant #003b
0824: push A==B
0825: jump if !A [Addr=083d]
0827: clear stack
0828: push bit from bank 0 [Addr=03fc]
082a: jump if !A [Addr=083d]
082c: clear stack
082d: push constant #0003
082f: load model A
0830: enter vehicle
0831: clear stack
0832: push constant #0010
0834: push constant #0004
0836: set active entity mesh coordinates A=MeshX, B=MeshZ
0837: clear stack
0838: push constant #0033
083a: push constant #0f8b
083c: set active entity coordinates in mesh, A=XCoor, B=ZCoor
083d: jump [Addr=0a6b]
083f: clear stack
0840: push bit from bank 0 [Addr=03db]
0842: push !A
0843: jump if !A [Addr=0854]
0845: clear stack
0846: push bit from bank 0 [Addr=1c34]
0848: jump if !A [Addr=0854]
084a: clear stack
084b: push constant #001d
084d: load model A
084e: clear stack
084f: push bit from bank 0 [Addr=1c3c]
0851: push constant #0001
0853: write to bank: A=Addr, B=Value
0854: clear stack
0855: push bit from bank 0 [Addr=03d8]
0857: jump if !A [Addr=086d]
0859: clear stack
085a: push bit from bank 0 [Addr=1c34]
085c: push !A
085d: jump if !A [Addr=086d]
085f: clear stack
0860: push bit from bank 0 [Addr=1c38]
0862: jump if !A [Addr=086d]
0864: clear stack
0865: push constant #0003
0867: load model A
0868: enter vehicle
0869: clear stack
086a: push constant #000b
086c: load model A
086d: clear stack
086e: push bit from bank 0 [Addr=03d0]
0870: push !A
0871: jump if !A [Addr=0877]
0873: clear stack
0874: push constant #0007
0876: load model A
0877: clear stack
0878: push bit from bank 0 [Addr=03d3]
087a: jump if !A [Addr=0880]
087c: clear stack
087d: push constant #0014
087f: load model A
0880: clear stack
0881: push bit from bank 0 [Addr=03d1]
0883: push !A
0884: jump if !A [Addr=088a]
0886: clear stack
0887: push constant #000f
0889: load model A
088a: clear stack
088b: push byte from bank 0 [Addr=0351]
088d: push !A
088e: jump if !A [Addr=0894]
0890: clear stack
0891: push constant #000c
0893: load model A
0894: clear stack
0895: push halfword from bank 0 [Addr=0000]
0897: push constant #062c
0899: push A<B
089a: jump if !A [Addr=08a0]
089c: clear stack
089d: push constant #0018
089f: load model A
08a0: clear stack
08a1: push constant #000e
08a3: load model A
08a4: clear stack
08a5: push constant #0010
08a7: load model A
08a8: clear stack
08a9: push constant #0019
08ab: load model A
08ac: clear stack
08ad: push bit from bank 0 [Addr=03d8]
08af: push !A
08b0: jump if !A [Addr=08be]
08b2: clear stack
08b3: push halfword from bank 0 [Addr=0000]
08b5: push constant #062c
08b7: push A>=B
08b8: jump if !A [Addr=08be]
08ba: clear stack
08bb: push constant #000b
08bd: load model A
08be: clear stack
08bf: push bit from bank 0 [Addr=1a93]
08c1: jump if !A [Addr=08c7]
08c3: clear stack
08c4: push constant #000a
08c6: load model A
08c7: clear stack
08c8: push bit from bank 0 [Addr=03f8]
08ca: jump if !A [Addr=08d0]
08cc: clear stack
08cd: push constant #0006
08cf: load model A
08d0: clear stack
08d1: push bit from bank 0 [Addr=03fa]
08d3: jump if !A [Addr=08d9]
08d5: clear stack
08d6: push constant #0005
08d8: load model A
08d9: clear stack
08da: push bit from bank 0 [Addr=03fc]
08dc: jump if !A [Addr=08e2]
08de: clear stack
08df: push constant #0003
08e1: load model A
08e2: clear stack
08e3: push bit from bank 0 [Addr=1a83]
08e5: jump if !A [Addr=08eb]
08e7: clear stack
08e8: push constant #000d
08ea: load model A
08eb: clear stack
08ec: push bit from bank 0 [Addr=1a92]
08ee: jump if !A [Addr=08f4]
08f0: clear stack
08f1: push constant #000d
08f3: load model A
08f4: clear stack
08f5: push bit from bank 0 [Addr=1c20]
08f7: jump if !A [Addr=092f]
08f9: clear stack
08fa: push bit from bank 0 [Addr=03f0]
08fc: jump if !A [Addr=0902]
08fe: clear stack
08ff: push constant #0004
0901: load model A
0902: clear stack
0903: push bit from bank 0 [Addr=03f2]
0905: jump if !A [Addr=090b]
0907: clear stack
0908: push constant #0013
090a: load model A
090b: clear stack
090c: push bit from bank 0 [Addr=03f3]
090e: jump if !A [Addr=0914]
0910: clear stack
0911: push constant #0013
0913: load model A
0914: clear stack
0915: push bit from bank 0 [Addr=03f4]
0917: jump if !A [Addr=091d]
0919: clear stack
091a: push constant #0013
091c: load model A
091d: clear stack
091e: push bit from bank 0 [Addr=03f5]
0920: jump if !A [Addr=0926]
0922: clear stack
0923: push constant #0013
0925: load model A
0926: clear stack
0927: push bit from bank 0 [Addr=03f6]
0929: jump if !A [Addr=092f]
092b: clear stack
092c: push constant #0013
092e: load model A
092f: clear stack
0930: push special [Type=000e]
0932: load model A
0933: set player entity
0934: clear stack
0935: push bit from bank 0 [Addr=1c20]
0937: jump if !A [Addr=09b8]
0939: clear stack
093a: push bit from bank 0 [Addr=03f1]
093c: jump if !A [Addr=0975]
093e: clear stack
093f: push bit from bank 0 [Addr=03f2]
0941: jump if !A [Addr=0947]
0943: clear stack
0944: push constant #0013
0946: load model A
0947: clear stack
0948: push bit from bank 0 [Addr=03f3]
094a: jump if !A [Addr=0950]
094c: clear stack
094d: push constant #0013
094f: load model A
0950: clear stack
0951: push bit from bank 0 [Addr=03f4]
0953: jump if !A [Addr=0959]
0955: clear stack
0956: push constant #0013
0958: load model A
0959: clear stack
095a: push bit from bank 0 [Addr=03f5]
095c: jump if !A [Addr=0962]
095e: clear stack
095f: push constant #0013
0961: load model A
0962: clear stack
0963: push bit from bank 0 [Addr=03f6]
0965: jump if !A [Addr=096b]
0967: clear stack
0968: push constant #0013
096a: load model A
096b: clear stack
096c: push bit from bank 0 [Addr=03f0]
096e: jump if !A [Addr=0974]
0970: clear stack
0971: push constant #0004
0973: load model A
0974: enter vehicle
0975: clear stack
0976: push special [Type=000a]
0978: jump if !A [Addr=09aa]
097a: unknown
097b: clear stack
097c: push bit from bank 0 [Addr=1c20]
097e: push constant #0000
0980: write to bank: A=Addr, B=Value
0981: clear stack
0982: push bit from bank 0 [Addr=1c21]
0984: jump if !A [Addr=0998]
0986: clear stack
0987: push constant #001b
0989: push constant #0011
098b: set active entity mesh coordinates A=MeshX, B=MeshZ
098c: clear stack
098d: push constant #1b42
098f: push constant #0737
0991: set active entity coordinates in mesh, A=XCoor, B=ZCoor
0992: clear stack
0993: push constant #00e0
0995: set active entity direction & facing A=DirectionAndFacing
0996: jump [Addr=09a8]
0998: clear stack
0999: push constant #001a
099b: push constant #0012
099d: set active entity mesh coordinates A=MeshX, B=MeshZ
099e: clear stack
099f: push constant #0cbd
09a1: push constant #0fe6
09a3: set active entity coordinates in mesh, A=XCoor, B=ZCoor
09a4: clear stack
09a5: push constant #0060
09a7: set active entity direction & facing A=DirectionAndFacing
09a8: jump [Addr=09b6]
09aa: clear stack
09ab: push byte from bank 0 [Addr=0381]
09ad: push constant #005a
09af: write to bank: A=Addr, B=Value
09b0: clear stack
09b1: push bit from bank 0 [Addr=1c20]
09b3: push constant #0000
09b5: write to bank: A=Addr, B=Value
09b6: jump [Addr=0a64]
09b8: unknown
09b9: clear stack
09ba: push bit from bank 0 [Addr=1c20]
09bc: push constant #0000
09be: write to bank: A=Addr, B=Value
09bf: clear stack
09c0: push byte from bank 0 [Addr=0054]
09c2: jump if !A [Addr=0a2e]
09c4: clear stack
09c5: push byte from bank 0 [Addr=0054]
09c7: push constant #0000
09c9: write to bank: A=Addr, B=Value
09ca: clear stack
09cb: push bit from bank 0 [Addr=03f1]
09cd: push constant #0001
09cf: write to bank: A=Addr, B=Value
09d0: clear stack
09d1: push bit from bank 0 [Addr=03f0]
09d3: push constant #0001
09d5: write to bank: A=Addr, B=Value
09d6: clear stack
09d7: push byte from bank 0 [Addr=0382]
09d9: push special [Type=0000]
09db: write to bank: A=Addr, B=Value
09dc: clear stack
09dd: push byte from bank 0 [Addr=0383]
09df: push special [Type=0001]
09e1: write to bank: A=Addr, B=Value
09e2: clear stack
09e3: push halfword from bank 0 [Addr=0388]
09e5: push special [Type=0002]
09e7: write to bank: A=Addr, B=Value
09e8: clear stack
09e9: push halfword from bank 0 [Addr=038a]
09eb: push special [Type=0003]
09ed: write to bank: A=Addr, B=Value
09ee: clear stack
09ef: push constant #0004
09f1: load model A
09f2: clear stack
09f3: push byte from bank 0 [Addr=0382]
09f5: push byte from bank 0 [Addr=0383]
09f7: set active entity mesh coordinates A=MeshX, B=MeshZ
09f8: clear stack
09f9: push halfword from bank 0 [Addr=0388]
09fb: push halfword from bank 0 [Addr=038a]
09fd: set active entity coordinates in mesh, A=XCoor, B=ZCoor
09fe: enter vehicle
09ff: clear stack
0a00: push bit from bank 0 [Addr=03f2]
0a02: jump if !A [Addr=0a08]
0a04: clear stack
0a05: push constant #0013
0a07: load model A
0a08: clear stack
0a09: push bit from bank 0 [Addr=03f3]
0a0b: jump if !A [Addr=0a11]
0a0d: clear stack
0a0e: push constant #0013
0a10: load model A
0a11: clear stack
0a12: push bit from bank 0 [Addr=03f4]
0a14: jump if !A [Addr=0a1a]
0a16: clear stack
0a17: push constant #0013
0a19: load model A
0a1a: clear stack
0a1b: push bit from bank 0 [Addr=03f5]
0a1d: jump if !A [Addr=0a23]
0a1f: clear stack
0a20: push constant #0013
0a22: load model A
0a23: clear stack
0a24: push bit from bank 0 [Addr=03f6]
0a26: jump if !A [Addr=0a2c]
0a28: clear stack
0a29: push constant #0013
0a2b: load model A
0a2c: jump [Addr=0a64]
0a2e: clear stack
0a2f: push bit from bank 0 [Addr=03f0]
0a31: jump if !A [Addr=0a37]
0a33: clear stack
0a34: push constant #0004
0a36: load model A
0a37: clear stack
0a38: push bit from bank 0 [Addr=03f2]
0a3a: jump if !A [Addr=0a40]
0a3c: clear stack
0a3d: push constant #0013
0a3f: load model A
0a40: clear stack
0a41: push bit from bank 0 [Addr=03f3]
0a43: jump if !A [Addr=0a49]
0a45: clear stack
0a46: push constant #0013
0a48: load model A
0a49: clear stack
0a4a: push bit from bank 0 [Addr=03f4]
0a4c: jump if !A [Addr=0a52]
0a4e: clear stack
0a4f: push constant #0013
0a51: load model A
0a52: clear stack
0a53: push bit from bank 0 [Addr=03f5]
0a55: jump if !A [Addr=0a5b]
0a57: clear stack
0a58: push constant #0013
0a5a: load model A
0a5b: clear stack
0a5c: push bit from bank 0 [Addr=03f6]
0a5e: jump if !A [Addr=0a64]
0a60: clear stack
0a61: push constant #0013
0a63: load model A
0a64: unknown
0a65: clear stack
0a66: push bit from bank 0 [Addr=1c20]
0a68: push constant #0000
0a6a: write to bank: A=Addr, B=Value
0a6b: clear stack
0a6c: push constant #0000
0a6e: push constant #0001
0a70: set active point: A=PointID, B=IsLightSource
0a71: clear stack
0a72: push constant #0016
0a74: push constant #000e
0a76: set point mesh coordinates: A=MeshX, B=MeshZ
0a77: clear stack
0a78: push constant #1505
0a7a: push constant #14e1
0a7c: set point coordinates in mesh: A=XCoor, B=ZCoor
0a7d: clear stack
0a7e: push constant #003c
0a80: push constant #005a
0a82: push constant #0064
0a84: set point terrain BGR: A=blue, B=green, C=red
0a85: clear stack
0a86: push constant #000a
0a88: push constant #000a
0a8a: set point dropoff parameters: A=?, B=?
0a8b: clear stack
0a8c: push constant #0000
0a8e: push constant #0000
0a90: push constant #0041
0a92: set point sky BGR: A=blue, B=green, C=red
0a93: clear stack
0a94: push constant #0091
0a96: push constant #00ff
0a98: push constant #00be
0a9a: set point ? BGR3: A=blue, B=green, C=red
0a9b: clear stack
0a9c: push constant #0001
0a9e: push constant #0001
0aa0: set active point: A=PointID, B=IsLightSource
0aa1: clear stack
0aa2: push constant #0010
0aa4: push constant #0004
0aa6: set point mesh coordinates: A=MeshX, B=MeshZ
0aa7: clear stack
0aa8: push constant #0001
0aaa: push constant #0f9f
0aac: set point coordinates in mesh: A=XCoor, B=ZCoor
0aad: clear stack
0aae: push constant #003c
0ab0: push constant #0078
0ab2: push constant #008c
0ab4: set point terrain BGR: A=blue, B=green, C=red
0ab5: clear stack
0ab6: push constant #000a
0ab8: push constant #000a
0aba: set point dropoff parameters: A=?, B=?
0abb: clear stack
0abc: push constant #0000
0abe: push constant #0005
0ac0: push constant #0037
0ac2: set point sky BGR: A=blue, B=green, C=red
0ac3: clear stack
0ac4: push constant #00c3
0ac6: push constant #00ff
0ac8: push constant #00eb
0aca: set point ? BGR3: A=blue, B=green, C=red
0acb: clear stack
0acc: push constant #0002
0ace: push constant #0001
0ad0: set active point: A=PointID, B=IsLightSource
0ad1: clear stack
0ad2: push constant #000a
0ad4: push constant #0014
0ad6: set point mesh coordinates: A=MeshX, B=MeshZ
0ad7: clear stack
0ad8: push constant #15e0
0ada: push constant #17f2
0adc: set point coordinates in mesh: A=XCoor, B=ZCoor
0add: clear stack
0ade: push constant #00ff
0ae0: push constant #0082
0ae2: push constant #0028
0ae4: set point terrain BGR: A=blue, B=green, C=red
0ae5: clear stack
0ae6: push constant #000a
0ae8: push constant #000a
0aea: set point dropoff parameters: A=?, B=?
0aeb: clear stack
0aec: push constant #0082
0aee: push constant #0078
0af0: push constant #00b4
0af2: set point sky BGR: A=blue, B=green, C=red
0af3: clear stack
0af4: push constant #00f0
0af6: push constant #0064
0af8: push constant #0032
0afa: set point ? BGR3: A=blue, B=green, C=red
0afb: clear stack
0afc: push constant #0003
0afe: push constant #0000
0b00: set active point: A=PointID, B=IsLightSource
0b01: clear stack
0b02: push constant #000e
0b04: push constant #0012
0b06: set point mesh coordinates: A=MeshX, B=MeshZ
0b07: clear stack
0b08: push constant #14ad
0b0a: push constant #1deb
0b0c: set point coordinates in mesh: A=XCoor, B=ZCoor
0b0d: clear stack
0b0e: push constant #0004
0b10: push constant #0000
0b12: set active point: A=PointID, B=IsLightSource
0b13: clear stack
0b14: push constant #0016
0b16: push constant #0012
0b18: set point mesh coordinates: A=MeshX, B=MeshZ
0b19: clear stack
0b1a: push constant #1b5d
0b1c: push constant #0042
0b1e: set point coordinates in mesh: A=XCoor, B=ZCoor
0b1f: clear stack
0b20: push constant #0005
0b22: push constant #0000
0b24: set active point: A=PointID, B=IsLightSource
0b25: clear stack
0b26: push constant #000f
0b28: push constant #0008
0b2a: set point mesh coordinates: A=MeshX, B=MeshZ
0b2b: clear stack
0b2c: push constant #18ad
0b2e: push constant #1270
0b30: set point coordinates in mesh: A=XCoor, B=ZCoor
0b31: clear stack
0b32: push constant #0009
0b34: push constant #0000
0b36: set active point: A=PointID, B=IsLightSource
0b37: clear stack
0b38: push constant #0016
0b3a: push constant #000e
0b3c: set point mesh coordinates: A=MeshX, B=MeshZ
0b3d: clear stack
0b3e: push constant #1505
0b40: push constant #14e1
0b42: set point coordinates in mesh: A=XCoor, B=ZCoor
0b43: clear stack
0b44: push constant #000a
0b46: push constant #0000
0b48: set active point: A=PointID, B=IsLightSource
0b49: clear stack
0b4a: push constant #0018
0b4c: push constant #0014
0b4e: set point mesh coordinates: A=MeshX, B=MeshZ
0b4f: clear stack
0b50: push constant #1a36
0b52: push constant #15dc
0b54: set point coordinates in mesh: A=XCoor, B=ZCoor
0b55: clear stack
0b56: push constant #000b
0b58: push constant #0000
0b5a: set active point: A=PointID, B=IsLightSource
0b5b: clear stack
0b5c: push constant #000d
0b5e: push constant #000e
0b60: set point mesh coordinates: A=MeshX, B=MeshZ
0b61: clear stack
0b62: push constant #0cb9
0b64: push constant #1763
0b66: set point coordinates in mesh: A=XCoor, B=ZCoor
0b67: clear stack
0b68: push constant #000c
0b6a: push constant #0000
0b6c: set active point: A=PointID, B=IsLightSource
0b6d: clear stack
0b6e: push constant #000d
0b70: push constant #0016
0b72: set point mesh coordinates: A=MeshX, B=MeshZ
0b73: clear stack
0b74: push constant #18d9
0b76: push constant #086d
0b78: set point coordinates in mesh: A=XCoor, B=ZCoor
0b79: clear stack
0b7a: push constant #000d
0b7c: push constant #0000
0b7e: set active point: A=PointID, B=IsLightSource
0b7f: clear stack
0b80: push constant #000b
0b82: push constant #000f
0b84: set point mesh coordinates: A=MeshX, B=MeshZ
0b85: clear stack
0b86: push constant #0b45
0b88: push constant #1896
0b8a: set point coordinates in mesh: A=XCoor, B=ZCoor
0b8b: clear stack
0b8c: push constant #000e
0b8e: push constant #0000
0b90: set active point: A=PointID, B=IsLightSource
0b91: clear stack
0b92: push constant #0010
0b94: push constant #0004
0b96: set point mesh coordinates: A=MeshX, B=MeshZ
0b97: clear stack
0b98: push constant #0001
0b9a: push constant #0f9f
0b9c: set point coordinates in mesh: A=XCoor, B=ZCoor
0b9d: clear stack
0b9e: push constant #000f
0ba0: push constant #0000
0ba2: set active point: A=PointID, B=IsLightSource
0ba3: clear stack
0ba4: push constant #001a
0ba6: push constant #0018
0ba8: set point mesh coordinates: A=MeshX, B=MeshZ
0ba9: clear stack
0baa: push constant #1b7e
0bac: push constant #13ab
0bae: set point coordinates in mesh: A=XCoor, B=ZCoor
0baf: clear stack
0bb0: push halfword from bank 0 [Addr=0000]
0bb2: push constant #063c
0bb4: push A==B
0bb5: jump if !A [Addr=0bbd]
0bb7: clear stack
0bb8: push constant #0007
0bba: send SoundFrameMagic command, A=?
0bbb: jump [Addr=0bd1]
0bbd: clear stack
0bbe: push bit from bank 0 [Addr=1a93]
0bc0: jump if !A [Addr=0bd1]
0bc2: clear stack
0bc3: push bit from bank 0 [Addr=1c2c]
0bc5: jump if !A [Addr=0bd1]
0bc7: clear stack
0bc8: push bit from bank 0 [Addr=1c29]
0bca: push !A
0bcb: jump if !A [Addr=0bd1]
0bcd: clear stack
0bce: push constant #0006
0bd0: send SoundFrameMagic command, A=?
0bd1: return
0bd2: clear stack
0bd3: push halfword from bank 0 [Addr=0000]
0bd5: push constant #04af
0bd7: push A<B
0bd8: jump if !A [Addr=0be2]
0bda: clear stack
0bdb: push constant #0032
0bdd: push constant #0000
0bdf: enter field scene: A=?, B=? (combine to form offset in field.tbl)
0be0: jump [Addr=0bf0]
0be2: clear stack
0be3: push halfword from bank 0 [Addr=0000]
0be5: push constant #04af
0be7: push A>B
0be8: jump if !A [Addr=0bf0]
0bea: clear stack
0beb: push constant #0032
0bed: push constant #0001
0bef: enter field scene: A=?, B=? (combine to form offset in field.tbl)
0bf0: return
0bf1: clear stack
0bf2: push byte from bank 1 [Addr=0002]
0bf4: push constant #0040
0bf6: unknown, A=?, B=?
0bf7: clear stack
0bf8: push byte from bank 1 [Addr=0002]
0bfa: move active entity to entity by model id?, A=ModelId
0bfb: clear stack
0bfc: push constant #0004
0bfe: push constant #0000
0c00: active entity play animation: A=AnimationID, B=shouldLoop
0c01: clear stack
0c02: push constant #000f
0c04: set wait frames A=NumFrames
0c05: wait
0c06: clear stack
0c07: push constant #0002
0c09: push constant #0001
0c0b: active entity play animation: A=AnimationID, B=shouldLoop
0c0c: clear stack
0c0d: push constant #0001
0c0f: set control lock A=isControlsEnabled
0c10: return
0c11: clear stack
0c12: push constant #0005
0c14: push constant #0000
0c16: active entity play animation: A=AnimationID, B=shouldLoop
0c17: clear stack
0c18: push constant #000f
0c1a: set wait frames A=NumFrames
0c1b: wait
0c1c: clear stack
0c1d: push constant #0000
0c1f: push constant #0001
0c21: active entity play animation: A=AnimationID, B=shouldLoop
0c22: clear stack
0c23: push byte from bank 1 [Addr=0003]
0c25: push constant #0050
0c27: push A+B
0c28: push constant #012c
0c2a: unknown
0c2b: clear stack
0c2c: push byte from bank 1 [Addr=0003]
0c2e: push constant #00c0
0c30: push A+B
0c31: set active entity direction & facing A=DirectionAndFacing
0c32: clear stack
0c33: push constant #0001
0c35: set control lock A=isControlsEnabled
0c36: clear stack
0c37: push constant #0000
0c39: set control lock A=isControlsEnabled
0c3a: return
0c3b: clear stack
0c3c: push special [Type=0004]
0c3e: push constant #0080
0c40: push A+B
0c41: set active entity direction & facing A=DirectionAndFacing
0c42: clear stack
0c43: push constant #0014
0c45: set active entity movespeed A=Speed
0c46: clear stack
0c47: push constant #0005
0c49: set wait frames A=NumFrames
0c4a: wait
0c4b: clear stack
0c4c: push constant #0000
0c4e: set active entity movespeed A=Speed
0c4f: clear stack
0c50: push constant #0000
0c52: push constant #0000
0c54: set window parameters, A=Mode, B=IsPermanent
0c55: clear stack
0c56: push special [Type=0008]
0c58: push constant #0000
0c5a: push A==B
0c5b: jump if !A [Addr=0c6f]
0c5d: wait for window ready
0c5e: clear stack
0c5f: push constant #0034
0c61: push constant #00a0
0c63: push constant #00d9
0c65: push constant #0029
0c67: set window dimensions: X, Y, W, H
0c68: wait for window ready
0c69: clear stack
0c6a: push constant #0031
0c6c: set window message: A=MesId
0c6d: jump [Addr=0ca1]
0c6f: clear stack
0c70: push special [Type=0008]
0c72: push constant #0001
0c74: push A==B
0c75: jump if !A [Addr=0c89]
0c77: wait for window ready
0c78: clear stack
0c79: push constant #004c
0c7b: push constant #00a0
0c7d: push constant #00a7
0c7f: push constant #0039
0c81: set window dimensions: X, Y, W, H
0c82: wait for window ready
0c83: clear stack
0c84: push constant #0032
0c86: set window message: A=MesId
0c87: jump [Addr=0ca1]
0c89: clear stack
0c8a: push special [Type=0008]
0c8c: push constant #0002
0c8e: push A==B
0c8f: jump if !A [Addr=0ca1]
0c91: wait for window ready
0c92: clear stack
0c93: push constant #0039
0c95: push constant #00a0
0c97: push constant #00cc
0c99: push constant #0039
0c9b: set window dimensions: X, Y, W, H
0c9c: wait for window ready
0c9d: clear stack
0c9e: push constant #0033
0ca0: set window message: A=MesId
0ca1: wait for message acknowledge
0ca2: clear stack
0ca3: push constant #0001
0ca5: set control lock A=isControlsEnabled
0ca6: clear stack
0ca7: push constant #0001
0ca9: set battle lock, A=EnableRandomEncounters
0caa: return
0cab: clear stack
0cac: push constant #0004
0cae: push constant #0000
0cb0: unknown, A=?, B=?
0cb1: clear stack
0cb2: push special [Type=0004]
0cb4: push constant #0080
0cb6: push A+B
0cb7: set active entity direction & facing A=DirectionAndFacing
0cb8: clear stack
0cb9: push constant #0014
0cbb: set active entity movespeed A=Speed
0cbc: clear stack
0cbd: push constant #0005
0cbf: set wait frames A=NumFrames
0cc0: wait
0cc1: clear stack
0cc2: push constant #0000
0cc4: set active entity movespeed A=Speed
0cc5: clear stack
0cc6: push constant #001e
0cc8: set wait frames A=NumFrames
0cc9: wait
0cca: clear stack
0ccb: push constant #0000
0ccd: push constant #0000
0ccf: set window parameters, A=Mode, B=IsPermanent
0cd0: clear stack
0cd1: push special [Type=0008]
0cd3: push constant #0000
0cd5: push A==B
0cd6: jump if !A [Addr=0cea]
0cd8: wait for window ready
0cd9: clear stack
0cda: push constant #002d
0cdc: push constant #00a0
0cde: push constant #00e6
0ce0: push constant #0029
0ce2: set window dimensions: X, Y, W, H
0ce3: wait for window ready
0ce4: clear stack
0ce5: push constant #0026
0ce7: set window message: A=MesId
0ce8: jump [Addr=0d02]
0cea: clear stack
0ceb: push special [Type=0008]
0ced: push constant #0001
0cef: push A==B
0cf0: jump if !A [Addr=0d02]
0cf2: wait for window ready
0cf3: clear stack
0cf4: push constant #003d
0cf6: push constant #00a0
0cf8: push constant #00c5
0cfa: push constant #0029
0cfc: set window dimensions: X, Y, W, H
0cfd: wait for window ready
0cfe: clear stack
0cff: push constant #0028
0d01: set window message: A=MesId
0d02: wait for message acknowledge
0d03: clear stack
0d04: push constant #001e
0d06: set wait frames A=NumFrames
0d07: wait
0d08: clear stack
0d09: push special [Type=0004]
0d0b: push constant #0080
0d0d: push A+B
0d0e: set active entity direction & facing A=DirectionAndFacing
0d0f: clear stack
0d10: push constant #0000
0d12: push constant #0000
0d14: set window parameters, A=Mode, B=IsPermanent
0d15: clear stack
0d16: push special [Type=0008]
0d18: push constant #0000
0d1a: push A==B
0d1b: jump if !A [Addr=0d2f]
0d1d: wait for window ready
0d1e: clear stack
0d1f: push constant #0050
0d21: push constant #00a0
0d23: push constant #00a0
0d25: push constant #0039
0d27: set window dimensions: X, Y, W, H
0d28: wait for window ready
0d29: clear stack
0d2a: push constant #0027
0d2c: set window message: A=MesId
0d2d: jump [Addr=0d47]
0d2f: clear stack
0d30: push special [Type=0008]
0d32: push constant #0001
0d34: push A==B
0d35: jump if !A [Addr=0d47]
0d37: wait for window ready
0d38: clear stack
0d39: push constant #003d
0d3b: push constant #00a0
0d3d: push constant #00c5
0d3f: push constant #0039
0d41: set window dimensions: X, Y, W, H
0d42: wait for window ready
0d43: clear stack
0d44: push constant #0029
0d46: set window message: A=MesId
0d47: wait for message acknowledge
0d48: clear stack
0d49: push bit from bank 0 [Addr=03f1]
0d4b: push constant #0000
0d4d: write to bank: A=Addr, B=Value
0d4e: clear stack
0d4f: push constant #0001
0d51: set battle lock, A=EnableRandomEncounters
0d52: clear stack
0d53: push constant #0001
0d55: set control lock A=isControlsEnabled
0d56: return
0d57: clear stack
0d58: push constant #0004
0d5a: push constant #0000
0d5c: unknown, A=?, B=?
0d5d: clear stack
0d5e: push constant #0000
0d60: push constant #0000
0d62: set window parameters, A=Mode, B=IsPermanent
0d63: clear stack
0d64: push special [Type=0008]
0d66: push constant #0000
0d68: push A==B
0d69: jump if !A [Addr=0d82]
0d6b: wait for window ready
0d6c: clear stack
0d6d: push constant #005b
0d6f: push constant #00a0
0d71: push constant #0089
0d73: push constant #0049
0d75: set window dimensions: X, Y, W, H
0d76: clear stack
0d77: push constant #002b
0d79: push constant #0002
0d7b: push constant #0003
0d7d: wait for window ready
0d7e: set window prompt: A=MesId, B=FirstChoiceMesId, C=LastChoiceMesId
0d7f: wait for prompt acknowledge?
0d80: jump [Addr=0dbe]
0d82: clear stack
0d83: push special [Type=0008]
0d85: push constant #0001
0d87: push A==B
0d88: jump if !A [Addr=0da1]
0d8a: wait for window ready
0d8b: clear stack
0d8c: push constant #0056
0d8e: push constant #00a0
0d90: push constant #0093
0d92: push constant #0049
0d94: set window dimensions: X, Y, W, H
0d95: clear stack
0d96: push constant #002d
0d98: push constant #0002
0d9a: push constant #0003
0d9c: wait for window ready
0d9d: set window prompt: A=MesId, B=FirstChoiceMesId, C=LastChoiceMesId
0d9e: wait for prompt acknowledge?
0d9f: jump [Addr=0dbe]
0da1: clear stack
0da2: push special [Type=0008]
0da4: push constant #0002
0da6: push A==B
0da7: jump if !A [Addr=0dbe]
0da9: wait for window ready
0daa: clear stack
0dab: push constant #0053
0dad: push constant #00a0
0daf: push constant #0099
0db1: push constant #0049
0db3: set window dimensions: X, Y, W, H
0db4: clear stack
0db5: push constant #002f
0db7: push constant #0002
0db9: push constant #0003
0dbb: wait for window ready
0dbc: set window prompt: A=MesId, B=FirstChoiceMesId, C=LastChoiceMesId
0dbd: wait for prompt acknowledge?
0dbe: clear stack
0dbf: push special [Type=000c]
0dc1: push constant #0002
0dc3: push A==B
0dc4: jump if !A [Addr=0e1c]
0dc6: clear stack
0dc7: push byte from bank 0 [Addr=038c]
0dc9: push special [Type=0009]
0dcb: write to bank: A=Addr, B=Value
0dcc: clear stack
0dcd: push byte from bank 0 [Addr=0055]
0dcf: push !A
0dd0: jump if !A [Addr=0dda]
0dd2: clear stack
0dd3: push byte from bank 0 [Addr=0055]
0dd5: push byte from bank 0 [Addr=038c]
0dd7: write to bank: A=Addr, B=Value
0dd8: jump [Addr=0e1c]
0dda: clear stack
0ddb: push byte from bank 0 [Addr=0056]
0ddd: push !A
0dde: jump if !A [Addr=0de8]
0de0: clear stack
0de1: push byte from bank 0 [Addr=0056]
0de3: push byte from bank 0 [Addr=038c]
0de5: write to bank: A=Addr, B=Value
0de6: jump [Addr=0e1c]
0de8: clear stack
0de9: push byte from bank 0 [Addr=0057]
0deb: push !A
0dec: jump if !A [Addr=0df6]
0dee: clear stack
0def: push byte from bank 0 [Addr=0057]
0df1: push byte from bank 0 [Addr=038c]
0df3: write to bank: A=Addr, B=Value
0df4: jump [Addr=0e1c]
0df6: clear stack
0df7: push byte from bank 0 [Addr=0058]
0df9: push !A
0dfa: jump if !A [Addr=0e04]
0dfc: clear stack
0dfd: push byte from bank 0 [Addr=0058]
0dff: push byte from bank 0 [Addr=038c]
0e01: write to bank: A=Addr, B=Value
0e02: jump [Addr=0e1c]
0e04: clear stack
0e05: push byte from bank 0 [Addr=0055]
0e07: push byte from bank 0 [Addr=0056]
0e09: write to bank: A=Addr, B=Value
0e0a: clear stack
0e0b: push byte from bank 0 [Addr=0056]
0e0d: push byte from bank 0 [Addr=0057]
0e0f: write to bank: A=Addr, B=Value
0e10: clear stack
0e11: push byte from bank 0 [Addr=0057]
0e13: push byte from bank 0 [Addr=0058]
0e15: write to bank: A=Addr, B=Value
0e16: clear stack
0e17: push byte from bank 0 [Addr=0058]
0e19: push byte from bank 0 [Addr=038c]
0e1b: write to bank: A=Addr, B=Value
0e1c: return
0e1d: clear stack
0e1e: push constant #0000
0e20: set control lock A=isControlsEnabled
0e21: clear stack
0e22: push constant #0000
0e24: set battle lock, A=EnableRandomEncounters
0e25: clear stack
0e26: push constant #0003
0e28: unknown: A=?
0e29: clear stack
0e2a: push bit from bank 0 [Addr=1c22]
0e2c: push !A
0e2d: jump if !A [Addr=0ebe]
0e2f: wait for window ready
0e30: clear stack
0e31: push constant #0060
0e33: push constant #00a0
0e35: push constant #007f
0e37: push constant #0029
0e39: set window dimensions: X, Y, W, H
0e3a: clear stack
0e3b: push constant #0000
0e3d: push constant #0001
0e3f: set window parameters, A=Mode, B=IsPermanent
0e40: wait for window ready
0e41: clear stack
0e42: push constant #0014
0e44: set window message: A=MesId
0e45: clear stack
0e46: push constant #0006
0e48: push constant #0000
0e4a: active entity play animation: A=AnimationID, B=shouldLoop
0e4b: clear stack
0e4c: push constant #0014
0e4e: set active entity movespeed A=Speed
0e4f: clear stack
0e50: push constant #0028
0e52: set wait frames A=NumFrames
0e53: wait
0e54: wait for window ready
0e55: wait for window ready
0e56: clear stack
0e57: push constant #0076
0e59: push constant #00a0
0e5b: push constant #0054
0e5d: push constant #0029
0e5f: set window dimensions: X, Y, W, H
0e60: clear stack
0e61: push constant #0000
0e63: push constant #0001
0e65: set window parameters, A=Mode, B=IsPermanent
0e66: wait for window ready
0e67: clear stack
0e68: push constant #0015
0e6a: set window message: A=MesId
0e6b: clear stack
0e6c: push constant #0000
0e6e: push constant #0001
0e70: active entity play animation: A=AnimationID, B=shouldLoop
0e71: clear stack
0e72: push constant #0014
0e74: set active entity movespeed A=Speed
0e75: clear stack
0e76: push special [Type=0004]
0e78: push constant #0080
0e7a: push A+B
0e7b: set active entity direction & facing A=DirectionAndFacing
0e7c: clear stack
0e7d: push special [Type=000d]
0e7f: jump if !A [Addr=0e88]
0e81: clear stack
0e82: push constant #0001
0e84: set wait frames A=NumFrames
0e85: wait
0e86: jump [Addr=0e7c]
0e88: wait for window ready
0e89: clear stack
0e8a: push constant #0000
0e8c: set active entity movespeed A=Speed
0e8d: clear stack
0e8e: push constant #000a
0e90: set wait frames A=NumFrames
0e91: wait
0e92: clear stack
0e93: push special [Type=0004]
0e95: push constant #0080
0e97: push A+B
0e98: set active entity direction & facing A=DirectionAndFacing
0e99: clear stack
0e9a: push constant #0007
0e9c: push constant #0000
0e9e: active entity play animation: A=AnimationID, B=shouldLoop
0e9f: wait for window ready
0ea0: clear stack
0ea1: push constant #0032
0ea3: push constant #00a0
0ea5: push constant #00dc
0ea7: push constant #0029
0ea9: set window dimensions: X, Y, W, H
0eaa: clear stack
0eab: push constant #0000
0ead: push constant #0000
0eaf: set window parameters, A=Mode, B=IsPermanent
0eb0: wait for window ready
0eb1: clear stack
0eb2: push constant #0016
0eb4: set window message: A=MesId
0eb5: wait for message acknowledge
0eb6: clear stack
0eb7: push bit from bank 0 [Addr=1c22]
0eb9: push constant #0001
0ebb: write to bank: A=Addr, B=Value
0ebc: jump [Addr=0f02]
0ebe: clear stack
0ebf: push constant #0028
0ec1: set active entity movespeed A=Speed
0ec2: clear stack
0ec3: push special [Type=0004]
0ec5: push constant #0080
0ec7: push A+B
0ec8: set active entity direction & facing A=DirectionAndFacing
0ec9: clear stack
0eca: push special [Type=000d]
0ecc: jump if !A [Addr=0ed5]
0ece: clear stack
0ecf: push constant #0001
0ed1: set wait frames A=NumFrames
0ed2: wait
0ed3: jump [Addr=0ec9]
0ed5: clear stack
0ed6: push constant #0000
0ed8: set active entity movespeed A=Speed
0ed9: clear stack
0eda: push constant #000a
0edc: set wait frames A=NumFrames
0edd: wait
0ede: clear stack
0edf: push special [Type=0004]
0ee1: push constant #0080
0ee3: push A+B
0ee4: set active entity direction & facing A=DirectionAndFacing
0ee5: clear stack
0ee6: push constant #0007
0ee8: push constant #0000
0eea: active entity play animation: A=AnimationID, B=shouldLoop
0eeb: wait for window ready
0eec: clear stack
0eed: push constant #003c
0eef: push constant #00a0
0ef1: push constant #00d2
0ef3: push constant #0039
0ef5: set window dimensions: X, Y, W, H
0ef6: clear stack
0ef7: push constant #0000
0ef9: push constant #0000
0efb: set window parameters, A=Mode, B=IsPermanent
0efc: wait for window ready
0efd: clear stack
0efe: push constant #0017
0f00: set window message: A=MesId
0f01: wait for message acknowledge
0f02: clear stack
0f03: push constant #0000
0f05: push constant #0001
0f07: active entity play animation: A=AnimationID, B=shouldLoop
0f08: clear stack
0f09: push constant #0001
0f0b: set control lock A=isControlsEnabled
0f0c: clear stack
0f0d: push constant #0001
0f0f: set battle lock, A=EnableRandomEncounters
0f10: return
0f11: clear stack
0f12: push constant #0000
0f14: set control lock A=isControlsEnabled
0f15: clear stack
0f16: push constant #0000
0f18: set battle lock, A=EnableRandomEncounters
0f19: clear stack
0f1a: push constant #0003
0f1c: unknown: A=?
0f1d: clear stack
0f1e: push bit from bank 0 [Addr=1c22]
0f20: push !A
0f21: jump if !A [Addr=0fb2]
0f23: wait for window ready
0f24: clear stack
0f25: push constant #006c
0f27: push constant #00a0
0f29: push constant #0068
0f2b: push constant #0029
0f2d: set window dimensions: X, Y, W, H
0f2e: clear stack
0f2f: push constant #0000
0f31: push constant #0001
0f33: set window parameters, A=Mode, B=IsPermanent
0f34: wait for window ready
0f35: clear stack
0f36: push constant #0018
0f38: set window message: A=MesId
0f39: clear stack
0f3a: push constant #0006
0f3c: push constant #0000
0f3e: active entity play animation: A=AnimationID, B=shouldLoop
0f3f: clear stack
0f40: push constant #0014
0f42: set active entity movespeed A=Speed
0f43: clear stack
0f44: push constant #0028
0f46: set wait frames A=NumFrames
0f47: wait
0f48: wait for window ready
0f49: wait for window ready
0f4a: clear stack
0f4b: push constant #004c
0f4d: push constant #00a0
0f4f: push constant #00a7
0f51: push constant #0029
0f53: set window dimensions: X, Y, W, H
0f54: clear stack
0f55: push constant #0000
0f57: push constant #0001
0f59: set window parameters, A=Mode, B=IsPermanent
0f5a: wait for window ready
0f5b: clear stack
0f5c: push constant #0019
0f5e: set window message: A=MesId
0f5f: clear stack
0f60: push constant #0000
0f62: push constant #0001
0f64: active entity play animation: A=AnimationID, B=shouldLoop
0f65: clear stack
0f66: push constant #0014
0f68: set active entity movespeed A=Speed
0f69: clear stack
0f6a: push special [Type=0004]
0f6c: push constant #0080
0f6e: push A+B
0f6f: set active entity direction & facing A=DirectionAndFacing
0f70: clear stack
0f71: push special [Type=000d]
0f73: jump if !A [Addr=0f7c]
0f75: clear stack
0f76: push constant #0001
0f78: set wait frames A=NumFrames
0f79: wait
0f7a: jump [Addr=0f70]
0f7c: wait for window ready
0f7d: clear stack
0f7e: push constant #0000
0f80: set active entity movespeed A=Speed
0f81: clear stack
0f82: push constant #000a
0f84: set wait frames A=NumFrames
0f85: wait
0f86: clear stack
0f87: push special [Type=0004]
0f89: push constant #0080
0f8b: push A+B
0f8c: set active entity direction & facing A=DirectionAndFacing
0f8d: clear stack
0f8e: push constant #0007
0f90: push constant #0000
0f92: active entity play animation: A=AnimationID, B=shouldLoop
0f93: wait for window ready
0f94: clear stack
0f95: push constant #0038
0f97: push constant #00a0
0f99: push constant #00cf
0f9b: push constant #0039
0f9d: set window dimensions: X, Y, W, H
0f9e: clear stack
0f9f: push constant #0000
0fa1: push constant #0000
0fa3: set window parameters, A=Mode, B=IsPermanent
0fa4: wait for window ready
0fa5: clear stack
0fa6: push constant #001a
0fa8: set window message: A=MesId
0fa9: wait for message acknowledge
0faa: clear stack
0fab: push bit from bank 0 [Addr=1c22]
0fad: push constant #0001
0faf: write to bank: A=Addr, B=Value
0fb0: jump [Addr=0ff6]
0fb2: clear stack
0fb3: push constant #0028
0fb5: set active entity movespeed A=Speed
0fb6: clear stack
0fb7: push special [Type=0004]
0fb9: push constant #0080
0fbb: push A+B
0fbc: set active entity direction & facing A=DirectionAndFacing
0fbd: clear stack
0fbe: push special [Type=000d]
0fc0: jump if !A [Addr=0fc9]
0fc2: clear stack
0fc3: push constant #0001
0fc5: set wait frames A=NumFrames
0fc6: wait
0fc7: jump [Addr=0fbd]
0fc9: clear stack
0fca: push constant #0000
0fcc: set active entity movespeed A=Speed
0fcd: clear stack
0fce: push constant #000a
0fd0: set wait frames A=NumFrames
0fd1: wait
0fd2: clear stack
0fd3: push special [Type=0004]
0fd5: push constant #0080
0fd7: push A+B
0fd8: set active entity direction & facing A=DirectionAndFacing
0fd9: clear stack
0fda: push constant #0007
0fdc: push constant #0000
0fde: active entity play animation: A=AnimationID, B=shouldLoop
0fdf: wait for window ready
0fe0: clear stack
0fe1: push constant #0033
0fe3: push constant #00a0
0fe5: push constant #00d9
0fe7: push constant #0039
0fe9: set window dimensions: X, Y, W, H
0fea: clear stack
0feb: push constant #0000
0fed: push constant #0000
0fef: set window parameters, A=Mode, B=IsPermanent
0ff0: wait for window ready
0ff1: clear stack
0ff2: push constant #001b
0ff4: set window message: A=MesId
0ff5: wait for message acknowledge
0ff6: clear stack
0ff7: push constant #0000
0ff9: push constant #0001
0ffb: active entity play animation: A=AnimationID, B=shouldLoop
0ffc: clear stack
0ffd: push constant #0001
0fff: set control lock A=isControlsEnabled
1000: clear stack
1001: push constant #0001
1003: set battle lock, A=EnableRandomEncounters
1004: return
1005: clear stack
1006: push constant #0000
1008: set control lock A=isControlsEnabled
1009: clear stack
100a: push constant #0000
100c: set battle lock, A=EnableRandomEncounters
100d: clear stack
100e: push constant #0003
1010: unknown: A=?
1011: clear stack
1012: push bit from bank 0 [Addr=1c22]
1014: push !A
1015: jump if !A [Addr=10a6]
1017: wait for window ready
1018: clear stack
1019: push constant #005d
101b: push constant #00a0
101d: push constant #0086
101f: push constant #0029
1021: set window dimensions: X, Y, W, H
1022: clear stack
1023: push constant #0000
1025: push constant #0001
1027: set window parameters, A=Mode, B=IsPermanent
1028: wait for window ready
1029: clear stack
102a: push constant #001c
102c: set window message: A=MesId
102d: clear stack
102e: push constant #0006
1030: push constant #0000
1032: active entity play animation: A=AnimationID, B=shouldLoop
1033: clear stack
1034: push constant #0014
1036: set active entity movespeed A=Speed
1037: clear stack
1038: push constant #0028
103a: set wait frames A=NumFrames
103b: wait
103c: wait for window ready
103d: wait for window ready
103e: clear stack
103f: push constant #0049
1041: push constant #00a0
1043: push constant #00ae
1045: push constant #0029
1047: set window dimensions: X, Y, W, H
1048: clear stack
1049: push constant #0000
104b: push constant #0001
104d: set window parameters, A=Mode, B=IsPermanent
104e: wait for window ready
104f: clear stack
1050: push constant #001d
1052: set window message: A=MesId
1053: clear stack
1054: push constant #0000
1056: push constant #0001
1058: active entity play animation: A=AnimationID, B=shouldLoop
1059: clear stack
105a: push constant #0014
105c: set active entity movespeed A=Speed
105d: clear stack
105e: push special [Type=0004]
1060: push constant #0080
1062: push A+B
1063: set active entity direction & facing A=DirectionAndFacing
1064: clear stack
1065: push special [Type=000d]
1067: jump if !A [Addr=1070]
1069: clear stack
106a: push constant #0001
106c: set wait frames A=NumFrames
106d: wait
106e: jump [Addr=1064]
1070: wait for window ready
1071: clear stack
1072: push constant #0000
1074: set active entity movespeed A=Speed
1075: clear stack
1076: push constant #000a
1078: set wait frames A=NumFrames
1079: wait
107a: clear stack
107b: push special [Type=0004]
107d: push constant #0080
107f: push A+B
1080: set active entity direction & facing A=DirectionAndFacing
1081: clear stack
1082: push constant #0007
1084: push constant #0000
1086: active entity play animation: A=AnimationID, B=shouldLoop
1087: wait for window ready
1088: clear stack
1089: push constant #0035
108b: push constant #00a0
108d: push constant #00d6
108f: push constant #0029
1091: set window dimensions: X, Y, W, H
1092: clear stack
1093: push constant #0000
1095: push constant #0000
1097: set window parameters, A=Mode, B=IsPermanent
1098: wait for window ready
1099: clear stack
109a: push constant #001e
109c: set window message: A=MesId
109d: wait for message acknowledge
109e: clear stack
109f: push bit from bank 0 [Addr=1c22]
10a1: push constant #0001
10a3: write to bank: A=Addr, B=Value
10a4: jump [Addr=10ea]
10a6: clear stack
10a7: push constant #0028
10a9: set active entity movespeed A=Speed
10aa: clear stack
10ab: push special [Type=0004]
10ad: push constant #0080
10af: push A+B
10b0: set active entity direction & facing A=DirectionAndFacing
10b1: clear stack
10b2: push special [Type=000d]
10b4: jump if !A [Addr=10bd]
10b6: clear stack
10b7: push constant #0001
10b9: set wait frames A=NumFrames
10ba: wait
10bb: jump [Addr=10b1]
10bd: clear stack
10be: push constant #0000
10c0: set active entity movespeed A=Speed
10c1: clear stack
10c2: push constant #000a
10c4: set wait frames A=NumFrames
10c5: wait
10c6: clear stack
10c7: push special [Type=0004]
10c9: push constant #0080
10cb: push A+B
10cc: set active entity direction & facing A=DirectionAndFacing
10cd: clear stack
10ce: push constant #0007
10d0: push constant #0000
10d2: active entity play animation: A=AnimationID, B=shouldLoop
10d3: wait for window ready
10d4: clear stack
10d5: push constant #0033
10d7: push constant #00a0
10d9: push constant #00d9
10db: push constant #0029
10dd: set window dimensions: X, Y, W, H
10de: clear stack
10df: push constant #0000
10e1: push constant #0000
10e3: set window parameters, A=Mode, B=IsPermanent
10e4: wait for window ready
10e5: clear stack
10e6: push constant #001f
10e8: set window message: A=MesId
10e9: wait for message acknowledge
10ea: clear stack
10eb: push constant #0000
10ed: push constant #0001
10ef: active entity play animation: A=AnimationID, B=shouldLoop
10f0: clear stack
10f1: push constant #0001
10f3: set control lock A=isControlsEnabled
10f4: clear stack
10f5: push constant #0001
10f7: set battle lock, A=EnableRandomEncounters
10f8: return
10f9: clear stack
10fa: push constant #0000
10fc: set control lock A=isControlsEnabled
10fd: clear stack
10fe: push constant #0000
1100: set battle lock, A=EnableRandomEncounters
1101: clear stack
1102: push constant #0003
1104: unknown: A=?
1105: clear stack
1106: push bit from bank 0 [Addr=1c22]
1108: push !A
1109: jump if !A [Addr=1182]
110b: wait for window ready
110c: clear stack
110d: push constant #0076
110f: push constant #00a0
1111: push constant #0054
1113: push constant #0019
1115: set window dimensions: X, Y, W, H
1116: clear stack
1117: push constant #0000
1119: push constant #0001
111b: set window parameters, A=Mode, B=IsPermanent
111c: wait for window ready
111d: clear stack
111e: push constant #0020
1120: set window message: A=MesId
1121: clear stack
1122: push constant #0001
1124: push -A
1125: push constant #0000
1127: active entity play animation: A=AnimationID, B=shouldLoop
1128: clear stack
1129: push constant #0014
112b: set active entity movespeed A=Speed
112c: clear stack
112d: push constant #001e
112f: set wait frames A=NumFrames
1130: wait
1131: wait for window ready
1132: clear stack
1133: push constant #0114
1135: play sound effect: A=SfxId
1136: clear stack
1137: push constant #0000
1139: push constant #0001
113b: active entity play animation: A=AnimationID, B=shouldLoop
113c: clear stack
113d: push constant #0014
113f: set active entity movespeed A=Speed
1140: clear stack
1141: push special [Type=0004]
1143: push constant #0080
1145: push A+B
1146: set active entity direction & facing A=DirectionAndFacing
1147: clear stack
1148: push special [Type=000d]
114a: jump if !A [Addr=1153]
114c: clear stack
114d: push constant #0001
114f: set wait frames A=NumFrames
1150: wait
1151: jump [Addr=1147]
1153: clear stack
1154: push constant #0000
1156: set active entity movespeed A=Speed
1157: clear stack
1158: push constant #001e
115a: set wait frames A=NumFrames
115b: wait
115c: clear stack
115d: push special [Type=0004]
115f: push constant #0080
1161: push A+B
1162: set active entity direction & facing A=DirectionAndFacing
1163: wait for window ready
1164: clear stack
1165: push constant #0058
1167: push constant #00a0
1169: push constant #0090
116b: push constant #0019
116d: set window dimensions: X, Y, W, H
116e: clear stack
116f: push constant #0000
1171: push constant #0000
1173: set window parameters, A=Mode, B=IsPermanent
1174: wait for window ready
1175: clear stack
1176: push constant #0021
1178: set window message: A=MesId
1179: wait for message acknowledge
117a: clear stack
117b: push bit from bank 0 [Addr=1c22]
117d: push constant #0001
117f: write to bank: A=Addr, B=Value
1180: jump [Addr=11db]
1182: clear stack
1183: push constant #0114
1185: play sound effect: A=SfxId
1186: clear stack
1187: push constant #0000
1189: push constant #0001
118b: active entity play animation: A=AnimationID, B=shouldLoop
118c: clear stack
118d: push constant #0028
118f: set active entity movespeed A=Speed
1190: clear stack
1191: push special [Type=0004]
1193: push constant #0080
1195: push A+B
1196: set active entity direction & facing A=DirectionAndFacing
1197: clear stack
1198: push special [Type=000d]
119a: jump if !A [Addr=11a3]
119c: clear stack
119d: push constant #0001
119f: set wait frames A=NumFrames
11a0: wait
11a1: jump [Addr=1197]
11a3: clear stack
11a4: push constant #0000
11a6: set active entity movespeed A=Speed
11a7: clear stack
11a8: push constant #000a
11aa: set wait frames A=NumFrames
11ab: wait
11ac: clear stack
11ad: push special [Type=0004]
11af: push constant #0080
11b1: push A+B
11b2: set active entity direction & facing A=DirectionAndFacing
11b3: clear stack
11b4: push bit from bank 0 [Addr=1c23]
11b6: push !A
11b7: jump if !A [Addr=11db]
11b9: clear stack
11ba: push constant #001e
11bc: set wait frames A=NumFrames
11bd: wait
11be: wait for window ready
11bf: clear stack
11c0: push constant #0058
11c2: push constant #00a0
11c4: push constant #0090
11c6: push constant #0019
11c8: set window dimensions: X, Y, W, H
11c9: clear stack
11ca: push constant #0000
11cc: push constant #0000
11ce: set window parameters, A=Mode, B=IsPermanent
11cf: wait for window ready
11d0: clear stack
11d1: push constant #0021
11d3: set window message: A=MesId
11d4: wait for message acknowledge
11d5: clear stack
11d6: push bit from bank 0 [Addr=1c23]
11d8: push constant #0001
11da: write to bank: A=Addr, B=Value
11db: clear stack
11dc: push constant #0001
11de: set battle lock, A=EnableRandomEncounters
11df: clear stack
11e0: push constant #0001
11e2: set control lock A=isControlsEnabled
11e3: return
11e4: clear stack
11e5: push bit from bank 0 [Addr=03f6]
11e7: push !A
11e8: jump if !A [Addr=12d4]
11ea: clear stack
11eb: push constant #0000
11ed: set control lock A=isControlsEnabled
11ee: clear stack
11ef: push constant #0000
11f1: set battle lock, A=EnableRandomEncounters
11f2: clear stack
11f3: push constant #0003
11f5: unknown: A=?
11f6: clear stack
11f7: push bit from bank 0 [Addr=1c22]
11f9: push !A
11fa: jump if !A [Addr=1273]
11fc: wait for window ready
11fd: clear stack
11fe: push constant #0076
1200: push constant #00a0
1202: push constant #0054
1204: push constant #0019
1206: set window dimensions: X, Y, W, H
1207: clear stack
1208: push constant #0000
120a: push constant #0001
120c: set window parameters, A=Mode, B=IsPermanent
120d: wait for window ready
120e: clear stack
120f: push constant #0020
1211: set window message: A=MesId
1212: clear stack
1213: push constant #0001
1215: push -A
1216: push constant #0000
1218: active entity play animation: A=AnimationID, B=shouldLoop
1219: clear stack
121a: push constant #0014
121c: set active entity movespeed A=Speed
121d: clear stack
121e: push constant #001e
1220: set wait frames A=NumFrames
1221: wait
1222: wait for window ready
1223: clear stack
1224: push constant #0114
1226: play sound effect: A=SfxId
1227: clear stack
1228: push constant #0000
122a: push constant #0001
122c: active entity play animation: A=AnimationID, B=shouldLoop
122d: clear stack
122e: push constant #0014
1230: set active entity movespeed A=Speed
1231: clear stack
1232: push special [Type=0004]
1234: push constant #0080
1236: push A+B
1237: set active entity direction & facing A=DirectionAndFacing
1238: clear stack
1239: push special [Type=000d]
123b: jump if !A [Addr=1244]
123d: clear stack
123e: push constant #0001
1240: set wait frames A=NumFrames
1241: wait
1242: jump [Addr=1238]
1244: clear stack
1245: push constant #0000
1247: set active entity movespeed A=Speed
1248: clear stack
1249: push constant #001e
124b: set wait frames A=NumFrames
124c: wait
124d: clear stack
124e: push special [Type=0004]
1250: push constant #0080
1252: push A+B
1253: set active entity direction & facing A=DirectionAndFacing
1254: wait for window ready
1255: clear stack
1256: push constant #0058
1258: push constant #00a0
125a: push constant #0090
125c: push constant #0019
125e: set window dimensions: X, Y, W, H
125f: clear stack
1260: push constant #0000
1262: push constant #0000
1264: set window parameters, A=Mode, B=IsPermanent
1265: wait for window ready
1266: clear stack
1267: push constant #0021
1269: set window message: A=MesId
126a: wait for message acknowledge
126b: clear stack
126c: push bit from bank 0 [Addr=1c22]
126e: push constant #0001
1270: write to bank: A=Addr, B=Value
1271: jump [Addr=12cc]
1273: clear stack
1274: push constant #0114
1276: play sound effect: A=SfxId
1277: clear stack
1278: push constant #0000
127a: push constant #0001
127c: active entity play animation: A=AnimationID, B=shouldLoop
127d: clear stack
127e: push constant #0028
1280: set active entity movespeed A=Speed
1281: clear stack
1282: push special [Type=0004]
1284: push constant #0080
1286: push A+B
1287: set active entity direction & facing A=DirectionAndFacing
1288: clear stack
1289: push special [Type=000d]
128b: jump if !A [Addr=1294]
128d: clear stack
128e: push constant #0001
1290: set wait frames A=NumFrames
1291: wait
1292: jump [Addr=1288]
1294: clear stack
1295: push constant #0000
1297: set active entity movespeed A=Speed
1298: clear stack
1299: push constant #000a
129b: set wait frames A=NumFrames
129c: wait
129d: clear stack
129e: push special [Type=0004]
12a0: push constant #0080
12a2: push A+B
12a3: set active entity direction & facing A=DirectionAndFacing
12a4: clear stack
12a5: push bit from bank 0 [Addr=1c23]
12a7: push !A
12a8: jump if !A [Addr=12cc]
12aa: clear stack
12ab: push constant #001e
12ad: set wait frames A=NumFrames
12ae: wait
12af: wait for window ready
12b0: clear stack
12b1: push constant #0058
12b3: push constant #00a0
12b5: push constant #0090
12b7: push constant #0019
12b9: set window dimensions: X, Y, W, H
12ba: clear stack
12bb: push constant #0000
12bd: push constant #0000
12bf: set window parameters, A=Mode, B=IsPermanent
12c0: wait for window ready
12c1: clear stack
12c2: push constant #0021
12c4: set window message: A=MesId
12c5: wait for message acknowledge
12c6: clear stack
12c7: push bit from bank 0 [Addr=1c23]
12c9: push constant #0001
12cb: write to bank: A=Addr, B=Value
12cc: clear stack
12cd: push constant #0001
12cf: set battle lock, A=EnableRandomEncounters
12d0: clear stack
12d1: push constant #0001
12d3: set control lock A=isControlsEnabled
12d4: return
12d5: clear stack
12d6: push constant #0000
12d8: set control lock A=isControlsEnabled
12d9: clear stack
12da: push constant #0006
12dc: push constant #0000
12de: unknown, A=?, B=?
12df: clear stack
12e0: push special [Type=0004]
12e2: push constant #0080
12e4: push A+B
12e5: set active entity direction & facing A=DirectionAndFacing
12e6: clear stack
12e7: push constant #0014
12e9: set active entity movespeed A=Speed
12ea: clear stack
12eb: push constant #0005
12ed: set wait frames A=NumFrames
12ee: wait
12ef: clear stack
12f0: push constant #0000
12f2: set active entity movespeed A=Speed
12f3: clear stack
12f4: push special [Type=0004]
12f6: push constant #0080
12f8: push A+B
12f9: set active entity direction & facing A=DirectionAndFacing
12fa: clear stack
12fb: push constant #0007
12fd: push constant #0000
12ff: active entity play animation: A=AnimationID, B=shouldLoop
1300: clear stack
1301: push constant #001e
1303: set wait frames A=NumFrames
1304: wait
1305: clear stack
1306: push constant #0000
1308: push constant #0000
130a: set window parameters, A=Mode, B=IsPermanent
130b: clear stack
130c: push special [Type=0008]
130e: push constant #0000
1310: push A==B
1311: jump if !A [Addr=1325]
1313: wait for window ready
1314: clear stack
1315: push constant #003f
1317: push constant #00a0
1319: push constant #00c1
131b: push constant #0029
131d: set window dimensions: X, Y, W, H
131e: wait for window ready
131f: clear stack
1320: push constant #0023
1322: set window message: A=MesId
1323: jump [Addr=133d]
1325: clear stack
1326: push special [Type=0008]
1328: push constant #0001
132a: push A==B
132b: jump if !A [Addr=133d]
132d: wait for window ready
132e: clear stack
132f: push constant #0038
1331: push constant #00a0
1333: push constant #00cf
1335: push constant #0029
1337: set window dimensions: X, Y, W, H
1338: wait for window ready
1339: clear stack
133a: push constant #0024
133c: set window message: A=MesId
133d: wait for message acknowledge
133e: clear stack
133f: push constant #0000
1341: push constant #0001
1343: active entity play animation: A=AnimationID, B=shouldLoop
1344: clear stack
1345: push constant #0001
1347: set control lock A=isControlsEnabled
1348: return
1349: clear stack
134a: push constant #0006
134c: push constant #0000
134e: unknown, A=?, B=?
134f: clear stack
1350: push special [Type=0004]
1352: push constant #0080
1354: push A+B
1355: set active entity direction & facing A=DirectionAndFacing
1356: clear stack
1357: push constant #0014
1359: set active entity movespeed A=Speed
135a: clear stack
135b: push constant #0014
135d: set wait frames A=NumFrames
135e: wait
135f: clear stack
1360: push constant #0000
1362: set active entity movespeed A=Speed
1363: clear stack
1364: push special [Type=0004]
1366: push constant #0080
1368: push A+B
1369: set active entity direction & facing A=DirectionAndFacing
136a: clear stack
136b: push constant #0014
136d: set wait frames A=NumFrames
136e: wait
136f: clear stack
1370: push constant #0007
1372: push constant #0000
1374: active entity play animation: A=AnimationID, B=shouldLoop
1375: clear stack
1376: push constant #0028
1378: set wait frames A=NumFrames
1379: wait
137a: clear stack
137b: push constant #0000
137d: push constant #0000
137f: set window parameters, A=Mode, B=IsPermanent
1380: clear stack
1381: push special [Type=0008]
1383: push constant #0000
1385: push A==B
1386: jump if !A [Addr=139a]
1388: wait for window ready
1389: clear stack
138a: push constant #003f
138c: push constant #00a0
138e: push constant #00c1
1390: push constant #0029
1392: set window dimensions: X, Y, W, H
1393: wait for window ready
1394: clear stack
1395: push constant #0023
1397: set window message: A=MesId
1398: jump [Addr=13b2]
139a: clear stack
139b: push special [Type=0008]
139d: push constant #0001
139f: push A==B
13a0: jump if !A [Addr=13b2]
13a2: wait for window ready
13a3: clear stack
13a4: push constant #0038
13a6: push constant #00a0
13a8: push constant #00cf
13aa: push constant #0029
13ac: set window dimensions: X, Y, W, H
13ad: wait for window ready
13ae: clear stack
13af: push constant #0024
13b1: set window message: A=MesId
13b2: wait for message acknowledge
13b3: clear stack
13b4: push constant #0000
13b6: push constant #0001
13b8: active entity play animation: A=AnimationID, B=shouldLoop
13b9: clear stack
13ba: push constant #0001
13bc: set battle lock, A=EnableRandomEncounters
13bd: clear stack
13be: push constant #0001
13c0: set control lock A=isControlsEnabled
13c1: return
13c2: clear stack
13c3: push constant #0000
13c5: set control lock A=isControlsEnabled
13c6: clear stack
13c7: push constant #0000
13c9: set battle lock, A=EnableRandomEncounters
13ca: clear stack
13cb: push constant #0000
13cd: push constant #0000
13cf: active entity play animation: A=AnimationID, B=shouldLoop
13d0: clear stack
13d1: push constant #0090
13d3: play sound effect: A=SfxId
13d4: clear stack
13d5: push constant #0014
13d7: unknown, A=?
13d8: clear stack
13d9: push constant #0006
13db: set wait frames A=NumFrames
13dc: wait
13dd: clear stack
13de: push constant #0014
13e0: unknown, A=?
13e1: clear stack
13e2: push constant #000e
13e4: set wait frames A=NumFrames
13e5: wait
13e6: clear stack
13e7: push constant #0014
13e9: unknown, A=?
13ea: clear stack
13eb: push constant #0006
13ed: set wait frames A=NumFrames
13ee: wait
13ef: clear stack
13f0: push constant #0014
13f2: set wait frames A=NumFrames
13f3: wait
13f4: wait for window ready
13f5: clear stack
13f6: push constant #0080
13f8: push constant #00a0
13fa: push constant #0040
13fc: push constant #0019
13fe: set window dimensions: X, Y, W, H
13ff: clear stack
1400: push constant #0000
1402: push constant #0000
1404: set window parameters, A=Mode, B=IsPermanent
1405: wait for window ready
1406: clear stack
1407: push constant #0022
1409: set window message: A=MesId
140a: wait for message acknowledge
140b: clear stack
140c: push constant #0090
140e: play sound effect: A=SfxId
140f: clear stack
1410: push constant #0002
1412: set wait frames A=NumFrames
1413: wait
1414: clear stack
1415: push constant #0064
1417: set active entity movespeed A=Speed
1418: clear stack
1419: push constant #0002
141b: set wait frames A=NumFrames
141c: wait
141d: clear stack
141e: push constant #0000
1420: set active entity movespeed A=Speed
1421: clear stack
1422: push constant #0014
1424: unknown, A=?
1425: clear stack
1426: push constant #0006
1428: set wait frames A=NumFrames
1429: wait
142a: clear stack
142b: push constant #0014
142d: unknown, A=?
142e: clear stack
142f: push constant #000e
1431: set wait frames A=NumFrames
1432: wait
1433: clear stack
1434: push constant #0014
1436: unknown, A=?
1437: clear stack
1438: push constant #0006
143a: set wait frames A=NumFrames
143b: wait
143c: clear stack
143d: push constant #0090
143f: play sound effect: A=SfxId
1440: clear stack
1441: push constant #0002
1443: set wait frames A=NumFrames
1444: wait
1445: clear stack
1446: push constant #0064
1448: set active entity movespeed A=Speed
1449: clear stack
144a: push constant #0002
144c: set wait frames A=NumFrames
144d: wait
144e: clear stack
144f: push constant #0000
1451: set active entity movespeed A=Speed
1452: clear stack
1453: push constant #0015
1455: unknown, A=?
1456: clear stack
1457: push constant #0004
1459: set wait frames A=NumFrames
145a: wait
145b: clear stack
145c: push constant #0015
145e: unknown, A=?
145f: clear stack
1460: push constant #0004
1462: set wait frames A=NumFrames
1463: wait
1464: clear stack
1465: push constant #0015
1467: unknown, A=?
1468: clear stack
1469: push constant #0004
146b: set wait frames A=NumFrames
146c: wait
146d: clear stack
146e: push constant #0016
1470: unknown, A=?
1471: clear stack
1472: push constant #003c
1474: set wait frames A=NumFrames
1475: wait
1476: clear stack
1477: push constant #0017
1479: unknown, A=?
147a: clear stack
147b: push constant #0005
147d: push constant #0000
147f: active entity play animation: A=AnimationID, B=shouldLoop
1480: clear stack
1481: push constant #00fa
1483: play sound effect: A=SfxId
1484: clear stack
1485: push constant #000a
1487: set wait frames A=NumFrames
1488: wait
1489: clear stack
148a: push constant #0005
148c: push constant #0000
148e: active entity play animation: A=AnimationID, B=shouldLoop
148f: clear stack
1490: push constant #003c
1492: set wait frames A=NumFrames
1493: wait
1494: unknown
1495: clear stack
1496: push constant #0000
1498: set control lock A=isControlsEnabled
1499: clear stack
149a: push constant #0014
149c: set wait frames A=NumFrames
149d: wait
149e: clear stack
149f: push bit from bank 0 [Addr=0e79]
14a1: push constant #0001
14a3: write to bank: A=Addr, B=Value
14a4: clear stack
14a5: push constant #0000
14a7: push constant #0001
14a9: active entity play animation: A=AnimationID, B=shouldLoop
14aa: clear stack
14ab: push special [Type=0008]
14ad: set active entity, A=ModelId
14ae: clear stack
14af: push constant #ffff
14b1: run function 17: A=ModelId
14b2: return
14b3: clear stack
14b4: push bit from bank 0 [Addr=0e78]
14b6: jump if !A [Addr=152e]
14b8: clear stack
14b9: push bit from bank 0 [Addr=0e7e]
14bb: push !A
14bc: jump if !A [Addr=1504]
14be: clear stack
14bf: push bit from bank 0 [Addr=0e7d]
14c1: jump if !A [Addr=14da]
14c3: clear stack
14c4: push constant #0000
14c6: set battle lock, A=EnableRandomEncounters
14c7: clear stack
14c8: push constant #0000
14ca: set control lock A=isControlsEnabled
14cb: clear stack
14cc: push constant #0014
14ce: set wait frames A=NumFrames
14cf: wait
14d0: clear stack
14d1: push special [Type=0008]
14d3: set active entity, A=ModelId
14d4: clear stack
14d5: push constant #ffff
14d7: run function 12: A=ModelId
14d8: jump [Addr=1502]
14da: clear stack
14db: push constant #0000
14dd: set control lock A=isControlsEnabled
14de: clear stack
14df: push special [Type=0008]
14e1: push constant #00c0
14e3: unknown, A=?, B=?
14e4: clear stack
14e5: push byte from bank 1 [Addr=0002]
14e7: push special [Type=000f]
14e9: write to bank: A=Addr, B=Value
14ea: clear stack
14eb: push special [Type=0008]
14ed: set active entity, A=ModelId
14ee: clear stack
14ef: push constant #ffff
14f1: run function 10: A=ModelId
14f2: unknown
14f3: enter vehicle
14f4: clear stack
14f5: push special [Type=0008]
14f7: push constant #0013
14f9: push A==B
14fa: jump if !A [Addr=1502]
14fc: clear stack
14fd: push bit from bank 0 [Addr=03f1]
14ff: push constant #0001
1501: write to bank: A=Addr, B=Value
1502: jump [Addr=152c]
1504: clear stack
1505: push constant #0000
1507: set control lock A=isControlsEnabled
1508: clear stack
1509: push special [Type=0008]
150b: push constant #00c0
150d: unknown, A=?, B=?
150e: clear stack
150f: push byte from bank 1 [Addr=0002]
1511: push special [Type=000f]
1513: write to bank: A=Addr, B=Value
1514: clear stack
1515: push special [Type=0008]
1517: set active entity, A=ModelId
1518: clear stack
1519: push constant #ffff
151b: run function 10: A=ModelId
151c: unknown
151d: enter vehicle
151e: clear stack
151f: push special [Type=0008]
1521: push constant #0013
1523: push A==B
1524: jump if !A [Addr=152c]
1526: clear stack
1527: push bit from bank 0 [Addr=03f1]
1529: push constant #0001
152b: write to bank: A=Addr, B=Value
152c: jump [Addr=1556]
152e: clear stack
152f: push constant #0000
1531: set control lock A=isControlsEnabled
1532: clear stack
1533: push special [Type=0008]
1535: push constant #00c0
1537: unknown, A=?, B=?
1538: clear stack
1539: push byte from bank 1 [Addr=0002]
153b: push special [Type=000f]
153d: write to bank: A=Addr, B=Value
153e: clear stack
153f: push special [Type=0008]
1541: set active entity, A=ModelId
1542: clear stack
1543: push constant #ffff
1545: run function 10: A=ModelId
1546: unknown
1547: enter vehicle
1548: clear stack
1549: push special [Type=0008]
154b: push constant #0013
154d: push A==B
154e: jump if !A [Addr=1556]
1550: clear stack
1551: push bit from bank 0 [Addr=03f1]
1553: push constant #0001
1555: write to bank: A=Addr, B=Value
1556: return
1557: clear stack
1558: push constant #000b
155a: play sound effect: A=SfxId
155b: clear stack
155c: push constant #0000
155e: set control lock A=isControlsEnabled
155f: clear stack
1560: push constant #0023
1562: set active entity movespeed (honor walkmesh), A=speed
1563: clear stack
1564: push special [Type=0004]
1566: set active entity direction & facing A=DirectionAndFacing
1567: clear stack
1568: push special [Type=0004]
156a: push constant #0080
156c: push A+B
156d: set active entity direction, A=Direction
156e: clear stack
156f: push constant #00fa
1571: push constant #0000
1573: fade out?, A=?, B=?
1574: clear stack
1575: push constant #0003
1577: set wait frames A=NumFrames
1578: wait
1579: clear stack
157a: push constant #00fa
157c: push constant #0000
157e: fade in?, A=?, B=?
157f: clear stack
1580: push constant #0007
1582: set wait frames A=NumFrames
1583: wait
1584: clear stack
1585: push constant #0000
1587: set active entity movespeed A=Speed
1588: wait for window ready
1589: clear stack
158a: push constant #0047
158c: push constant #00a0
158e: push constant #00b1
1590: push constant #0039
1592: set window dimensions: X, Y, W, H
1593: clear stack
1594: push constant #0000
1596: push constant #0000
1598: set window parameters, A=Mode, B=IsPermanent
1599: wait for window ready
159a: clear stack
159b: push constant #0036
159d: set window message: A=MesId
159e: wait for message acknowledge
159f: clear stack
15a0: push constant #0001
15a2: set control lock A=isControlsEnabled
15a3: return
15a4: clear stack
15a5: push constant #0000
15a7: set control lock A=isControlsEnabled
15a8: clear stack
15a9: push constant #0028
15ab: set active entity movespeed (honor walkmesh), A=speed
15ac: clear stack
15ad: push special [Type=0004]
15af: set active entity direction & facing A=DirectionAndFacing
15b0: clear stack
15b1: push special [Type=0004]
15b3: push constant #0080
15b5: push A+B
15b6: set active entity direction, A=Direction
15b7: clear stack
15b8: push constant #001e
15ba: set wait frames A=NumFrames
15bb: wait
15bc: clear stack
15bd: push constant #0000
15bf: set active entity movespeed A=Speed
15c0: wait for window ready
15c1: clear stack
15c2: push constant #003a
15c4: push constant #00a0
15c6: push constant #00e0
15c8: push constant #0039
15ca: set window dimensions: X, Y, W, H
15cb: clear stack
15cc: push constant #0000
15ce: push constant #0000
15d0: set window parameters, A=Mode, B=IsPermanent
15d1: wait for window ready
15d2: clear stack
15d3: push constant #0025
15d5: set window message: A=MesId
15d6: clear stack
15d7: push constant #0001
15d9: set control lock A=isControlsEnabled
15da: return
15db: clear stack
15dc: push constant #000b
15de: play sound effect: A=SfxId
15df: clear stack
15e0: push constant #0000
15e2: set control lock A=isControlsEnabled
15e3: clear stack
15e4: push constant #0023
15e6: set active entity movespeed (honor walkmesh), A=speed
15e7: clear stack
15e8: push special [Type=0004]
15ea: set active entity direction & facing A=DirectionAndFacing
15eb: clear stack
15ec: push special [Type=0004]
15ee: push constant #0080
15f0: push A+B
15f1: set active entity direction, A=Direction
15f2: clear stack
15f3: push constant #00fa
15f5: push constant #0000
15f7: fade out?, A=?, B=?
15f8: clear stack
15f9: push constant #0003
15fb: set wait frames A=NumFrames
15fc: wait
15fd: clear stack
15fe: push constant #00fa
1600: push constant #0000
1602: fade in?, A=?, B=?
1603: clear stack
1604: push constant #0007
1606: set wait frames A=NumFrames
1607: wait
1608: clear stack
1609: push constant #0000
160b: set active entity movespeed A=Speed
160c: wait for window ready
160d: clear stack
160e: push constant #0030
1610: push constant #00a0
1612: push constant #00d2
1614: push constant #0039
1616: set window dimensions: X, Y, W, H
1617: clear stack
1618: push constant #0000
161a: push constant #0000
161c: set window parameters, A=Mode, B=IsPermanent
161d: wait for window ready
161e: clear stack
161f: push constant #003c
1621: set window message: A=MesId
1622: clear stack
1623: push constant #0001
1625: set control lock A=isControlsEnabled
1626: return
1627: clear stack
1628: push constant #000b
162a: play sound effect: A=SfxId
162b: clear stack
162c: push constant #0000
162e: set control lock A=isControlsEnabled
162f: clear stack
1630: push constant #0014
1632: set active entity movespeed (honor walkmesh), A=speed
1633: clear stack
1634: push special [Type=0004]
1636: set active entity direction & facing A=DirectionAndFacing
1637: clear stack
1638: push special [Type=0004]
163a: push constant #0080
163c: push A+B
163d: set active entity direction, A=Direction
163e: clear stack
163f: push constant #00fa
1641: push constant #0000
1643: fade out?, A=?, B=?
1644: clear stack
1645: push constant #0003
1647: set wait frames A=NumFrames
1648: wait
1649: clear stack
164a: push constant #00fa
164c: push constant #0000
164e: fade in?, A=?, B=?
164f: clear stack
1650: push constant #0003
1652: set wait frames A=NumFrames
1653: wait
1654: clear stack
1655: push constant #0000
1657: set active entity movespeed A=Speed
1658: return
1659: clear stack
165a: push constant #000b
165c: play sound effect: A=SfxId
165d: clear stack
165e: push constant #0000
1660: set control lock A=isControlsEnabled
1661: clear stack
1662: push constant #0014
1664: set active entity movespeed (honor walkmesh), A=speed
1665: clear stack
1666: push special [Type=0004]
1668: set active entity direction & facing A=DirectionAndFacing
1669: clear stack
166a: push special [Type=0004]
166c: push constant #0080
166e: push A+B
166f: set active entity direction, A=Direction
1670: clear stack
1671: push constant #00fa
1673: push constant #0000
1675: fade out?, A=?, B=?
1676: clear stack
1677: push constant #0003
1679: set wait frames A=NumFrames
167a: wait
167b: clear stack
167c: push constant #00fa
167e: push constant #0000
1680: fade in?, A=?, B=?
1681: clear stack
1682: push constant #0002
1684: set wait frames A=NumFrames
1685: wait
1686: clear stack
1687: push constant #0000
1689: set active entity movespeed A=Speed
168a: return
168b: clear stack
168c: push constant #000b
168e: play sound effect: A=SfxId
168f: clear stack
1690: push constant #0000
1692: set control lock A=isControlsEnabled
1693: clear stack
1694: push constant #0014
1696: set active entity movespeed (honor walkmesh), A=speed
1697: clear stack
1698: push special [Type=0004]
169a: set active entity direction & facing A=DirectionAndFacing
169b: clear stack
169c: push special [Type=0004]
169e: push constant #0080
16a0: push A+B
16a1: set active entity direction, A=Direction
16a2: clear stack
16a3: push constant #0007
16a5: set wait frames A=NumFrames
16a6: wait
16a7: clear stack
16a8: push constant #0000
16aa: set active entity movespeed A=Speed
16ab: return
16ac: clear stack
16ad: push constant #000b
16af: play sound effect: A=SfxId
16b0: clear stack
16b1: push constant #0000
16b3: set control lock A=isControlsEnabled
16b4: clear stack
16b5: push constant #0014
16b7: set active entity movespeed (honor walkmesh), A=speed
16b8: clear stack
16b9: push special [Type=0004]
16bb: set active entity direction & facing A=DirectionAndFacing
16bc: clear stack
16bd: push special [Type=0004]
16bf: push constant #0080
16c1: push A+B
16c2: set active entity direction, A=Direction
16c3: clear stack
16c4: push constant #0005
16c6: set wait frames A=NumFrames
16c7: wait
16c8: clear stack
16c9: push constant #0000
16cb: set active entity movespeed A=Speed
16cc: return
16cd: clear stack
16ce: push constant #0000
16d0: set active entity movespeed A=Speed
16d1: clear stack
16d2: push bit from bank 0 [Addr=1c3a]
16d4: push !A
16d5: jump if !A [Addr=16e8]
16d7: clear stack
16d8: push constant #0002
16da: push constant #0000
16dc: active entity play animation: A=AnimationID, B=shouldLoop
16dd: clear stack
16de: push constant #001c
16e0: set wait frames A=NumFrames
16e1: wait
16e2: clear stack
16e3: push bit from bank 0 [Addr=1c3a]
16e5: push constant #0001
16e7: write to bank: A=Addr, B=Value
16e8: clear stack
16e9: push constant #0003
16eb: push constant #0000
16ed: active entity play animation: A=AnimationID, B=shouldLoop
16ee: clear stack
16ef: push bit from bank 0 [Addr=1c3b]
16f1: push !A
16f2: jump if !A [Addr=1707]
16f4: clear stack
16f5: push constant #0004
16f7: unknown, A=?
16f8: clear stack
16f9: push constant #0014
16fb: set wait frames A=NumFrames
16fc: wait
16fd: clear stack
16fe: push constant #0005
1700: unknown, A=?
1701: clear stack
1702: push bit from bank 0 [Addr=1c3b]
1704: push constant #0001
1706: write to bank: A=Addr, B=Value
1707: clear stack
1708: push byte from bank 0 [Addr=038f]
170a: push constant #0000
170c: write to bank: A=Addr, B=Value
170d: clear stack
170e: push bit from bank 0 [Addr=1c36]
1710: push constant #0001
1712: write to bank: A=Addr, B=Value
1713: clear stack
1714: push bit from bank 0 [Addr=1c35]
1716: push constant #0001
1718: write to bank: A=Addr, B=Value
1719: clear stack
171a: push bit from bank 0 [Addr=1c39]
171c: push constant #0000
171e: write to bank: A=Addr, B=Value
171f: return
1720: clear stack
1721: push constant #0000
1723: set active entity movespeed A=Speed
1724: clear stack
1725: push constant #0005
1727: push constant #0000
1729: active entity play animation: A=AnimationID, B=shouldLoop
172a: clear stack
172b: push constant #01b1
172d: play sound effect: A=SfxId
172e: clear stack
172f: push constant #00fa
1731: push constant #0000
1733: fade out?, A=?, B=?
1734: clear stack
1735: push constant #0003
1737: set wait frames A=NumFrames
1738: wait
1739: clear stack
173a: push constant #00fa
173c: push constant #0000
173e: fade in?, A=?, B=?
173f: clear stack
1740: push constant #0001
1742: set wait frames A=NumFrames
1743: wait
1744: clear stack
1745: push constant #0003
1747: run function 21: A=ModelId
1748: clear stack
1749: push constant #0028
174b: set wait frames A=NumFrames
174c: wait
174d: clear stack
174e: push constant #0006
1750: push constant #0000
1752: active entity play animation: A=AnimationID, B=shouldLoop
1753: clear stack
1754: push constant #0009
1756: set wait frames A=NumFrames
1757: wait
1758: clear stack
1759: push constant #0000
175b: push constant #0001
175d: active entity play animation: A=AnimationID, B=shouldLoop
175e: clear stack
175f: push byte from bank 0 [Addr=038f]
1761: push constant #0005
1763: push A<B
1764: jump if !A [Addr=176f]
1766: clear stack
1767: push byte from bank 0 [Addr=038f]
1769: push byte from bank 0 [Addr=038f]
176b: push constant #0001
176d: push A+B
176e: write to bank: A=Addr, B=Value
176f: return
1770: clear stack
1771: push constant #0004
1773: push constant #0000
1775: active entity play animation: A=AnimationID, B=shouldLoop
1776: clear stack
1777: push constant #010a
1779: play sound effect: A=SfxId
177a: clear stack
177b: push constant #0050
177d: set wait frames A=NumFrames
177e: wait
177f: clear stack
1780: push constant #000a
1782: unknown
1783: clear stack
1784: push constant #0064
1786: set wait frames A=NumFrames
1787: wait
1788: clear stack
1789: push constant #0008
178b: push constant #0000
178d: fade out?, A=?, B=?
178e: clear stack
178f: push constant #0000
1791: play sound effect: A=SfxId
1792: clear stack
1793: push constant #0064
1795: set wait frames A=NumFrames
1796: wait
1797: clear stack
1798: push constant #0008
179a: push constant #0000
179c: fade in?, A=?, B=?
179d: clear stack
179e: push constant #002d
17a0: set field entry point2?, A=FieldTblId?
17a1: clear stack
17a2: push bit from bank 0 [Addr=1c34]
17a4: push constant #0001
17a6: write to bank: A=Addr, B=Value
17a7: return
17a8: clear stack
17a9: push special [Type=0008]
17ab: push constant #0003
17ad: push A==B
17ae: jump if !A [Addr=1937]
17b0: clear stack
17b1: push bit from bank 0 [Addr=1c33]
17b3: push !A
17b4: jump if !A [Addr=17de]
17b6: clear stack
17b7: push special [Type=0008]
17b9: push distance from active entity to entity by model id
17ba: push constant #00c8
17bc: push A<=B
17bd: jump if !A [Addr=17dc]
17bf: clear stack
17c0: push bit from bank 0 [Addr=1c33]
17c2: push constant #0001
17c4: write to bank: A=Addr, B=Value
17c5: clear stack
17c6: push constant #0000
17c8: set control lock A=isControlsEnabled
17c9: clear stack
17ca: push constant #0005
17cc: push constant #0000
17ce: active entity play animation: A=AnimationID, B=shouldLoop
17cf: clear stack
17d0: push constant #01b1
17d2: play sound effect: A=SfxId
17d3: clear stack
17d4: push constant #0023
17d6: set wait frames A=NumFrames
17d7: wait
17d8: clear stack
17d9: push constant #0119
17db: trigger battle: A=SceneId?
17dc: jump [Addr=1937]
17de: clear stack
17df: push bit from bank 0 [Addr=03da]
17e1: jump if !A [Addr=1817]
17e3: clear stack
17e4: push special [Type=0008]
17e6: push distance from active entity to entity by model id
17e7: push constant #0078
17e9: push A<=B
17ea: jump if !A [Addr=1815]
17ec: clear stack
17ed: push bit from bank 0 [Addr=1c37]
17ef: push constant #0000
17f1: write to bank: A=Addr, B=Value
17f2: clear stack
17f3: push bit from bank 0 [Addr=1c36]
17f5: push constant #0000
17f7: write to bank: A=Addr, B=Value
17f8: clear stack
17f9: push byte from bank 0 [Addr=0394]
17fb: push constant #0000
17fd: write to bank: A=Addr, B=Value
17fe: clear stack
17ff: push constant #0000
1801: set control lock A=isControlsEnabled
1802: clear stack
1803: push constant #0005
1805: push constant #0000
1807: active entity play animation: A=AnimationID, B=shouldLoop
1808: clear stack
1809: push constant #01b1
180b: play sound effect: A=SfxId
180c: clear stack
180d: push constant #0023
180f: set wait frames A=NumFrames
1810: wait
1811: clear stack
1812: push constant #011f
1814: trigger battle: A=SceneId?
1815: jump [Addr=1937]
1817: clear stack
1818: push special [Type=0008]
181a: push distance from active entity to entity by model id
181b: push constant #0050
181d: push A<=B
181e: jump if !A [Addr=1937]
1820: clear stack
1821: push bit from bank 0 [Addr=1c35]
1823: jump if !A [Addr=1933]
1825: clear stack
1826: push byte from bank 0 [Addr=0394]
1828: push constant #000d
182a: push A==B
182b: push byte from bank 0 [Addr=0394]
182d: push constant #000f
182f: push A==B
1830: push A||B
1831: jump if !A [Addr=1857]
1833: clear stack
1834: push bit from bank 0 [Addr=1c35]
1836: push constant #0000
1838: write to bank: A=Addr, B=Value
1839: clear stack
183a: push bit from bank 0 [Addr=1c3a]
183c: push constant #0000
183e: write to bank: A=Addr, B=Value
183f: clear stack
1840: push bit from bank 0 [Addr=1c37]
1842: push constant #0000
1844: write to bank: A=Addr, B=Value
1845: clear stack
1846: push bit from bank 0 [Addr=1c36]
1848: push constant #0000
184a: write to bank: A=Addr, B=Value
184b: clear stack
184c: push byte from bank 0 [Addr=0394]
184e: push constant #0000
1850: write to bank: A=Addr, B=Value
1851: clear stack
1852: push constant #011a
1854: trigger battle: A=SceneId?
1855: jump [Addr=1931]
1857: clear stack
1858: push byte from bank 0 [Addr=0394]
185a: push constant #0009
185c: push A==B
185d: jump if !A [Addr=1883]
185f: clear stack
1860: push bit from bank 0 [Addr=1c35]
1862: push constant #0000
1864: write to bank: A=Addr, B=Value
1865: clear stack
1866: push bit from bank 0 [Addr=1c3a]
1868: push constant #0000
186a: write to bank: A=Addr, B=Value
186b: clear stack
186c: push bit from bank 0 [Addr=1c37]
186e: push constant #0000
1870: write to bank: A=Addr, B=Value
1871: clear stack
1872: push bit from bank 0 [Addr=1c36]
1874: push constant #0000
1876: write to bank: A=Addr, B=Value
1877: clear stack
1878: push byte from bank 0 [Addr=0394]
187a: push constant #0000
187c: write to bank: A=Addr, B=Value
187d: clear stack
187e: push constant #0126
1880: trigger battle: A=SceneId?
1881: jump [Addr=1931]
1883: clear stack
1884: push byte from bank 0 [Addr=0394]
1886: push constant #000a
1888: push A==B
1889: jump if !A [Addr=18af]
188b: clear stack
188c: push bit from bank 0 [Addr=1c35]
188e: push constant #0000
1890: write to bank: A=Addr, B=Value
1891: clear stack
1892: push bit from bank 0 [Addr=1c3a]
1894: push constant #0000
1896: write to bank: A=Addr, B=Value
1897: clear stack
1898: push bit from bank 0 [Addr=1c37]
189a: push constant #0000
189c: write to bank: A=Addr, B=Value
189d: clear stack
189e: push bit from bank 0 [Addr=1c36]
18a0: push constant #0000
18a2: write to bank: A=Addr, B=Value
18a3: clear stack
18a4: push byte from bank 0 [Addr=0394]
18a6: push constant #0000
18a8: write to bank: A=Addr, B=Value
18a9: clear stack
18aa: push constant #011b
18ac: trigger battle: A=SceneId?
18ad: jump [Addr=1931]
18af: clear stack
18b0: push byte from bank 0 [Addr=0394]
18b2: push constant #000b
18b4: push A==B
18b5: jump if !A [Addr=18db]
18b7: clear stack
18b8: push bit from bank 0 [Addr=1c35]
18ba: push constant #0000
18bc: write to bank: A=Addr, B=Value
18bd: clear stack
18be: push bit from bank 0 [Addr=1c3a]
18c0: push constant #0000
18c2: write to bank: A=Addr, B=Value
18c3: clear stack
18c4: push bit from bank 0 [Addr=1c37]
18c6: push constant #0000
18c8: write to bank: A=Addr, B=Value
18c9: clear stack
18ca: push bit from bank 0 [Addr=1c36]
18cc: push constant #0000
18ce: write to bank: A=Addr, B=Value
18cf: clear stack
18d0: push byte from bank 0 [Addr=0394]
18d2: push constant #0000
18d4: write to bank: A=Addr, B=Value
18d5: clear stack
18d6: push constant #011c
18d8: trigger battle: A=SceneId?
18d9: jump [Addr=1931]
18db: clear stack
18dc: push byte from bank 0 [Addr=0394]
18de: push constant #000c
18e0: push A==B
18e1: jump if !A [Addr=1907]
18e3: clear stack
18e4: push bit from bank 0 [Addr=1c35]
18e6: push constant #0000
18e8: write to bank: A=Addr, B=Value
18e9: clear stack
18ea: push bit from bank 0 [Addr=1c3a]
18ec: push constant #0000
18ee: write to bank: A=Addr, B=Value
18ef: clear stack
18f0: push bit from bank 0 [Addr=1c37]
18f2: push constant #0000
18f4: write to bank: A=Addr, B=Value
18f5: clear stack
18f6: push bit from bank 0 [Addr=1c36]
18f8: push constant #0000
18fa: write to bank: A=Addr, B=Value
18fb: clear stack
18fc: push byte from bank 0 [Addr=0394]
18fe: push constant #0000
1900: write to bank: A=Addr, B=Value
1901: clear stack
1902: push constant #011d
1904: trigger battle: A=SceneId?
1905: jump [Addr=1931]
1907: clear stack
1908: push byte from bank 0 [Addr=0394]
190a: push constant #000e
190c: push A==B
190d: jump if !A [Addr=1931]
190f: clear stack
1910: push bit from bank 0 [Addr=1c35]
1912: push constant #0000
1914: write to bank: A=Addr, B=Value
1915: clear stack
1916: push bit from bank 0 [Addr=1c3a]
1918: push constant #0000
191a: write to bank: A=Addr, B=Value
191b: clear stack
191c: push bit from bank 0 [Addr=1c37]
191e: push constant #0000
1920: write to bank: A=Addr, B=Value
1921: clear stack
1922: push bit from bank 0 [Addr=1c36]
1924: push constant #0000
1926: write to bank: A=Addr, B=Value
1927: clear stack
1928: push byte from bank 0 [Addr=0394]
192a: push constant #0000
192c: write to bank: A=Addr, B=Value
192d: clear stack
192e: push constant #011e
1930: trigger battle: A=SceneId?
1931: jump [Addr=1937]
1933: clear stack
1934: push constant #000b
1936: run function 26: A=ModelId
1937: clear stack
1938: push bit from bank 0 [Addr=1c33]
193a: jump if !A [Addr=19f9]
193c: clear stack
193d: push bit from bank 0 [Addr=03da]
193f: push !A
1940: jump if !A [Addr=19f1]
1942: clear stack
1943: push bit from bank 0 [Addr=1c36]
1945: push !A
1946: jump if !A [Addr=19eb]
1948: clear stack
1949: push byte from bank 0 [Addr=038f]
194b: push constant #0005
194d: push A==B
194e: jump if !A [Addr=1996]
1950: clear stack
1951: push bit from bank 0 [Addr=1c39]
1953: push !A
1954: jump if !A [Addr=197f]
1956: clear stack
1957: push bit from bank 0 [Addr=1c39]
1959: push constant #0001
195b: write to bank: A=Addr, B=Value
195c: clear stack
195d: push byte from bank 0 [Addr=0394]
195f: push special [Type=0010]
1961: push constant #0007
1963: push A*B
1964: push constant #0008
1966: push A>>B
1967: write to bank: A=Addr, B=Value
1968: clear stack
1969: push byte from bank 0 [Addr=0394]
196b: push byte from bank 0 [Addr=0394]
196d: push constant #0009
196f: push A+B
1970: write to bank: A=Addr, B=Value
1971: clear stack
1972: push byte from bank 0 [Addr=0394]
1974: push constant #0000
1976: push A==B
1977: jump if !A [Addr=197f]
1979: clear stack
197a: push byte from bank 0 [Addr=0394]
197c: push constant #000f
197e: write to bank: A=Addr, B=Value
197f: clear stack
1980: push byte from bank 0 [Addr=0394]
1982: unknown: A=?
1983: clear stack
1984: push constant #00c8
1986: set active entity movespeed A=Speed
1987: clear stack
1988: push byte from bank 0 [Addr=0394]
198a: push distance from active entity to point
198b: push constant #0096
198d: push A<=B
198e: jump if !A [Addr=1994]
1990: clear stack
1991: push constant #000b
1993: run function 25: A=ModelId
1994: jump [Addr=19e9]
1996: clear stack
1997: push halfword from bank 0 [Addr=0392]
1999: push constant #00ff
199b: push A==B
199c: jump if !A [Addr=19b7]
199e: clear stack
199f: push constant #00c8
19a1: set active entity movespeed A=Speed
19a2: clear stack
19a3: push constant #0004
19a5: unknown: A=?
19a6: clear stack
19a7: push constant #0004
19a9: push distance from active entity to point
19aa: push constant #00ff
19ac: push A<=B
19ad: jump if !A [Addr=19b5]
19af: clear stack
19b0: push halfword from bank 0 [Addr=0392]
19b2: push constant #0000
19b4: write to bank: A=Addr, B=Value
19b5: jump [Addr=19e9]
19b7: clear stack
19b8: push byte from bank 0 [Addr=038e]
19ba: push constant #0032
19bc: push A<B
19bd: jump if !A [Addr=19c5]
19bf: clear stack
19c0: push constant #00c8
19c2: set active entity movespeed A=Speed
19c3: jump [Addr=19e0]
19c5: clear stack
19c6: push byte from bank 0 [Addr=038e]
19c8: push constant #0046
19ca: push A==B
19cb: jump if !A [Addr=19e0]
19cd: clear stack
19ce: push special [Type=0010]
19d0: set active entity direction & facing A=DirectionAndFacing
19d1: clear stack
19d2: push byte from bank 0 [Addr=038e]
19d4: push constant #0000
19d6: write to bank: A=Addr, B=Value
19d7: clear stack
19d8: push halfword from bank 0 [Addr=0392]
19da: push halfword from bank 0 [Addr=0392]
19dc: push constant #0001
19de: push A+B
19df: write to bank: A=Addr, B=Value
19e0: clear stack
19e1: push byte from bank 0 [Addr=038e]
19e3: push byte from bank 0 [Addr=038e]
19e5: push constant #0001
19e7: push A+B
19e8: write to bank: A=Addr, B=Value
19e9: jump [Addr=19ef]
19eb: clear stack
19ec: push constant #000b
19ee: run function 25: A=ModelId
19ef: jump [Addr=19f7]
19f1: clear stack
19f2: push constant #0004
19f4: push constant #0000
19f6: active entity play animation: A=AnimationID, B=shouldLoop
19f7: jump [Addr=19ff]
19f9: clear stack
19fa: push constant #0004
19fc: push constant #0000
19fe: active entity play animation: A=AnimationID, B=shouldLoop
19ff: clear stack
1a00: push constant #0001
1a02: set wait frames A=NumFrames
1a03: wait
1a04: return
1a05: clear stack
1a06: push bit from bank 0 [Addr=1c3b]
1a08: push constant #0000
1a0a: write to bank: A=Addr, B=Value
1a0b: clear stack
1a0c: push special [Type=0005]
1a0e: push constant #0001
1a10: push A==B
1a11: jump if !A [Addr=1a37]
1a13: clear stack
1a14: push bit from bank 0 [Addr=03d8]
1a16: jump if !A [Addr=1a37]
1a18: clear stack
1a19: push bit from bank 0 [Addr=1c34]
1a1b: push !A
1a1c: jump if !A [Addr=1a37]
1a1e: clear stack
1a1f: push bit from bank 0 [Addr=1c38]
1a21: jump if !A [Addr=1a37]
1a23: clear stack
1a24: push constant #000b
1a26: push constant #0015
1a28: set active entity mesh coordinates A=MeshX, B=MeshZ
1a29: clear stack
1a2a: push constant #159d
1a2c: push constant #00a0
1a2e: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1a2f: clear stack
1a30: push constant #0000
1a32: set active entity direction & facing A=DirectionAndFacing
1a33: clear stack
1a34: push constant #0e10
1a36: set active entity y position: A=YPosition
1a37: clear stack
1a38: push bit from bank 0 [Addr=03d8]
1a3a: push !A
1a3b: jump if !A [Addr=1b53]
1a3d: clear stack
1a3e: push bit from bank 0 [Addr=1c36]
1a40: jump if !A [Addr=1af8]
1a42: clear stack
1a43: push byte from bank 0 [Addr=0394]
1a45: push constant #0009
1a47: push A==B
1a48: jump if !A [Addr=1a5c]
1a4a: clear stack
1a4b: push constant #0016
1a4d: push constant #000e
1a4f: set active entity mesh coordinates A=MeshX, B=MeshZ
1a50: clear stack
1a51: push constant #1505
1a53: push constant #14e1
1a55: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1a56: clear stack
1a57: push constant #0fa0
1a59: set active entity y position: A=YPosition
1a5a: jump [Addr=1af6]
1a5c: clear stack
1a5d: push byte from bank 0 [Addr=0394]
1a5f: push constant #000a
1a61: push A==B
1a62: jump if !A [Addr=1a76]
1a64: clear stack
1a65: push constant #0018
1a67: push constant #0014
1a69: set active entity mesh coordinates A=MeshX, B=MeshZ
1a6a: clear stack
1a6b: push constant #1a36
1a6d: push constant #15dc
1a6f: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1a70: clear stack
1a71: push constant #0fa0
1a73: set active entity y position: A=YPosition
1a74: jump [Addr=1af6]
1a76: clear stack
1a77: push byte from bank 0 [Addr=0394]
1a79: push constant #000b
1a7b: push A==B
1a7c: jump if !A [Addr=1a90]
1a7e: clear stack
1a7f: push constant #000d
1a81: push constant #000e
1a83: set active entity mesh coordinates A=MeshX, B=MeshZ
1a84: clear stack
1a85: push constant #0cb9
1a87: push constant #1763
1a89: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1a8a: clear stack
1a8b: push constant #0fa0
1a8d: set active entity y position: A=YPosition
1a8e: jump [Addr=1af6]
1a90: clear stack
1a91: push byte from bank 0 [Addr=0394]
1a93: push constant #000c
1a95: push A==B
1a96: jump if !A [Addr=1aaa]
1a98: clear stack
1a99: push constant #000d
1a9b: push constant #0016
1a9d: set active entity mesh coordinates A=MeshX, B=MeshZ
1a9e: clear stack
1a9f: push constant #18d9
1aa1: push constant #086d
1aa3: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1aa4: clear stack
1aa5: push constant #0fa0
1aa7: set active entity y position: A=YPosition
1aa8: jump [Addr=1af6]
1aaa: clear stack
1aab: push byte from bank 0 [Addr=0394]
1aad: push constant #000d
1aaf: push A==B
1ab0: jump if !A [Addr=1ac4]
1ab2: clear stack
1ab3: push constant #000b
1ab5: push constant #000f
1ab7: set active entity mesh coordinates A=MeshX, B=MeshZ
1ab8: clear stack
1ab9: push constant #0b45
1abb: push constant #1896
1abd: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1abe: clear stack
1abf: push constant #0fa0
1ac1: set active entity y position: A=YPosition
1ac2: jump [Addr=1af6]
1ac4: clear stack
1ac5: push byte from bank 0 [Addr=0394]
1ac7: push constant #000e
1ac9: push A==B
1aca: jump if !A [Addr=1ade]
1acc: clear stack
1acd: push constant #0010
1acf: push constant #0004
1ad1: set active entity mesh coordinates A=MeshX, B=MeshZ
1ad2: clear stack
1ad3: push constant #0001
1ad5: push constant #0f9f
1ad7: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1ad8: clear stack
1ad9: push constant #0fa0
1adb: set active entity y position: A=YPosition
1adc: jump [Addr=1af6]
1ade: clear stack
1adf: push byte from bank 0 [Addr=0394]
1ae1: push constant #000f
1ae3: push A==B
1ae4: jump if !A [Addr=1af6]
1ae6: clear stack
1ae7: push constant #001a
1ae9: push constant #0018
1aeb: set active entity mesh coordinates A=MeshX, B=MeshZ
1aec: clear stack
1aed: push constant #1b7e
1aef: push constant #13ab
1af1: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1af2: clear stack
1af3: push constant #0fa0
1af5: set active entity y position: A=YPosition
1af6: jump [Addr=1b53]
1af8: clear stack
1af9: push bit from bank 0 [Addr=03da]
1afb: jump if !A [Addr=1b15]
1afd: clear stack
1afe: push constant #000b
1b00: push constant #0015
1b02: set active entity mesh coordinates A=MeshX, B=MeshZ
1b03: clear stack
1b04: push constant #159d
1b06: push constant #00a0
1b08: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1b09: clear stack
1b0a: push constant #0bb8
1b0c: set active entity y position: A=YPosition
1b0d: clear stack
1b0e: push bit from bank 0 [Addr=1c38]
1b10: push constant #0001
1b12: write to bank: A=Addr, B=Value
1b13: jump [Addr=1b53]
1b15: clear stack
1b16: push bit from bank 0 [Addr=1c33]
1b18: push !A
1b19: jump if !A [Addr=1b2d]
1b1b: clear stack
1b1c: push constant #0016
1b1e: push constant #0012
1b20: set active entity mesh coordinates A=MeshX, B=MeshZ
1b21: clear stack
1b22: push constant #19dc
1b24: push constant #04ac
1b26: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1b27: clear stack
1b28: push constant #03e8
1b2a: set active entity y offset A=YOffset
1b2b: jump [Addr=1b53]
1b2d: clear stack
1b2e: push bit from bank 0 [Addr=1c37]
1b30: push !A
1b31: jump if !A [Addr=1b4f]
1b33: clear stack
1b34: push constant #0016
1b36: push constant #0012
1b38: set active entity mesh coordinates A=MeshX, B=MeshZ
1b39: clear stack
1b3a: push constant #19dc
1b3c: push constant #04ac
1b3e: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1b3f: clear stack
1b40: push constant #0fa0
1b42: set active entity y position: A=YPosition
1b43: clear stack
1b44: push special [Type=0010]
1b46: set active entity direction & facing A=DirectionAndFacing
1b47: clear stack
1b48: push bit from bank 0 [Addr=1c37]
1b4a: push constant #0001
1b4c: write to bank: A=Addr, B=Value
1b4d: jump [Addr=1b53]
1b4f: clear stack
1b50: push constant #0fa0
1b52: set active entity y position: A=YPosition
1b53: return
1b54: clear stack
1b55: push bit from bank 0 [Addr=1c25]
1b57: push constant #0001
1b59: write to bank: A=Addr, B=Value
1b5a: clear stack
1b5b: push constant #001e
1b5d: set wait frames A=NumFrames
1b5e: wait
1b5f: clear stack
1b60: push constant #000a
1b62: push -A
1b63: unknown
1b64: clear stack
1b65: push constant #0000
1b67: push constant #0001
1b69: push constant #000f
1b6b: unknown, A=?, B=?, C=?
1b6c: clear stack
1b6d: push constant #001e
1b6f: set wait frames A=NumFrames
1b70: wait
1b71: clear stack
1b72: push constant #0001
1b74: push constant #0002
1b76: push constant #0005
1b78: unknown, A=?, B=?, C=?
1b79: clear stack
1b7a: push constant #0132
1b7c: play sound effect: A=SfxId
1b7d: clear stack
1b7e: push constant #0082
1b80: set wait frames A=NumFrames
1b81: wait
1b82: clear stack
1b83: push constant #0000
1b85: unknown
1b86: clear stack
1b87: push constant #0001
1b89: unknown, A=?
1b8a: clear stack
1b8b: push constant #001e
1b8d: set wait frames A=NumFrames
1b8e: wait
1b8f: clear stack
1b90: push constant #0004
1b92: push constant #0000
1b94: active entity play animation: A=AnimationID, B=shouldLoop
1b95: clear stack
1b96: push constant #001e
1b98: set wait frames A=NumFrames
1b99: wait
1b9a: clear stack
1b9b: push constant #01b0
1b9d: play sound effect: A=SfxId
1b9e: clear stack
1b9f: push constant #0078
1ba1: set wait frames A=NumFrames
1ba2: wait
1ba3: clear stack
1ba4: push constant #0001
1ba6: push constant #0001
1ba8: active entity play animation: A=AnimationID, B=shouldLoop
1ba9: clear stack
1baa: push constant #0004
1bac: set active entity movespeed A=Speed
1bad: clear stack
1bae: push constant #0000
1bb0: unknown, A=?
1bb1: clear stack
1bb2: push constant #0000
1bb4: push constant #0003
1bb6: push constant #000a
1bb8: unknown, A=?, B=?, C=?
1bb9: clear stack
1bba: push constant #0064
1bbc: set wait frames A=NumFrames
1bbd: wait
1bbe: clear stack
1bbf: push constant #0064
1bc1: set wait frames A=NumFrames
1bc2: wait
1bc3: clear stack
1bc4: push constant #0064
1bc6: set wait frames A=NumFrames
1bc7: wait
1bc8: clear stack
1bc9: push constant #0010
1bcb: push constant #0001
1bcd: fade out?, A=?, B=?
1bce: clear stack
1bcf: push constant #0032
1bd1: set wait frames A=NumFrames
1bd2: wait
1bd3: clear stack
1bd4: push constant #0033
1bd6: push constant #0000
1bd8: enter field scene: A=?, B=? (combine to form offset in field.tbl)
1bd9: clear stack
1bda: push byte from bank 0 [Addr=038d]
1bdc: unknown: A=?
1bdd: clear stack
1bde: push constant #0001
1be0: set control lock A=isControlsEnabled
1be1: clear stack
1be2: push constant #0001
1be4: set battle lock, A=EnableRandomEncounters
1be5: return
1be6: clear stack
1be7: push special [Type=0008]
1be9: push constant #0003
1beb: push A==B
1bec: jump if !A [Addr=1c00]
1bee: clear stack
1bef: push bit from bank 0 [Addr=1c26]
1bf1: jump if !A [Addr=1c00]
1bf3: clear stack
1bf4: push special [Type=0008]
1bf6: push distance from active entity to entity by model id
1bf7: push constant #0078
1bf9: push A<=B
1bfa: jump if !A [Addr=1c00]
1bfc: clear stack
1bfd: push constant #0003
1bff: run function 22: A=ModelId
1c00: clear stack
1c01: push bit from bank 0 [Addr=1a93]
1c03: jump if !A [Addr=1cc6]
1c05: clear stack
1c06: push bit from bank 0 [Addr=1c25]
1c08: jump if !A [Addr=1cc6]
1c0a: clear stack
1c0b: push halfword from bank 0 [Addr=0390]
1c0d: push constant #0af0
1c0f: push A<B
1c10: jump if !A [Addr=1c21]
1c12: clear stack
1c13: push constant #0190
1c15: push -A
1c16: set active entity y offset A=YOffset
1c17: clear stack
1c18: push constant #0008
1c1a: set active entity movespeed A=Speed
1c1b: clear stack
1c1c: push constant #0020
1c1e: set active entity direction & facing A=DirectionAndFacing
1c1f: jump [Addr=1cc6]
1c21: clear stack
1c22: push halfword from bank 0 [Addr=0390]
1c24: push constant #0b45
1c26: push A<B
1c27: jump if !A [Addr=1c3e]
1c29: clear stack
1c2a: push constant #0190
1c2c: push -A
1c2d: set active entity y offset A=YOffset
1c2e: clear stack
1c2f: push constant #0001
1c31: set active entity movespeed A=Speed
1c32: clear stack
1c33: push constant #0b70
1c35: push halfword from bank 0 [Addr=0390]
1c37: push A-B
1c38: push constant #0002
1c3a: push A>>B
1c3b: set active entity direction & facing A=DirectionAndFacing
1c3c: jump [Addr=1cc6]
1c3e: clear stack
1c3f: push halfword from bank 0 [Addr=0390]
1c41: push constant #0e66
1c43: push A<B
1c44: jump if !A [Addr=1c5a]
1c46: clear stack
1c47: push halfword from bank 0 [Addr=0390]
1c49: push constant #0e65
1c4b: push A-B
1c4c: push constant #0001
1c4e: push A>>B
1c4f: set active entity y offset A=YOffset
1c50: clear stack
1c51: push constant #0008
1c53: set active entity movespeed A=Speed
1c54: clear stack
1c55: push constant #000b
1c57: set active entity direction & facing A=DirectionAndFacing
1c58: jump [Addr=1cc6]
1c5a: clear stack
1c5b: push halfword from bank 0 [Addr=0390]
1c5d: push constant #0fc4
1c5f: push A<B
1c60: jump if !A [Addr=1c7c]
1c62: clear stack
1c63: push constant #0000
1c65: set active entity y offset A=YOffset
1c66: clear stack
1c67: push constant #0008
1c69: set active entity movespeed A=Speed
1c6a: clear stack
1c6b: push halfword from bank 0 [Addr=0390]
1c6d: push constant #0e66
1c6f: push A>=B
1c70: jump if !A [Addr=1c76]
1c72: clear stack
1c73: push constant #0000
1c75: unknown, A=?
1c76: clear stack
1c77: push constant #000b
1c79: set active entity direction & facing A=DirectionAndFacing
1c7a: jump [Addr=1cc6]
1c7c: clear stack
1c7d: push halfword from bank 0 [Addr=0390]
1c7f: push constant #0fc4
1c81: push A==B
1c82: jump if !A [Addr=1cb8]
1c84: clear stack
1c85: push bit from bank 0 [Addr=1c28]
1c87: push !A
1c88: jump if !A [Addr=1cae]
1c8a: clear stack
1c8b: push constant #0000
1c8d: set active entity y offset A=YOffset
1c8e: clear stack
1c8f: push constant #0004
1c91: push constant #0000
1c93: active entity play animation: A=AnimationID, B=shouldLoop
1c94: clear stack
1c95: push constant #0014
1c97: set wait frames A=NumFrames
1c98: wait
1c99: clear stack
1c9a: push constant #01b0
1c9c: play sound effect: A=SfxId
1c9d: clear stack
1c9e: push constant #0000
1ca0: set active entity movespeed A=Speed
1ca1: clear stack
1ca2: push bit from bank 0 [Addr=1c28]
1ca4: push constant #0001
1ca6: write to bank: A=Addr, B=Value
1ca7: clear stack
1ca8: push constant #0078
1caa: set wait frames A=NumFrames
1cab: wait
1cac: jump [Addr=1cb6]
1cae: clear stack
1caf: push constant #0000
1cb1: set active entity y offset A=YOffset
1cb2: clear stack
1cb3: push constant #0000
1cb5: set active entity movespeed A=Speed
1cb6: jump [Addr=1cc6]
1cb8: clear stack
1cb9: push halfword from bank 0 [Addr=0390]
1cbb: push constant #0fc5
1cbd: push A>=B
1cbe: jump if !A [Addr=1cc6]
1cc0: clear stack
1cc1: push halfword from bank 0 [Addr=0390]
1cc3: push constant #0fc5
1cc5: write to bank: A=Addr, B=Value
1cc6: clear stack
1cc7: push halfword from bank 0 [Addr=0390]
1cc9: push halfword from bank 0 [Addr=0390]
1ccb: push constant #0001
1ccd: push A+B
1cce: write to bank: A=Addr, B=Value
1ccf: clear stack
1cd0: push constant #0001
1cd2: set wait frames A=NumFrames
1cd3: wait
1cd4: return
1cd5: clear stack
1cd6: push bit from bank 0 [Addr=1a93]
1cd8: jump if !A [Addr=1d5c]
1cda: clear stack
1cdb: push bit from bank 0 [Addr=1c25]
1cdd: push !A
1cde: jump if !A [Addr=1cf7]
1ce0: clear stack
1ce1: push constant #0014
1ce3: push constant #000b
1ce5: set active entity mesh coordinates A=MeshX, B=MeshZ
1ce6: clear stack
1ce7: push constant #1099
1ce9: push constant #0945
1ceb: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1cec: clear stack
1ced: push constant #0017
1cef: set active entity direction & facing A=DirectionAndFacing
1cf0: clear stack
1cf1: push constant #07d0
1cf3: push -A
1cf4: set active entity y offset A=YOffset
1cf5: jump [Addr=1d5c]
1cf7: clear stack
1cf8: push bit from bank 0 [Addr=1c26]
1cfa: push !A
1cfb: jump if !A [Addr=1d34]
1cfd: clear stack
1cfe: push constant #0014
1d00: push constant #000b
1d02: set active entity mesh coordinates A=MeshX, B=MeshZ
1d03: clear stack
1d04: push constant #1099
1d06: push constant #0945
1d08: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1d09: clear stack
1d0a: push constant #0190
1d0c: push -A
1d0d: set active entity y offset A=YOffset
1d0e: clear stack
1d0f: push constant #0000
1d11: push constant #0003
1d13: push constant #000a
1d15: unknown, A=?, B=?, C=?
1d16: clear stack
1d17: push constant #0001
1d19: push constant #0001
1d1b: active entity play animation: A=AnimationID, B=shouldLoop
1d1c: clear stack
1d1d: push bit from bank 0 [Addr=1c27]
1d1f: push !A
1d20: jump if !A [Addr=1d2c]
1d22: clear stack
1d23: push constant #01b0
1d25: play sound effect: A=SfxId
1d26: clear stack
1d27: push bit from bank 0 [Addr=1c27]
1d29: push constant #0001
1d2b: write to bank: A=Addr, B=Value
1d2c: clear stack
1d2d: push bit from bank 0 [Addr=1c26]
1d2f: push constant #0001
1d31: write to bank: A=Addr, B=Value
1d32: jump [Addr=1d5c]
1d34: clear stack
1d35: push bit from bank 0 [Addr=1c28]
1d37: push !A
1d38: jump if !A [Addr=1d58]
1d3a: clear stack
1d3b: push constant #0001
1d3d: push constant #0001
1d3f: active entity play animation: A=AnimationID, B=shouldLoop
1d40: clear stack
1d41: push halfword from bank 0 [Addr=0390]
1d43: push constant #0e66
1d45: push A<B
1d46: jump if !A [Addr=1d52]
1d48: clear stack
1d49: push constant #0000
1d4b: push constant #0003
1d4d: push constant #000a
1d4f: unknown, A=?, B=?, C=?
1d50: jump [Addr=1d56]
1d52: clear stack
1d53: push constant #0000
1d55: unknown, A=?
1d56: jump [Addr=1d5c]
1d58: clear stack
1d59: push constant #0000
1d5b: set active entity movespeed A=Speed
1d5c: return
1d5d: clear stack
1d5e: push special [Type=0008]
1d60: push constant #0000
1d62: push A==B
1d63: push special [Type=0008]
1d65: push constant #0001
1d67: push A==B
1d68: push A||B
1d69: push special [Type=0008]
1d6b: push constant #0002
1d6d: push A==B
1d6e: push A||B
1d6f: jump if !A [Addr=1d88]
1d71: clear stack
1d72: push constant #000a
1d74: set wait frames A=NumFrames
1d75: wait
1d76: clear stack
1d77: push bit from bank 0 [Addr=1a93]
1d79: push constant #0000
1d7b: write to bank: A=Addr, B=Value
1d7c: clear stack
1d7d: push bit from bank 0 [Addr=1c29]
1d7f: push constant #0001
1d81: write to bank: A=Addr, B=Value
1d82: clear stack
1d83: push constant #0035
1d85: push constant #0000
1d87: enter field scene: A=?, B=? (combine to form offset in field.tbl)
1d88: return
1d89: return
1d8a: clear stack
1d8b: push bit from bank 0 [Addr=1c2b]
1d8d: push !A
1d8e: jump if !A [Addr=1dba]
1d90: clear stack
1d91: push constant #0000
1d93: set control lock A=isControlsEnabled
1d94: clear stack
1d95: push bit from bank 0 [Addr=1c2b]
1d97: push constant #0001
1d99: write to bank: A=Addr, B=Value
1d9a: clear stack
1d9b: push constant #001e
1d9d: set wait frames A=NumFrames
1d9e: wait
1d9f: wait for window ready
1da0: clear stack
1da1: push constant #003c
1da3: push constant #0005
1da5: push constant #00c8
1da7: push constant #0049
1da9: set window dimensions: X, Y, W, H
1daa: clear stack
1dab: push constant #0000
1dad: push constant #0000
1daf: set window parameters, A=Mode, B=IsPermanent
1db0: wait for window ready
1db1: clear stack
1db2: push constant #0035
1db4: set window message: A=MesId
1db5: wait for message acknowledge
1db6: clear stack
1db7: push constant #0001
1db9: set control lock A=isControlsEnabled
1dba: return
1dbb: clear stack
1dbc: push bit from bank 0 [Addr=1c32]
1dbe: push !A
1dbf: jump if !A [Addr=1deb]
1dc1: clear stack
1dc2: push constant #0000
1dc4: set control lock A=isControlsEnabled
1dc5: clear stack
1dc6: push bit from bank 0 [Addr=1c32]
1dc8: push constant #0001
1dca: write to bank: A=Addr, B=Value
1dcb: clear stack
1dcc: push constant #001e
1dce: set wait frames A=NumFrames
1dcf: wait
1dd0: wait for window ready
1dd1: clear stack
1dd2: push constant #0012
1dd4: push constant #0005
1dd6: push constant #011b
1dd8: push constant #0049
1dda: set window dimensions: X, Y, W, H
1ddb: clear stack
1ddc: push constant #0000
1dde: push constant #0000
1de0: set window parameters, A=Mode, B=IsPermanent
1de1: wait for window ready
1de2: clear stack
1de3: push constant #003b
1de5: set window message: A=MesId
1de6: wait for message acknowledge
1de7: clear stack
1de8: push constant #0001
1dea: set control lock A=isControlsEnabled
1deb: return
1dec: clear stack
1ded: push special [Type=0008]
1def: push constant #0000
1df1: push A==B
1df2: push special [Type=0008]
1df4: push constant #0001
1df6: push A==B
1df7: push A||B
1df8: push special [Type=0008]
1dfa: push constant #0002
1dfc: push A==B
1dfd: push A||B
1dfe: jump if !A [Addr=1e2e]
1e00: clear stack
1e01: push constant #0000
1e03: set control lock A=isControlsEnabled
1e04: clear stack
1e05: push bit from bank 0 [Addr=03f0]
1e07: push constant #0001
1e09: write to bank: A=Addr, B=Value
1e0a: clear stack
1e0b: push special [Type=0008]
1e0d: push constant #00c0
1e0f: unknown, A=?, B=?
1e10: clear stack
1e11: push byte from bank 1 [Addr=0002]
1e13: push special [Type=000f]
1e15: write to bank: A=Addr, B=Value
1e16: clear stack
1e17: push special [Type=0008]
1e19: set active entity, A=ModelId
1e1a: clear stack
1e1b: push constant #ffff
1e1d: run function 10: A=ModelId
1e1e: unknown
1e1f: enter vehicle
1e20: clear stack
1e21: push special [Type=0008]
1e23: push constant #0004
1e25: push A==B
1e26: jump if !A [Addr=1e2e]
1e28: clear stack
1e29: push bit from bank 0 [Addr=03f1]
1e2b: push constant #0001
1e2d: write to bank: A=Addr, B=Value
1e2e: return
1e2f: clear stack
1e30: push halfword from bank 0 [Addr=0000]
1e32: push constant #0181
1e34: push A<B
1e35: jump if !A [Addr=1eb0]
1e37: clear stack
1e38: push bit from bank 0 [Addr=1c24]
1e3a: jump if !A [Addr=1e6c]
1e3c: clear stack
1e3d: push constant #0000
1e3f: set control lock A=isControlsEnabled
1e40: clear stack
1e41: push constant #0000
1e43: set battle lock, A=EnableRandomEncounters
1e44: clear stack
1e45: push constant #0005
1e47: set wait frames A=NumFrames
1e48: wait
1e49: clear stack
1e4a: push byte from bank 1 [Addr=0003]
1e4c: push special [Type=0004]
1e4e: write to bank: A=Addr, B=Value
1e4f: clear stack
1e50: push special [Type=0008]
1e52: set active entity, A=ModelId
1e53: clear stack
1e54: push constant #ffff
1e56: run function 11: A=ModelId
1e57: unknown
1e58: clear stack
1e59: push constant #0014
1e5b: set wait frames A=NumFrames
1e5c: wait
1e5d: clear stack
1e5e: push special [Type=0008]
1e60: set active entity, A=ModelId
1e61: clear stack
1e62: push constant #ffff
1e64: run function 13: A=ModelId
1e65: unknown
1e66: clear stack
1e67: push constant #0001
1e69: unknown, A=?
1e6a: jump [Addr=1eae]
1e6c: clear stack
1e6d: push constant #0000
1e6f: set control lock A=isControlsEnabled
1e70: clear stack
1e71: push constant #0005
1e73: set wait frames A=NumFrames
1e74: wait
1e75: clear stack
1e76: push byte from bank 1 [Addr=0003]
1e78: push special [Type=0004]
1e7a: write to bank: A=Addr, B=Value
1e7b: clear stack
1e7c: push special [Type=0008]
1e7e: set active entity, A=ModelId
1e7f: clear stack
1e80: push constant #ffff
1e82: run function 11: A=ModelId
1e83: unknown
1e84: clear stack
1e85: push bit from bank 0 [Addr=03f0]
1e87: push constant #0000
1e89: write to bank: A=Addr, B=Value
1e8a: clear stack
1e8b: push bit from bank 0 [Addr=03f1]
1e8d: push constant #0000
1e8f: write to bank: A=Addr, B=Value
1e90: clear stack
1e91: push constant #0002
1e93: push constant #0000
1e95: active entity play animation: A=AnimationID, B=shouldLoop
1e96: clear stack
1e97: push constant #0114
1e99: play sound effect: A=SfxId
1e9a: clear stack
1e9b: push constant #0012
1e9d: set wait frames A=NumFrames
1e9e: wait
1e9f: clear stack
1ea0: push constant #0001
1ea2: set battle lock, A=EnableRandomEncounters
1ea3: clear stack
1ea4: push constant #0000
1ea6: push constant #0001
1ea8: active entity play animation: A=AnimationID, B=shouldLoop
1ea9: unknown
1eaa: clear stack
1eab: push constant #0001
1ead: set control lock A=isControlsEnabled
1eae: jump [Addr=1f4d]
1eb0: clear stack
1eb1: push bit from bank 0 [Addr=03e8]
1eb3: jump if !A [Addr=1f0b]
1eb5: clear stack
1eb6: push constant #0000
1eb8: set control lock A=isControlsEnabled
1eb9: clear stack
1eba: push constant #0000
1ebc: set battle lock, A=EnableRandomEncounters
1ebd: clear stack
1ebe: push constant #0005
1ec0: set wait frames A=NumFrames
1ec1: wait
1ec2: clear stack
1ec3: push byte from bank 1 [Addr=0003]
1ec5: push special [Type=0004]
1ec7: write to bank: A=Addr, B=Value
1ec8: clear stack
1ec9: push special [Type=0008]
1ecb: set active entity, A=ModelId
1ecc: clear stack
1ecd: push constant #ffff
1ecf: run function 11: A=ModelId
1ed0: unknown
1ed1: clear stack
1ed2: push constant #0014
1ed4: set wait frames A=NumFrames
1ed5: wait
1ed6: clear stack
1ed7: push special [Type=0008]
1ed9: set active entity, A=ModelId
1eda: clear stack
1edb: push constant #ffff
1edd: run function 14: A=ModelId
1ede: unknown
1edf: clear stack
1ee0: push bit from bank 0 [Addr=03f0]
1ee2: push constant #0000
1ee4: write to bank: A=Addr, B=Value
1ee5: clear stack
1ee6: push bit from bank 0 [Addr=03f1]
1ee8: push constant #0000
1eea: write to bank: A=Addr, B=Value
1eeb: clear stack
1eec: push constant #0002
1eee: push constant #0000
1ef0: active entity play animation: A=AnimationID, B=shouldLoop
1ef1: clear stack
1ef2: push constant #0114
1ef4: play sound effect: A=SfxId
1ef5: clear stack
1ef6: push constant #0012
1ef8: set wait frames A=NumFrames
1ef9: wait
1efa: clear stack
1efb: push constant #0000
1efd: push constant #0001
1eff: active entity play animation: A=AnimationID, B=shouldLoop
1f00: clear stack
1f01: push constant #0001
1f03: set battle lock, A=EnableRandomEncounters
1f04: unknown
1f05: clear stack
1f06: push constant #0001
1f08: set control lock A=isControlsEnabled
1f09: jump [Addr=1f4d]
1f0b: clear stack
1f0c: push constant #0000
1f0e: set control lock A=isControlsEnabled
1f0f: clear stack
1f10: push constant #0005
1f12: set wait frames A=NumFrames
1f13: wait
1f14: clear stack
1f15: push byte from bank 1 [Addr=0003]
1f17: push special [Type=0004]
1f19: write to bank: A=Addr, B=Value
1f1a: clear stack
1f1b: push special [Type=0008]
1f1d: set active entity, A=ModelId
1f1e: clear stack
1f1f: push constant #ffff
1f21: run function 11: A=ModelId
1f22: unknown
1f23: clear stack
1f24: push bit from bank 0 [Addr=03f0]
1f26: push constant #0000
1f28: write to bank: A=Addr, B=Value
1f29: clear stack
1f2a: push bit from bank 0 [Addr=03f1]
1f2c: push constant #0000
1f2e: write to bank: A=Addr, B=Value
1f2f: clear stack
1f30: push constant #0002
1f32: push constant #0000
1f34: active entity play animation: A=AnimationID, B=shouldLoop
1f35: clear stack
1f36: push constant #0114
1f38: play sound effect: A=SfxId
1f39: clear stack
1f3a: push constant #0012
1f3c: set wait frames A=NumFrames
1f3d: wait
1f3e: clear stack
1f3f: push constant #0001
1f41: set battle lock, A=EnableRandomEncounters
1f42: clear stack
1f43: push constant #0000
1f45: push constant #0001
1f47: active entity play animation: A=AnimationID, B=shouldLoop
1f48: unknown
1f49: clear stack
1f4a: push constant #0001
1f4c: set control lock A=isControlsEnabled
1f4d: return
1f4e: clear stack
1f4f: push halfword from bank 0 [Addr=0000]
1f51: push constant #04e2
1f53: push A==B
1f54: jump if !A [Addr=1f8c]
1f56: clear stack
1f57: push special [Type=0000]
1f59: push constant #001a
1f5b: push A==B
1f5c: push special [Type=0001]
1f5e: push constant #0018
1f60: push A==B
1f61: push A&&B
1f62: jump if !A [Addr=1f8c]
1f64: clear stack
1f65: push special [Type=0002]
1f67: push constant #1692
1f69: push A>=B
1f6a: push special [Type=0002]
1f6c: push constant #1d31
1f6e: push A<=B
1f6f: push A&&B
1f70: jump if !A [Addr=1f8c]
1f72: clear stack
1f73: push special [Type=0003]
1f75: push constant #1068
1f77: push A>=B
1f78: push special [Type=0003]
1f7a: push constant #16bc
1f7c: push A<=B
1f7d: push A&&B
1f7e: jump if !A [Addr=1f8c]
1f80: clear stack
1f81: push constant #001a
1f83: push constant #0018
1f85: set active entity mesh coordinates A=MeshX, B=MeshZ
1f86: clear stack
1f87: push constant #15b1
1f89: push constant #16f8
1f8b: set active entity coordinates in mesh, A=XCoor, B=ZCoor
1f8c: return
1f8d: clear stack
1f8e: push special [Type=0008]
1f90: push constant #0000
1f92: push A==B
1f93: push special [Type=0008]
1f95: push constant #0001
1f97: push A==B
1f98: push A||B
1f99: push special [Type=0008]
1f9b: push constant #0002
1f9d: push A==B
1f9e: push A||B
1f9f: jump if !A [Addr=1fa5]
1fa1: clear stack
1fa2: push constant #ffff
1fa4: run function 19: A=ModelId
1fa5: return
1fa6: clear stack
1fa7: push constant #0005
1fa9: set wait frames A=NumFrames
1faa: wait
1fab: clear stack
1fac: push byte from bank 1 [Addr=0003]
1fae: push special [Type=0004]
1fb0: write to bank: A=Addr, B=Value
1fb1: clear stack
1fb2: push special [Type=0008]
1fb4: set active entity, A=ModelId
1fb5: clear stack
1fb6: push constant #ffff
1fb8: run function 11: A=ModelId
1fb9: unknown
1fba: clear stack
1fbb: push bit from bank 0 [Addr=03f1]
1fbd: push constant #0000
1fbf: write to bank: A=Addr, B=Value
1fc0: clear stack
1fc1: push constant #0001
1fc3: set control lock A=isControlsEnabled
1fc4: return
1fc5: return
1fc6: clear stack
1fc7: push bit from bank 0 [Addr=1c2d]
1fc9: push !A
1fca: jump if !A [Addr=1ff6]
1fcc: clear stack
1fcd: push constant #0000
1fcf: set control lock A=isControlsEnabled
1fd0: clear stack
1fd1: push bit from bank 0 [Addr=1c2d]
1fd3: push constant #0001
1fd5: write to bank: A=Addr, B=Value
1fd6: clear stack
1fd7: push constant #001e
1fd9: set wait frames A=NumFrames
1fda: wait
1fdb: wait for window ready
1fdc: clear stack
1fdd: push constant #0038
1fdf: push constant #0005
1fe1: push constant #00d0
1fe3: push constant #0099
1fe5: set window dimensions: X, Y, W, H
1fe6: clear stack
1fe7: push constant #0000
1fe9: push constant #0000
1feb: set window parameters, A=Mode, B=IsPermanent
1fec: wait for window ready
1fed: clear stack
1fee: push constant #0039
1ff0: set window message: A=MesId
1ff1: wait for message acknowledge
1ff2: clear stack
1ff3: push constant #0001
1ff5: set control lock A=isControlsEnabled
1ff6: return
1ff7: clear stack
1ff8: push special [Type=0008]
1ffa: push constant #0000
1ffc: push A==B
1ffd: push special [Type=0008]
1fff: push constant #0001
2001: push A==B
2002: push A||B
2003: push special [Type=0008]
2005: push constant #0002
2007: push A==B
2008: push A||B
2009: jump if !A [Addr=203f]
200b: clear stack
200c: push bit from bank 0 [Addr=0e79]
200e: jump if !A [Addr=2030]
2010: clear stack
2011: push bit from bank 0 [Addr=0e7a]
2013: jump if !A [Addr=2026]
2015: enter vehicle
2016: clear stack
2017: push special [Type=0008]
2019: push constant #0006
201b: push A==B
201c: jump if !A [Addr=2024]
201e: clear stack
201f: push bit from bank 0 [Addr=03f9]
2021: push constant #0001
2023: write to bank: A=Addr, B=Value
2024: jump [Addr=202e]
2026: clear stack
2027: push special [Type=0008]
2029: set active entity, A=ModelId
202a: clear stack
202b: push constant #ffff
202d: run function 16: A=ModelId
202e: jump [Addr=203f]
2030: enter vehicle
2031: clear stack
2032: push special [Type=0008]
2034: push constant #0006
2036: push A==B
2037: jump if !A [Addr=203f]
2039: clear stack
203a: push bit from bank 0 [Addr=03f9]
203c: push constant #0001
203e: write to bank: A=Addr, B=Value
203f: return
2040: clear stack
2041: push bit from bank 0 [Addr=03f9]
2043: push constant #0000
2045: write to bank: A=Addr, B=Value
2046: return
2047: clear stack
2048: push special [Type=0005]
204a: push constant #0000
204c: push A==B
204d: jump if !A [Addr=2087]
204f: clear stack
2050: push special [Type=0006]
2052: push constant #0028
2054: push A==B
2055: jump if !A [Addr=2087]
2057: clear stack
2058: push bit from bank 0 [Addr=1c30]
205a: push !A
205b: jump if !A [Addr=2087]
205d: clear stack
205e: push constant #0000
2060: set control lock A=isControlsEnabled
2061: clear stack
2062: push bit from bank 0 [Addr=1c30]
2064: push constant #0001
2066: write to bank: A=Addr, B=Value
2067: clear stack
2068: push constant #001e
206a: set wait frames A=NumFrames
206b: wait
206c: wait for window ready
206d: clear stack
206e: push constant #0032
2070: push constant #0005
2072: push constant #00dc
2074: push constant #0079
2076: set window dimensions: X, Y, W, H
2077: clear stack
2078: push constant #0000
207a: push constant #0000
207c: set window parameters, A=Mode, B=IsPermanent
207d: wait for window ready
207e: clear stack
207f: push constant #003a
2081: set window message: A=MesId
2082: wait for message acknowledge
2083: clear stack
2084: push constant #0001
2086: set control lock A=isControlsEnabled
2087: clear stack
2088: push halfword from bank 0 [Addr=0000]
208a: push constant #0281
208c: push A>=B
208d: jump if !A [Addr=20a4]
208f: clear stack
2090: push bit from bank 0 [Addr=0e7c]
2092: jump if !A [Addr=20a4]
2094: clear stack
2095: push constant #000d
2097: push constant #0017
2099: set active entity mesh coordinates A=MeshX, B=MeshZ
209a: clear stack
209b: push constant #1ca2
209d: push constant #076e
209f: set active entity coordinates in mesh, A=XCoor, B=ZCoor
20a0: clear stack
20a1: push constant #0080
20a3: set active entity direction & facing A=DirectionAndFacing
20a4: return
20a5: clear stack
20a6: push special [Type=0008]
20a8: push constant #0000
20aa: push A==B
20ab: push special [Type=0008]
20ad: push constant #0001
20af: push A==B
20b0: push A||B
20b1: push special [Type=0008]
20b3: push constant #0002
20b5: push A==B
20b6: push A||B
20b7: jump if !A [Addr=20e7]
20b9: clear stack
20ba: push bit from bank 0 [Addr=0e78]
20bc: jump if !A [Addr=20e6]
20be: clear stack
20bf: push bit from bank 0 [Addr=0e7e]
20c1: push !A
20c2: jump if !A [Addr=20e3]
20c4: clear stack
20c5: push bit from bank 0 [Addr=0e7d]
20c7: jump if !A [Addr=20e0]
20c9: clear stack
20ca: push constant #0000
20cc: set control lock A=isControlsEnabled
20cd: clear stack
20ce: push constant #0000
20d0: set battle lock, A=EnableRandomEncounters
20d1: clear stack
20d2: push constant #0014
20d4: set wait frames A=NumFrames
20d5: wait
20d6: clear stack
20d7: push special [Type=0008]
20d9: set active entity, A=ModelId
20da: clear stack
20db: push constant #ffff
20dd: run function 12: A=ModelId
20de: jump [Addr=20e1]
20e0: enter vehicle
20e1: jump [Addr=20e4]
20e3: enter vehicle
20e4: jump [Addr=20e7]
20e6: enter vehicle
20e7: return
20e8: clear stack
20e9: push bit from bank 0 [Addr=0e7c]
20eb: push constant #0000
20ed: write to bank: A=Addr, B=Value
20ee: return
20ef: clear stack
20f0: push constant #000e
20f2: push distance from active entity to entity by model id
20f3: push constant #0064
20f5: push A<=B
20f6: jump if !A [Addr=20f9]
20f8: unknown
20f9: clear stack
20fa: push halfword from bank 0 [Addr=0000]
20fc: push constant #062c
20fe: push A<B
20ff: jump if !A [Addr=2110]
2101: clear stack
2102: push constant #000e
2104: push distance from active entity to point
2105: push constant #0100
2107: push A<=B
2108: jump if !A [Addr=210e]
210a: clear stack
210b: push constant #0003
210d: run function 20: A=ModelId
210e: jump [Addr=2127]
2110: clear stack
2111: push halfword from bank 0 [Addr=0000]
2113: push constant #062c
2115: push A==B
2116: jump if !A [Addr=2127]
2118: clear stack
2119: push constant #000e
211b: push distance from active entity to point
211c: push constant #0100
211e: push A<=B
211f: jump if !A [Addr=2127]
2121: clear stack
2122: push constant #0034
2124: push constant #0000
2126: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2127: clear stack
2128: push halfword from bank 0 [Addr=0000]
212a: push constant #063c
212c: push A==B
212d: jump if !A [Addr=214a]
212f: clear stack
2130: push constant #0009
2132: push distance from active entity to point
2133: push constant #0100
2135: push A<=B
2136: jump if !A [Addr=214a]
2138: clear stack
2139: push halfword from bank 0 [Addr=0000]
213b: push constant #063e
213d: write to bank: A=Addr, B=Value
213e: clear stack
213f: push constant #0034
2141: push constant #0000
2143: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2144: clear stack
2145: push bit from bank 0 [Addr=1c2e]
2147: push constant #0001
2149: write to bank: A=Addr, B=Value
214a: return
214b: clear stack
214c: push special [Type=0005]
214e: push constant #0000
2150: push A==B
2151: jump if !A [Addr=21b6]
2153: clear stack
2154: push special [Type=0006]
2156: push constant #0033
2158: push A==B
2159: jump if !A [Addr=21b4]
215b: clear stack
215c: push byte from bank 0 [Addr=038d]
215e: push special [Type=0007]
2160: write to bank: A=Addr, B=Value
2161: clear stack
2162: push constant #000a
2164: unknown: A=?
2165: clear stack
2166: push halfword from bank 0 [Addr=0390]
2168: push constant #0000
216a: write to bank: A=Addr, B=Value
216b: clear stack
216c: push constant #017f
216e: play sound effect: A=SfxId
216f: unknown
2170: clear stack
2171: push constant #0016
2173: push constant #000f
2175: set active entity mesh coordinates A=MeshX, B=MeshZ
2176: clear stack
2177: push constant #1fa8
2179: push constant #06c4
217b: set active entity coordinates in mesh, A=XCoor, B=ZCoor
217c: clear stack
217d: push constant #0097
217f: set active entity direction & facing A=DirectionAndFacing
2180: clear stack
2181: push constant #0000
2183: set battle lock, A=EnableRandomEncounters
2184: clear stack
2185: push constant #0000
2187: set control lock A=isControlsEnabled
2188: clear stack
2189: push constant #0000
218b: unknown: A=?
218c: clear stack
218d: push constant #00e8
218f: unknown, A=?
2190: clear stack
2191: push constant #000f
2193: set wait frames A=NumFrames
2194: wait
2195: clear stack
2196: push constant #00a0
2198: set active entity movespeed A=Speed
2199: clear stack
219a: push constant #0014
219c: push -A
219d: unknown, A=?
219e: clear stack
219f: push constant #0096
21a1: set wait frames A=NumFrames
21a2: wait
21a3: clear stack
21a4: push constant #0000
21a6: unknown, A=?
21a7: clear stack
21a8: push constant #0055
21aa: set wait frames A=NumFrames
21ab: wait
21ac: clear stack
21ad: push constant #0000
21af: set active entity movespeed A=Speed
21b0: clear stack
21b1: push constant #000a
21b3: run function 28: A=ModelId
21b4: jump [Addr=21fc]
21b6: clear stack
21b7: push special [Type=0005]
21b9: push constant #0001
21bb: push A==B
21bc: jump if !A [Addr=21fc]
21be: clear stack
21bf: push bit from bank 0 [Addr=03d8]
21c1: jump if !A [Addr=21fc]
21c3: clear stack
21c4: push bit from bank 0 [Addr=1c34]
21c6: push !A
21c7: jump if !A [Addr=21fc]
21c9: clear stack
21ca: push bit from bank 0 [Addr=1c38]
21cc: jump if !A [Addr=21fc]
21ce: clear stack
21cf: push constant #0000
21d1: set control lock A=isControlsEnabled
21d2: unknown
21d3: clear stack
21d4: push constant #000a
21d6: unknown: A=?
21d7: clear stack
21d8: push constant #000b
21da: push constant #0015
21dc: set active entity mesh coordinates A=MeshX, B=MeshZ
21dd: clear stack
21de: push constant #15f0
21e0: push constant #079a
21e2: set active entity coordinates in mesh, A=XCoor, B=ZCoor
21e3: clear stack
21e4: push constant #0080
21e6: set active entity direction & facing A=DirectionAndFacing
21e7: clear stack
21e8: push constant #0000
21ea: unknown: A=?
21eb: clear stack
21ec: push constant #0000
21ee: unknown, A=?
21ef: clear stack
21f0: push constant #0000
21f2: set music volume, A=Volume
21f3: clear stack
21f4: push constant #000a
21f6: set wait frames A=NumFrames
21f7: wait
21f8: clear stack
21f9: push constant #000b
21fb: run function 27: A=ModelId
21fc: clear stack
21fd: push halfword from bank 0 [Addr=0000]
21ff: push constant #0522
2201: push A>=B
2202: jump if !A [Addr=2219]
2204: clear stack
2205: push bit from bank 0 [Addr=03fb]
2207: jump if !A [Addr=2219]
2209: clear stack
220a: push constant #000a
220c: push constant #000e
220e: set active entity mesh coordinates A=MeshX, B=MeshZ
220f: clear stack
2210: push constant #0d9d
2212: push constant #115c
2214: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2215: clear stack
2216: push constant #00f5
2218: set active entity direction & facing A=DirectionAndFacing
2219: return
221a: clear stack
221b: push constant #0000
221d: set music volume, A=Volume
221e: clear stack
221f: push constant #0000
2221: set control lock A=isControlsEnabled
2222: clear stack
2223: push constant #0000
2225: set battle lock, A=EnableRandomEncounters
2226: clear stack
2227: push constant #003c
2229: set wait frames A=NumFrames
222a: wait
222b: clear stack
222c: push special [Type=0004]
222e: push constant #0080
2230: push A+B
2231: set active entity direction & facing A=DirectionAndFacing
2232: clear stack
2233: push constant #0014
2235: set active entity movespeed A=Speed
2236: clear stack
2237: push constant #000a
2239: set wait frames A=NumFrames
223a: wait
223b: clear stack
223c: push constant #0000
223e: set active entity movespeed A=Speed
223f: wait for window ready
2240: clear stack
2241: push constant #0076
2243: push constant #00a0
2245: push constant #0054
2247: push constant #0029
2249: set window dimensions: X, Y, W, H
224a: clear stack
224b: push constant #0000
224d: push constant #0000
224f: set window parameters, A=Mode, B=IsPermanent
2250: wait for window ready
2251: clear stack
2252: push constant #0037
2254: set window message: A=MesId
2255: wait for message acknowledge
2256: clear stack
2257: push constant #0014
2259: set wait frames A=NumFrames
225a: wait
225b: clear stack
225c: push constant #0001
225e: shake camera on/off, A=Boolean
225f: clear stack
2260: push constant #017f
2262: play sound effect: A=SfxId
2263: clear stack
2264: push constant #0014
2266: set wait frames A=NumFrames
2267: wait
2268: clear stack
2269: push constant #007f
226b: set music volume, A=Volume
226c: clear stack
226d: push constant #0006
226f: send SoundFrameMagic command, A=?
2270: clear stack
2271: push constant #0007
2273: push constant #0001
2275: active entity play animation: A=AnimationID, B=shouldLoop
2276: clear stack
2277: push constant #0028
2279: set wait frames A=NumFrames
227a: wait
227b: wait for window ready
227c: clear stack
227d: push constant #0067
227f: push constant #00a0
2281: push constant #0072
2283: push constant #0029
2285: set window dimensions: X, Y, W, H
2286: clear stack
2287: push constant #0000
2289: push constant #0000
228b: set window parameters, A=Mode, B=IsPermanent
228c: wait for window ready
228d: clear stack
228e: push constant #0038
2290: set window message: A=MesId
2291: wait for message acknowledge
2292: clear stack
2293: push constant #001e
2295: set wait frames A=NumFrames
2296: wait
2297: clear stack
2298: push constant #0033
229a: set field entry point2?, A=FieldTblId?
229b: clear stack
229c: push constant #0001
229e: set control lock A=isControlsEnabled
229f: clear stack
22a0: push constant #0001
22a2: set battle lock, A=EnableRandomEncounters
22a3: return
22a4: clear stack
22a5: push constant #0000
22a7: set music volume, A=Volume
22a8: clear stack
22a9: push constant #0000
22ab: set control lock A=isControlsEnabled
22ac: clear stack
22ad: push constant #0000
22af: set battle lock, A=EnableRandomEncounters
22b0: clear stack
22b1: push constant #003c
22b3: set wait frames A=NumFrames
22b4: wait
22b5: clear stack
22b6: push special [Type=0004]
22b8: push constant #0080
22ba: push A+B
22bb: set active entity direction & facing A=DirectionAndFacing
22bc: clear stack
22bd: push constant #0014
22bf: set active entity movespeed A=Speed
22c0: clear stack
22c1: push constant #000a
22c3: set wait frames A=NumFrames
22c4: wait
22c5: clear stack
22c6: push constant #0000
22c8: set active entity movespeed A=Speed
22c9: wait for window ready
22ca: clear stack
22cb: push constant #0076
22cd: push constant #00a0
22cf: push constant #0054
22d1: push constant #0029
22d3: set window dimensions: X, Y, W, H
22d4: clear stack
22d5: push constant #0000
22d7: push constant #0000
22d9: set window parameters, A=Mode, B=IsPermanent
22da: wait for window ready
22db: clear stack
22dc: push constant #0037
22de: set window message: A=MesId
22df: wait for message acknowledge
22e0: clear stack
22e1: push constant #0014
22e3: set wait frames A=NumFrames
22e4: wait
22e5: clear stack
22e6: push constant #0001
22e8: shake camera on/off, A=Boolean
22e9: clear stack
22ea: push constant #017f
22ec: play sound effect: A=SfxId
22ed: clear stack
22ee: push constant #0014
22f0: set wait frames A=NumFrames
22f1: wait
22f2: clear stack
22f3: push constant #007f
22f5: set music volume, A=Volume
22f6: clear stack
22f7: push constant #0006
22f9: send SoundFrameMagic command, A=?
22fa: clear stack
22fb: push constant #0028
22fd: set wait frames A=NumFrames
22fe: wait
22ff: wait for window ready
2300: clear stack
2301: push constant #0067
2303: push constant #00a0
2305: push constant #0072
2307: push constant #0029
2309: set window dimensions: X, Y, W, H
230a: clear stack
230b: push constant #0000
230d: push constant #0000
230f: set window parameters, A=Mode, B=IsPermanent
2310: wait for window ready
2311: clear stack
2312: push constant #0038
2314: set window message: A=MesId
2315: wait for message acknowledge
2316: clear stack
2317: push constant #001e
2319: set wait frames A=NumFrames
231a: wait
231b: clear stack
231c: push constant #0033
231e: set field entry point2?, A=FieldTblId?
231f: clear stack
2320: push constant #0001
2322: set control lock A=isControlsEnabled
2323: clear stack
2324: push constant #0001
2326: set battle lock, A=EnableRandomEncounters
2327: return
2328: clear stack
2329: push special [Type=0008]
232b: push constant #0000
232d: push A==B
232e: push special [Type=0008]
2330: push constant #0001
2332: push A==B
2333: push A||B
2334: push special [Type=0008]
2336: push constant #0002
2338: push A==B
2339: push A||B
233a: push special [Type=0008]
233c: push constant #0013
233e: push A==B
233f: push A||B
2340: jump if !A [Addr=23c2]
2342: clear stack
2343: push special [Type=0008]
2345: push constant #0013
2347: push A==B
2348: jump if !A [Addr=2350]
234a: clear stack
234b: push bit from bank 0 [Addr=1c2f]
234d: push constant #0001
234f: write to bank: A=Addr, B=Value
2350: clear stack
2351: push bit from bank 0 [Addr=1a93]
2353: jump if !A [Addr=236a]
2355: clear stack
2356: push bit from bank 0 [Addr=1c2c]
2358: push !A
2359: jump if !A [Addr=236a]
235b: clear stack
235c: push constant #0000
235e: set control lock A=isControlsEnabled
235f: clear stack
2360: push bit from bank 0 [Addr=1c2c]
2362: push constant #0001
2364: write to bank: A=Addr, B=Value
2365: clear stack
2366: push special [Type=0008]
2368: run function 29: A=ModelId
2369: unknown
236a: clear stack
236b: push bit from bank 0 [Addr=0e78]
236d: jump if !A [Addr=23b3]
236f: clear stack
2370: push bit from bank 0 [Addr=0e7e]
2372: push !A
2373: jump if !A [Addr=23a2]
2375: clear stack
2376: push bit from bank 0 [Addr=0e7d]
2378: jump if !A [Addr=2391]
237a: clear stack
237b: push constant #0000
237d: set battle lock, A=EnableRandomEncounters
237e: clear stack
237f: push constant #0000
2381: set control lock A=isControlsEnabled
2382: clear stack
2383: push constant #0014
2385: set wait frames A=NumFrames
2386: wait
2387: clear stack
2388: push special [Type=0008]
238a: set active entity, A=ModelId
238b: clear stack
238c: push constant #ffff
238e: run function 12: A=ModelId
238f: jump [Addr=23a0]
2391: enter vehicle
2392: clear stack
2393: push special [Type=0008]
2395: push constant #0003
2397: push A==B
2398: jump if !A [Addr=23a0]
239a: clear stack
239b: push bit from bank 0 [Addr=03fd]
239d: push constant #0001
239f: write to bank: A=Addr, B=Value
23a0: jump [Addr=23b1]
23a2: enter vehicle
23a3: clear stack
23a4: push special [Type=0008]
23a6: push constant #0003
23a8: push A==B
23a9: jump if !A [Addr=23b1]
23ab: clear stack
23ac: push bit from bank 0 [Addr=03fd]
23ae: push constant #0001
23b0: write to bank: A=Addr, B=Value
23b1: jump [Addr=23c2]
23b3: enter vehicle
23b4: clear stack
23b5: push special [Type=0008]
23b7: push constant #0003
23b9: push A==B
23ba: jump if !A [Addr=23c2]
23bc: clear stack
23bd: push bit from bank 0 [Addr=03fd]
23bf: push constant #0001
23c1: write to bank: A=Addr, B=Value
23c2: return
23c3: clear stack
23c4: push bit from bank 0 [Addr=03fd]
23c6: push constant #0000
23c8: write to bank: A=Addr, B=Value
23c9: clear stack
23ca: push bit from bank 0 [Addr=03fb]
23cc: push constant #0000
23ce: write to bank: A=Addr, B=Value
23cf: clear stack
23d0: push bit from bank 0 [Addr=1c2f]
23d2: push constant #0000
23d4: write to bank: A=Addr, B=Value
23d5: return
23d6: clear stack
23d7: push bit from bank 0 [Addr=1a83]
23d9: jump if !A [Addr=2439]
23db: clear stack
23dc: push bit from bank 0 [Addr=03d2]
23de: push !A
23df: jump if !A [Addr=2437]
23e1: clear stack
23e2: push constant #0000
23e4: set control lock A=isControlsEnabled
23e5: clear stack
23e6: push constant #0000
23e8: set battle lock, A=EnableRandomEncounters
23e9: clear stack
23ea: push constant #001e
23ec: set wait frames A=NumFrames
23ed: wait
23ee: clear stack
23ef: push constant #0028
23f1: set active entity movespeed A=Speed
23f2: clear stack
23f3: push constant #0040
23f5: set active entity direction & facing A=DirectionAndFacing
23f6: clear stack
23f7: push constant #004b
23f9: set wait frames A=NumFrames
23fa: wait
23fb: clear stack
23fc: push constant #0000
23fe: set active entity movespeed A=Speed
23ff: clear stack
2400: push constant #000a
2402: set wait frames A=NumFrames
2403: wait
2404: unknown
2405: clear stack
2406: push special [Type=0008]
2408: set active entity, A=ModelId
2409: clear stack
240a: push constant #0000
240c: set control lock A=isControlsEnabled
240d: clear stack
240e: push constant #0014
2410: set wait frames A=NumFrames
2411: wait
2412: wait for window ready
2413: clear stack
2414: push constant #0012
2416: push constant #0005
2418: push constant #011b
241a: push constant #0059
241c: set window dimensions: X, Y, W, H
241d: clear stack
241e: push constant #0000
2420: push constant #0000
2422: set window parameters, A=Mode, B=IsPermanent
2423: wait for window ready
2424: clear stack
2425: push constant #003d
2427: set window message: A=MesId
2428: wait for message acknowledge
2429: clear stack
242a: push constant #0001
242c: set battle lock, A=EnableRandomEncounters
242d: clear stack
242e: push constant #0001
2430: set control lock A=isControlsEnabled
2431: clear stack
2432: push bit from bank 0 [Addr=03d2]
2434: push constant #0001
2436: write to bank: A=Addr, B=Value
2437: jump [Addr=24b7]
2439: clear stack
243a: push bit from bank 0 [Addr=1a92]
243c: jump if !A [Addr=24b7]
243e: clear stack
243f: push special [Type=0005]
2441: push constant #0000
2443: push A==B
2444: jump if !A [Addr=24b7]
2446: clear stack
2447: push special [Type=0006]
2449: push constant #0036
244b: push A==B
244c: jump if !A [Addr=24b7]
244e: clear stack
244f: push bit from bank 0 [Addr=1c31]
2451: push !A
2452: jump if !A [Addr=24b7]
2454: clear stack
2455: push constant #0000
2457: set control lock A=isControlsEnabled
2458: clear stack
2459: push constant #0000
245b: set battle lock, A=EnableRandomEncounters
245c: clear stack
245d: push constant #0032
245f: set wait frames A=NumFrames
2460: wait
2461: clear stack
2462: push constant #0028
2464: set active entity movespeed A=Speed
2465: clear stack
2466: push constant #0000
2468: set active entity direction & facing A=DirectionAndFacing
2469: clear stack
246a: push constant #0069
246c: set wait frames A=NumFrames
246d: wait
246e: clear stack
246f: push constant #0028
2471: set active entity movespeed A=Speed
2472: clear stack
2473: push constant #0040
2475: set active entity direction & facing A=DirectionAndFacing
2476: clear stack
2477: push constant #0034
2479: set wait frames A=NumFrames
247a: wait
247b: clear stack
247c: push constant #0000
247e: set active entity movespeed A=Speed
247f: clear stack
2480: push constant #000a
2482: set wait frames A=NumFrames
2483: wait
2484: unknown
2485: clear stack
2486: push special [Type=0008]
2488: set active entity, A=ModelId
2489: clear stack
248a: push constant #0000
248c: set control lock A=isControlsEnabled
248d: clear stack
248e: push constant #0014
2490: set wait frames A=NumFrames
2491: wait
2492: wait for window ready
2493: clear stack
2494: push constant #0012
2496: push constant #0005
2498: push constant #011b
249a: push constant #0059
249c: set window dimensions: X, Y, W, H
249d: clear stack
249e: push constant #0000
24a0: push constant #0000
24a2: set window parameters, A=Mode, B=IsPermanent
24a3: wait for window ready
24a4: clear stack
24a5: push constant #003d
24a7: set window message: A=MesId
24a8: wait for message acknowledge
24a9: clear stack
24aa: push constant #0001
24ac: set battle lock, A=EnableRandomEncounters
24ad: clear stack
24ae: push constant #0001
24b0: set control lock A=isControlsEnabled
24b1: clear stack
24b2: push bit from bank 0 [Addr=1c31]
24b4: push constant #0001
24b6: write to bank: A=Addr, B=Value
24b7: return
24b8: clear stack
24b9: push special [Type=0008]
24bb: push constant #0000
24bd: push A==B
24be: push special [Type=0008]
24c0: push constant #0001
24c2: push A==B
24c3: push A||B
24c4: push special [Type=0008]
24c6: push constant #0002
24c8: push A==B
24c9: push A||B
24ca: jump if !A [Addr=24cd]
24cc: enter vehicle
24cd: return
24ce: clear stack
24cf: push special [Type=0005]
24d1: push constant #0000
24d3: push A==B
24d4: jump if !A [Addr=28eb]
24d6: clear stack
24d7: push special [Type=0006]
24d9: push constant #0024
24db: push A==B
24dc: jump if !A [Addr=25ab]
24de: clear stack
24df: push byte from bank 0 [Addr=038d]
24e1: push special [Type=0007]
24e3: write to bank: A=Addr, B=Value
24e4: clear stack
24e5: push constant #017d
24e7: play sound effect: A=SfxId
24e8: clear stack
24e9: push constant #000a
24eb: unknown: A=?
24ec: clear stack
24ed: push constant #0000
24ef: set control lock A=isControlsEnabled
24f0: clear stack
24f1: push constant #0000
24f3: unknown: A=?
24f4: clear stack
24f5: push constant #0000
24f7: unknown, A=?
24f8: clear stack
24f9: push constant #0014
24fb: push constant #0011
24fd: set active entity mesh coordinates A=MeshX, B=MeshZ
24fe: clear stack
24ff: push constant #1121
2501: push constant #18c0
2503: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2504: clear stack
2505: push constant #00c0
2507: set active entity direction & facing A=DirectionAndFacing
2508: clear stack
2509: push constant #0001
250b: unknown: A=?
250c: clear stack
250d: push constant #0006
250f: unknown: A=?
2510: clear stack
2511: push constant #0002
2513: unknown, A=?
2514: clear stack
2515: push constant #0019
2517: unknown, A=?
2518: clear stack
2519: push constant #0082
251b: set wait frames A=NumFrames
251c: wait
251d: clear stack
251e: push constant #0000
2520: unknown: A=?
2521: clear stack
2522: push constant #0000
2524: unknown, A=?
2525: clear stack
2526: push constant #0000
2528: unknown, A=?
2529: clear stack
252a: push constant #000a
252c: set active entity movespeed A=Speed
252d: clear stack
252e: push constant #000a
2530: set wait frames A=NumFrames
2531: wait
2532: clear stack
2533: push constant #0014
2535: set active entity movespeed A=Speed
2536: clear stack
2537: push constant #000a
2539: set wait frames A=NumFrames
253a: wait
253b: clear stack
253c: push constant #001e
253e: set active entity movespeed A=Speed
253f: clear stack
2540: push constant #0014
2542: set wait frames A=NumFrames
2543: wait
2544: clear stack
2545: push constant #0028
2547: set active entity movespeed A=Speed
2548: clear stack
2549: push constant #005f
254b: set wait frames A=NumFrames
254c: wait
254d: clear stack
254e: push constant #0005
2550: push -A
2551: unknown: A=?
2552: clear stack
2553: push constant #0003
2555: push -A
2556: unknown, A=?
2557: clear stack
2558: push constant #006e
255a: set wait frames A=NumFrames
255b: wait
255c: clear stack
255d: push constant #0000
255f: unknown: A=?
2560: clear stack
2561: push constant #0000
2563: unknown, A=?
2564: clear stack
2565: push byte from bank 0 [Addr=0380]
2567: push constant #000d
2569: write to bank: A=Addr, B=Value
256a: clear stack
256b: push byte from bank 0 [Addr=0380]
256d: jump if !A [Addr=2586]
256f: clear stack
2570: push special [Type=0004]
2572: push constant #0003
2574: push A-B
2575: set active entity direction & facing A=DirectionAndFacing
2576: clear stack
2577: push constant #000a
2579: set wait frames A=NumFrames
257a: wait
257b: clear stack
257c: push byte from bank 0 [Addr=0380]
257e: push byte from bank 0 [Addr=0380]
2580: push constant #0001
2582: push A-B
2583: write to bank: A=Addr, B=Value
2584: jump [Addr=256a]
2586: clear stack
2587: push constant #0000
2589: unknown: A=?
258a: clear stack
258b: push constant #0096
258d: set wait frames A=NumFrames
258e: wait
258f: clear stack
2590: push constant #0032
2592: push -A
2593: unknown, A=?
2594: clear stack
2595: push constant #00a0
2597: set wait frames A=NumFrames
2598: wait
2599: clear stack
259a: push constant #0000
259c: unknown, A=?
259d: clear stack
259e: push bit from bank 0 [Addr=0e7f]
25a0: push constant #0000
25a2: write to bank: A=Addr, B=Value
25a3: clear stack
25a4: push constant #0024
25a6: push constant #0000
25a8: enter field scene: A=?, B=? (combine to form offset in field.tbl)
25a9: jump [Addr=28eb]
25ab: clear stack
25ac: push special [Type=0006]
25ae: push constant #0025
25b0: push A==B
25b1: jump if !A [Addr=2681]
25b3: clear stack
25b4: push constant #017d
25b6: play sound effect: A=SfxId
25b7: clear stack
25b8: push constant #000a
25ba: unknown: A=?
25bb: clear stack
25bc: push constant #0000
25be: set control lock A=isControlsEnabled
25bf: clear stack
25c0: push constant #0000
25c2: unknown: A=?
25c3: clear stack
25c4: push constant #0050
25c6: unknown, A=?
25c7: clear stack
25c8: push constant #0001
25ca: unknown: A=?
25cb: clear stack
25cc: push constant #0032
25ce: push -A
25cf: unknown, A=?
25d0: clear stack
25d1: push constant #0013
25d3: push constant #0011
25d5: set active entity mesh coordinates A=MeshX, B=MeshZ
25d6: clear stack
25d7: push constant #04df
25d9: push constant #0ef2
25db: set active entity coordinates in mesh, A=XCoor, B=ZCoor
25dc: clear stack
25dd: push constant #0099
25df: set active entity direction & facing A=DirectionAndFacing
25e0: clear stack
25e1: push constant #0028
25e3: set active entity movespeed A=Speed
25e4: clear stack
25e5: push constant #0046
25e7: set wait frames A=NumFrames
25e8: wait
25e9: clear stack
25ea: push constant #0005
25ec: push -A
25ed: unknown: A=?
25ee: clear stack
25ef: push constant #0005
25f1: unknown, A=?
25f2: clear stack
25f3: push constant #001e
25f5: set wait frames A=NumFrames
25f6: wait
25f7: clear stack
25f8: push constant #0064
25fa: set wait frames A=NumFrames
25fb: wait
25fc: clear stack
25fd: push constant #0064
25ff: set wait frames A=NumFrames
2600: wait
2601: clear stack
2602: push constant #0064
2604: set wait frames A=NumFrames
2605: wait
2606: clear stack
2607: push constant #0043
2609: set wait frames A=NumFrames
260a: wait
260b: clear stack
260c: push constant #0000
260e: unknown: A=?
260f: clear stack
2610: push constant #001e
2612: set active entity movespeed A=Speed
2613: clear stack
2614: push constant #001e
2616: set wait frames A=NumFrames
2617: wait
2618: clear stack
2619: push constant #0014
261b: set active entity movespeed A=Speed
261c: clear stack
261d: push constant #0041
261f: set wait frames A=NumFrames
2620: wait
2621: clear stack
2622: push constant #0000
2624: set active entity movespeed A=Speed
2625: clear stack
2626: push constant #001e
2628: set wait frames A=NumFrames
2629: wait
262a: clear stack
262b: push byte from bank 0 [Addr=0380]
262d: push constant #0023
262f: write to bank: A=Addr, B=Value
2630: clear stack
2631: push byte from bank 0 [Addr=0380]
2633: jump if !A [Addr=264c]
2635: clear stack
2636: push special [Type=0004]
2638: push constant #0003
263a: push A-B
263b: set active entity direction & facing A=DirectionAndFacing
263c: clear stack
263d: push constant #0005
263f: set wait frames A=NumFrames
2640: wait
2641: clear stack
2642: push byte from bank 0 [Addr=0380]
2644: push byte from bank 0 [Addr=0380]
2646: push constant #0001
2648: push A-B
2649: write to bank: A=Addr, B=Value
264a: jump [Addr=2630]
264c: clear stack
264d: push constant #0014
264f: set wait frames A=NumFrames
2650: wait
2651: clear stack
2652: push constant #0030
2654: set active entity direction & facing A=DirectionAndFacing
2655: clear stack
2656: push constant #00b0
2658: set active entity direction, A=Direction
2659: clear stack
265a: push constant #0014
265c: set active entity movespeed A=Speed
265d: clear stack
265e: push constant #0073
2660: set wait frames A=NumFrames
2661: wait
2662: clear stack
2663: push constant #0000
2665: set active entity movespeed A=Speed
2666: clear stack
2667: push constant #0000
2669: unknown, A=?
266a: clear stack
266b: push constant #0014
266d: set wait frames A=NumFrames
266e: wait
266f: clear stack
2670: push bit from bank 0 [Addr=0e7f]
2672: push constant #0000
2674: write to bank: A=Addr, B=Value
2675: clear stack
2676: push constant #0025
2678: push constant #0000
267a: enter field scene: A=?, B=? (combine to form offset in field.tbl)
267b: clear stack
267c: push byte from bank 0 [Addr=038d]
267e: unknown: A=?
267f: jump [Addr=28eb]
2681: clear stack
2682: push special [Type=0006]
2684: push constant #0026
2686: push A==B
2687: jump if !A [Addr=27c6]
2689: clear stack
268a: push byte from bank 0 [Addr=038d]
268c: push special [Type=0007]
268e: write to bank: A=Addr, B=Value
268f: clear stack
2690: push constant #017d
2692: play sound effect: A=SfxId
2693: clear stack
2694: push constant #000a
2696: unknown: A=?
2697: clear stack
2698: push constant #0000
269a: set control lock A=isControlsEnabled
269b: clear stack
269c: push constant #0000
269e: unknown: A=?
269f: clear stack
26a0: push constant #0022
26a2: unknown, A=?
26a3: clear stack
26a4: push constant #0001
26a6: unknown: A=?
26a7: clear stack
26a8: push constant #0032
26aa: push -A
26ab: unknown, A=?
26ac: clear stack
26ad: push constant #0014
26af: push constant #0011
26b1: set active entity mesh coordinates A=MeshX, B=MeshZ
26b2: clear stack
26b3: push constant #1121
26b5: push constant #18c0
26b7: set active entity coordinates in mesh, A=XCoor, B=ZCoor
26b8: clear stack
26b9: push constant #00c0
26bb: set active entity direction & facing A=DirectionAndFacing
26bc: clear stack
26bd: push constant #000a
26bf: set wait frames A=NumFrames
26c0: wait
26c1: clear stack
26c2: push constant #0003
26c4: unknown, A=?
26c5: clear stack
26c6: push constant #0003
26c8: push -A
26c9: unknown: A=?
26ca: clear stack
26cb: push constant #000a
26cd: set active entity movespeed A=Speed
26ce: clear stack
26cf: push constant #000a
26d1: set wait frames A=NumFrames
26d2: wait
26d3: clear stack
26d4: push constant #0014
26d6: set active entity movespeed A=Speed
26d7: clear stack
26d8: push constant #000a
26da: set wait frames A=NumFrames
26db: wait
26dc: clear stack
26dd: push constant #001e
26df: set active entity movespeed A=Speed
26e0: clear stack
26e1: push constant #0014
26e3: set wait frames A=NumFrames
26e4: wait
26e5: clear stack
26e6: push constant #0028
26e8: set active entity movespeed A=Speed
26e9: clear stack
26ea: push constant #0064
26ec: set wait frames A=NumFrames
26ed: wait
26ee: clear stack
26ef: push constant #0032
26f1: set wait frames A=NumFrames
26f2: wait
26f3: clear stack
26f4: push byte from bank 0 [Addr=0380]
26f6: push constant #0008
26f8: write to bank: A=Addr, B=Value
26f9: clear stack
26fa: push byte from bank 0 [Addr=0380]
26fc: jump if !A [Addr=2715]
26fe: clear stack
26ff: push special [Type=0004]
2701: push constant #0003
2703: push A-B
2704: set active entity direction & facing A=DirectionAndFacing
2705: clear stack
2706: push constant #000a
2708: set wait frames A=NumFrames
2709: wait
270a: clear stack
270b: push byte from bank 0 [Addr=0380]
270d: push byte from bank 0 [Addr=0380]
270f: push constant #0001
2711: push A-B
2712: write to bank: A=Addr, B=Value
2713: jump [Addr=26f9]
2715: clear stack
2716: push constant #0000
2718: unknown: A=?
2719: clear stack
271a: push byte from bank 0 [Addr=0380]
271c: push constant #0005
271e: write to bank: A=Addr, B=Value
271f: clear stack
2720: push byte from bank 0 [Addr=0380]
2722: jump if !A [Addr=273b]
2724: clear stack
2725: push special [Type=0004]
2727: push constant #0003
2729: push A-B
272a: set active entity direction & facing A=DirectionAndFacing
272b: clear stack
272c: push constant #000a
272e: set wait frames A=NumFrames
272f: wait
2730: clear stack
2731: push byte from bank 0 [Addr=0380]
2733: push byte from bank 0 [Addr=0380]
2735: push constant #0001
2737: push A-B
2738: write to bank: A=Addr, B=Value
2739: jump [Addr=271f]
273b: clear stack
273c: push constant #0064
273e: set wait frames A=NumFrames
273f: wait
2740: clear stack
2741: push constant #0064
2743: set wait frames A=NumFrames
2744: wait
2745: clear stack
2746: push constant #0064
2748: set wait frames A=NumFrames
2749: wait
274a: clear stack
274b: push constant #0064
274d: set wait frames A=NumFrames
274e: wait
274f: clear stack
2750: push constant #0041
2752: set wait frames A=NumFrames
2753: wait
2754: clear stack
2755: push constant #001e
2757: set active entity movespeed A=Speed
2758: clear stack
2759: push constant #001e
275b: set wait frames A=NumFrames
275c: wait
275d: clear stack
275e: push constant #0014
2760: set active entity movespeed A=Speed
2761: clear stack
2762: push constant #0041
2764: set wait frames A=NumFrames
2765: wait
2766: clear stack
2767: push constant #0000
2769: set active entity movespeed A=Speed
276a: clear stack
276b: push constant #001e
276d: set wait frames A=NumFrames
276e: wait
276f: clear stack
2770: push byte from bank 0 [Addr=0380]
2772: push constant #0023
2774: write to bank: A=Addr, B=Value
2775: clear stack
2776: push byte from bank 0 [Addr=0380]
2778: jump if !A [Addr=2791]
277a: clear stack
277b: push special [Type=0004]
277d: push constant #0003
277f: push A-B
2780: set active entity direction & facing A=DirectionAndFacing
2781: clear stack
2782: push constant #0005
2784: set wait frames A=NumFrames
2785: wait
2786: clear stack
2787: push byte from bank 0 [Addr=0380]
2789: push byte from bank 0 [Addr=0380]
278b: push constant #0001
278d: push A-B
278e: write to bank: A=Addr, B=Value
278f: jump [Addr=2775]
2791: clear stack
2792: push constant #0014
2794: set wait frames A=NumFrames
2795: wait
2796: clear stack
2797: push constant #0030
2799: set active entity direction & facing A=DirectionAndFacing
279a: clear stack
279b: push constant #00b0
279d: set active entity direction, A=Direction
279e: clear stack
279f: push constant #0014
27a1: set active entity movespeed A=Speed
27a2: clear stack
27a3: push constant #0073
27a5: set wait frames A=NumFrames
27a6: wait
27a7: clear stack
27a8: push constant #0000
27aa: set active entity movespeed A=Speed
27ab: clear stack
27ac: push constant #0000
27ae: unknown, A=?
27af: clear stack
27b0: push constant #0014
27b2: set wait frames A=NumFrames
27b3: wait
27b4: clear stack
27b5: push bit from bank 0 [Addr=0e7f]
27b7: push constant #0000
27b9: write to bank: A=Addr, B=Value
27ba: clear stack
27bb: push constant #0026
27bd: push constant #0000
27bf: enter field scene: A=?, B=? (combine to form offset in field.tbl)
27c0: clear stack
27c1: push byte from bank 0 [Addr=038d]
27c3: unknown: A=?
27c4: jump [Addr=28eb]
27c6: clear stack
27c7: push special [Type=0006]
27c9: push constant #0027
27cb: push A==B
27cc: jump if !A [Addr=28eb]
27ce: clear stack
27cf: push byte from bank 0 [Addr=038d]
27d1: push special [Type=0007]
27d3: write to bank: A=Addr, B=Value
27d4: clear stack
27d5: push constant #017d
27d7: play sound effect: A=SfxId
27d8: clear stack
27d9: push constant #000a
27db: unknown: A=?
27dc: clear stack
27dd: push constant #0000
27df: set control lock A=isControlsEnabled
27e0: clear stack
27e1: push constant #0000
27e3: unknown: A=?
27e4: clear stack
27e5: push constant #00de
27e7: unknown, A=?
27e8: clear stack
27e9: push constant #0001
27eb: unknown: A=?
27ec: clear stack
27ed: push constant #0032
27ef: push -A
27f0: unknown, A=?
27f1: clear stack
27f2: push constant #0011
27f4: push constant #000f
27f6: set active entity mesh coordinates A=MeshX, B=MeshZ
27f7: clear stack
27f8: push constant #0b9c
27fa: push constant #0866
27fc: set active entity coordinates in mesh, A=XCoor, B=ZCoor
27fd: clear stack
27fe: push constant #0034
2800: set active entity direction & facing A=DirectionAndFacing
2801: clear stack
2802: push constant #000a
2804: set wait frames A=NumFrames
2805: wait
2806: clear stack
2807: push constant #0003
2809: unknown, A=?
280a: clear stack
280b: push constant #0003
280d: unknown: A=?
280e: clear stack
280f: push constant #000a
2811: set active entity movespeed A=Speed
2812: clear stack
2813: push constant #000a
2815: set wait frames A=NumFrames
2816: wait
2817: clear stack
2818: push constant #0014
281a: set active entity movespeed A=Speed
281b: clear stack
281c: push constant #000a
281e: set wait frames A=NumFrames
281f: wait
2820: clear stack
2821: push constant #001e
2823: set active entity movespeed A=Speed
2824: clear stack
2825: push constant #0014
2827: set wait frames A=NumFrames
2828: wait
2829: clear stack
282a: push constant #0028
282c: set active entity movespeed A=Speed
282d: clear stack
282e: push constant #0064
2830: set wait frames A=NumFrames
2831: wait
2832: clear stack
2833: push constant #0064
2835: set wait frames A=NumFrames
2836: wait
2837: clear stack
2838: push constant #0064
283a: set wait frames A=NumFrames
283b: wait
283c: clear stack
283d: push constant #0064
283f: set wait frames A=NumFrames
2840: wait
2841: clear stack
2842: push constant #0014
2844: set wait frames A=NumFrames
2845: wait
2846: clear stack
2847: push byte from bank 0 [Addr=0380]
2849: push constant #000d
284b: write to bank: A=Addr, B=Value
284c: clear stack
284d: push byte from bank 0 [Addr=0380]
284f: jump if !A [Addr=2868]
2851: clear stack
2852: push special [Type=0004]
2854: push constant #0003
2856: push A-B
2857: set active entity direction & facing A=DirectionAndFacing
2858: clear stack
2859: push constant #000a
285b: set wait frames A=NumFrames
285c: wait
285d: clear stack
285e: push byte from bank 0 [Addr=0380]
2860: push byte from bank 0 [Addr=0380]
2862: push constant #0001
2864: push A-B
2865: write to bank: A=Addr, B=Value
2866: jump [Addr=284c]
2868: clear stack
2869: push constant #0064
286b: set wait frames A=NumFrames
286c: wait
286d: clear stack
286e: push constant #0000
2870: unknown: A=?
2871: clear stack
2872: push constant #0064
2874: set wait frames A=NumFrames
2875: wait
2876: clear stack
2877: push constant #004a
2879: set wait frames A=NumFrames
287a: wait
287b: clear stack
287c: push constant #001e
287e: set active entity movespeed A=Speed
287f: clear stack
2880: push constant #001e
2882: set wait frames A=NumFrames
2883: wait
2884: clear stack
2885: push constant #0014
2887: set active entity movespeed A=Speed
2888: clear stack
2889: push constant #0041
288b: set wait frames A=NumFrames
288c: wait
288d: clear stack
288e: push constant #0000
2890: set active entity movespeed A=Speed
2891: clear stack
2892: push constant #001e
2894: set wait frames A=NumFrames
2895: wait
2896: clear stack
2897: push byte from bank 0 [Addr=0380]
2899: push constant #001a
289b: write to bank: A=Addr, B=Value
289c: clear stack
289d: push byte from bank 0 [Addr=0380]
289f: jump if !A [Addr=28b8]
28a1: clear stack
28a2: push special [Type=0004]
28a4: push constant #0003
28a6: push A-B
28a7: set active entity direction & facing A=DirectionAndFacing
28a8: clear stack
28a9: push constant #0005
28ab: set wait frames A=NumFrames
28ac: wait
28ad: clear stack
28ae: push byte from bank 0 [Addr=0380]
28b0: push byte from bank 0 [Addr=0380]
28b2: push constant #0001
28b4: push A-B
28b5: write to bank: A=Addr, B=Value
28b6: jump [Addr=289c]
28b8: clear stack
28b9: push constant #0014
28bb: set wait frames A=NumFrames
28bc: wait
28bd: clear stack
28be: push constant #00bf
28c0: set active entity direction & facing A=DirectionAndFacing
28c1: clear stack
28c2: push constant #003f
28c4: set active entity direction, A=Direction
28c5: clear stack
28c6: push constant #0014
28c8: set active entity movespeed A=Speed
28c9: clear stack
28ca: push constant #0064
28cc: set wait frames A=NumFrames
28cd: wait
28ce: clear stack
28cf: push constant #0000
28d1: unknown, A=?
28d2: clear stack
28d3: push constant #0000
28d5: set active entity movespeed A=Speed
28d6: clear stack
28d7: push constant #0014
28d9: set wait frames A=NumFrames
28da: wait
28db: clear stack
28dc: push bit from bank 0 [Addr=0e7f]
28de: push constant #0000
28e0: write to bank: A=Addr, B=Value
28e1: clear stack
28e2: push constant #0027
28e4: push constant #0000
28e6: enter field scene: A=?, B=? (combine to form offset in field.tbl)
28e7: clear stack
28e8: push byte from bank 0 [Addr=038d]
28ea: unknown: A=?
28eb: return
28ec: clear stack
28ed: push constant #01d5
28ef: trigger battle: A=SceneId?
28f0: clear stack
28f1: push bit from bank 0 [Addr=1c20]
28f3: push constant #0001
28f5: write to bank: A=Addr, B=Value
28f6: clear stack
28f7: push bit from bank 0 [Addr=1c21]
28f9: push special [Type=000b]
28fb: write to bank: A=Addr, B=Value
28fc: return
28fd: clear stack
28fe: push constant #0014
2900: push constant #0011
2902: set active entity mesh coordinates A=MeshX, B=MeshZ
2903: clear stack
2904: push constant #157c
2906: push constant #18b0
2908: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2909: clear stack
290a: push constant #00c0
290c: set active entity direction & facing A=DirectionAndFacing
290d: return
290e: clear stack
290f: push constant #0016
2911: push constant #000e
2913: set active entity mesh coordinates A=MeshX, B=MeshZ
2914: clear stack
2915: push constant #124b
2917: push constant #0f1d
2919: set active entity coordinates in mesh, A=XCoor, B=ZCoor
291a: clear stack
291b: push constant #00fb
291d: set active entity direction & facing A=DirectionAndFacing
291e: clear stack
291f: push constant #0064
2921: push -A
2922: set active entity y offset A=YOffset
2923: return
2924: clear stack
2925: push constant #0018
2927: push constant #0014
2929: set active entity mesh coordinates A=MeshX, B=MeshZ
292a: clear stack
292b: push constant #1a1d
292d: push constant #1621
292f: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2930: clear stack
2931: push constant #0000
2933: set active entity direction & facing A=DirectionAndFacing
2934: return
2935: clear stack
2936: push constant #000e
2938: push constant #0012
293a: set active entity mesh coordinates A=MeshX, B=MeshZ
293b: clear stack
293c: push constant #1738
293e: push constant #17d9
2940: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2941: clear stack
2942: push constant #0000
2944: set active entity direction & facing A=DirectionAndFacing
2945: return
2946: clear stack
2947: push constant #000a
2949: push constant #000e
294b: set active entity mesh coordinates A=MeshX, B=MeshZ
294c: clear stack
294d: push constant #09b2
294f: push constant #1523
2951: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2952: clear stack
2953: push constant #0000
2955: set active entity direction & facing A=DirectionAndFacing
2956: return
2957: clear stack
2958: push constant #000a
295a: push constant #000e
295c: set active entity mesh coordinates A=MeshX, B=MeshZ
295d: clear stack
295e: push constant #098a
2960: push constant #14bf
2962: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2963: clear stack
2964: push constant #0000
2966: set active entity direction & facing A=DirectionAndFacing
2967: return
2968: clear stack
2969: push constant #0010
296b: push constant #0004
296d: set active entity mesh coordinates A=MeshX, B=MeshZ
296e: clear stack
296f: push constant #0001
2971: push constant #1004
2973: set active entity coordinates in mesh, A=XCoor, B=ZCoor
2974: clear stack
2975: push constant #0a5a
2977: set active entity y offset A=YOffset
2978: return
2979: clear stack
297a: push special [Type=0008]
297c: push constant #0000
297e: push A==B
297f: push special [Type=0008]
2981: push constant #0001
2983: push A==B
2984: push A||B
2985: push special [Type=0008]
2987: push constant #0002
2989: push A==B
298a: push A||B
298b: jump if !A [Addr=2993]
298d: clear stack
298e: push constant #0037
2990: push constant #0000
2992: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2993: return
2994: clear stack
2995: push constant #000b
2997: push constant #0015
2999: set active entity mesh coordinates A=MeshX, B=MeshZ
299a: clear stack
299b: push constant #0b20
299d: push constant #1e13
299f: set active entity coordinates in mesh, A=XCoor, B=ZCoor
29a0: clear stack
29a1: push constant #0080
29a3: set active entity direction & facing A=DirectionAndFacing
29a4: return
29a5: clear stack
29a6: push special [Type=0008]
29a8: run function 15: A=ModelId
29a9: return
29aa: clear stack
29ab: push special [Type=0008]
29ad: run function 15: A=ModelId
29ae: return
29af: clear stack
29b0: push special [Type=0008]
29b2: run function 15: A=ModelId
29b3: return
29b4: clear stack
29b5: push special [Type=0008]
29b7: run function 15: A=ModelId
29b8: return
29b9: clear stack
29ba: push special [Type=0008]
29bc: run function 15: A=ModelId
29bd: return
29be: clear stack
29bf: push special [Type=0008]
29c1: run function 15: A=ModelId
29c2: return
29c3: clear stack
29c4: push special [Type=0008]
29c6: run function 15: A=ModelId
29c7: return
29c8: clear stack
29c9: push special [Type=0008]
29cb: run function 15: A=ModelId
29cc: return
29cd: clear stack
29ce: push bit from bank 0 [Addr=1c24]
29d0: push constant #0001
29d2: write to bank: A=Addr, B=Value
29d3: return
29d4: clear stack
29d5: push bit from bank 0 [Addr=1c24]
29d7: push constant #0000
29d9: write to bank: A=Addr, B=Value
29da: return
29db: clear stack
29dc: push bit from bank 0 [Addr=0e7b]
29de: push !A
29df: jump if !A [Addr=2a01]
29e1: clear stack
29e2: push special [Type=0008]
29e4: push constant #0000
29e6: push A==B
29e7: push special [Type=0008]
29e9: push constant #0001
29eb: push A==B
29ec: push A||B
29ed: push special [Type=0008]
29ef: push constant #0002
29f1: push A==B
29f2: push A||B
29f3: push special [Type=0008]
29f5: push constant #0004
29f7: push A==B
29f8: push A||B
29f9: jump if !A [Addr=2a01]
29fb: clear stack
29fc: push constant #0020
29fe: push constant #0000
2a00: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2a01: return
2a02: clear stack
2a03: push halfword from bank 0 [Addr=0000]
2a05: push constant #0642
2a07: push A<B
2a08: jump if !A [Addr=2a3b]
2a0a: clear stack
2a0b: push bit from bank 0 [Addr=0e78]
2a0d: jump if !A [Addr=2a3b]
2a0f: clear stack
2a10: push bit from bank 0 [Addr=0e7e]
2a12: push !A
2a13: jump if !A [Addr=2a3b]
2a15: clear stack
2a16: push bit from bank 0 [Addr=0e7d]
2a18: push !A
2a19: jump if !A [Addr=2a3b]
2a1b: clear stack
2a1c: push special [Type=0008]
2a1e: push constant #0000
2a20: push A==B
2a21: push special [Type=0008]
2a23: push constant #0001
2a25: push A==B
2a26: push A||B
2a27: push special [Type=0008]
2a29: push constant #0002
2a2b: push A==B
2a2c: push A||B
2a2d: push special [Type=0008]
2a2f: push constant #0004
2a31: push A==B
2a32: push A||B
2a33: jump if !A [Addr=2a3b]
2a35: clear stack
2a36: push constant #0022
2a38: push constant #0000
2a3a: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2a3b: return
2a3c: clear stack
2a3d: push special [Type=0008]
2a3f: push constant #0006
2a41: push A==B
2a42: jump if !A [Addr=2a62]
2a44: clear stack
2a45: push bit from bank 0 [Addr=0e79]
2a47: push !A
2a48: jump if !A [Addr=2a54]
2a4a: clear stack
2a4b: push constant #0000
2a4d: set control lock A=isControlsEnabled
2a4e: clear stack
2a4f: push constant #0006
2a51: run function 18: A=ModelId
2a52: jump [Addr=2a62]
2a54: clear stack
2a55: push bit from bank 0 [Addr=0e7a]
2a57: push !A
2a58: jump if !A [Addr=2a62]
2a5a: clear stack
2a5b: push constant #0000
2a5d: set control lock A=isControlsEnabled
2a5e: clear stack
2a5f: push constant #0006
2a61: run function 18: A=ModelId
2a62: return
2a63: clear stack
2a64: push constant #0000
2a66: set control lock A=isControlsEnabled
2a67: clear stack
2a68: push constant #001e
2a6a: push -A
2a6b: unknown, A=?
2a6c: clear stack
2a6d: push constant #001e
2a6f: set wait frames A=NumFrames
2a70: wait
2a71: clear stack
2a72: push constant #0000
2a74: unknown, A=?
2a75: clear stack
2a76: push constant #0010
2a78: push constant #0001
2a7a: fade out?, A=?, B=?
2a7b: clear stack
2a7c: push constant #001e
2a7e: set wait frames A=NumFrames
2a7f: wait
2a80: clear stack
2a81: push constant #003b
2a83: push constant #0000
2a85: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2a86: clear stack
2a87: push constant #0001
2a89: set control lock A=isControlsEnabled
2a8a: return
2a8b: clear stack
2a8c: push halfword from bank 0 [Addr=0000]
2a8e: push constant #0654
2a90: push A>=B
2a91: jump if !A [Addr=2a97]
2a93: clear stack
2a94: push constant #0003
2a96: run function 30: A=ModelId
2a97: return
2a98: clear stack
2a99: push constant #0000
2a9b: set control lock A=isControlsEnabled
2a9c: clear stack
2a9d: push constant #0005
2a9f: unknown: A=?
2aa0: clear stack
2aa1: push constant #0014
2aa3: set active entity movespeed A=Speed
2aa4: clear stack
2aa5: push special [Type=000d]
2aa7: jump if !A [Addr=2ab0]
2aa9: clear stack
2aaa: push constant #0001
2aac: set wait frames A=NumFrames
2aad: wait
2aae: jump [Addr=2aa4]
2ab0: clear stack
2ab1: push constant #0000
2ab3: set active entity movespeed A=Speed
2ab4: clear stack
2ab5: push constant #0001
2ab7: set control lock A=isControlsEnabled
2ab8: return
2ab9: clear stack
2aba: push constant #0000
2abc: set control lock A=isControlsEnabled
2abd: clear stack
2abe: push constant #0005
2ac0: unknown: A=?
2ac1: clear stack
2ac2: push constant #0014
2ac4: set active entity movespeed A=Speed
2ac5: clear stack
2ac6: push special [Type=000d]
2ac8: jump if !A [Addr=2ad1]
2aca: clear stack
2acb: push constant #0001
2acd: set wait frames A=NumFrames
2ace: wait
2acf: jump [Addr=2ac5]
2ad1: clear stack
2ad2: push constant #0000
2ad4: set active entity movespeed A=Speed
2ad5: clear stack
2ad6: push constant #0001
2ad8: set control lock A=isControlsEnabled
2ad9: return
2ada: clear stack
2adb: push special [Type=0008]
2add: push constant #0000
2adf: push A==B
2ae0: push special [Type=0008]
2ae2: push constant #0001
2ae4: push A==B
2ae5: push A||B
2ae6: push special [Type=0008]
2ae8: push constant #0002
2aea: push A==B
2aeb: push A||B
2aec: jump if !A [Addr=2af4]
2aee: clear stack
2aef: push constant #0001
2af1: push constant #0000
2af3: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2af4: return
2af5: clear stack
2af6: push special [Type=0008]
2af8: push constant #0000
2afa: push A==B
2afb: push special [Type=0008]
2afd: push constant #0001
2aff: push A==B
2b00: push A||B
2b01: push special [Type=0008]
2b03: push constant #0002
2b05: push A==B
2b06: push A||B
2b07: jump if !A [Addr=2b0f]
2b09: clear stack
2b0a: push constant #0002
2b0c: push constant #0000
2b0e: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b0f: return
2b10: clear stack
2b11: push special [Type=0008]
2b13: push constant #0000
2b15: push A==B
2b16: push special [Type=0008]
2b18: push constant #0001
2b1a: push A==B
2b1b: push A||B
2b1c: push special [Type=0008]
2b1e: push constant #0002
2b20: push A==B
2b21: push A||B
2b22: jump if !A [Addr=2b39]
2b24: clear stack
2b25: push bit from bank 0 [Addr=03e8]
2b27: jump if !A [Addr=2b31]
2b29: clear stack
2b2a: push constant #0003
2b2c: push constant #0001
2b2e: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b2f: jump [Addr=2b37]
2b31: clear stack
2b32: push constant #0003
2b34: push constant #0000
2b36: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b37: jump [Addr=2b84]
2b39: clear stack
2b3a: push special [Type=0008]
2b3c: push constant #0013
2b3e: push A==B
2b3f: jump if !A [Addr=2b84]
2b41: clear stack
2b42: push bit from bank 0 [Addr=03f0]
2b44: push constant #0000
2b46: write to bank: A=Addr, B=Value
2b47: clear stack
2b48: push bit from bank 0 [Addr=03f2]
2b4a: push constant #0000
2b4c: write to bank: A=Addr, B=Value
2b4d: clear stack
2b4e: push bit from bank 0 [Addr=03f3]
2b50: push constant #0000
2b52: write to bank: A=Addr, B=Value
2b53: clear stack
2b54: push bit from bank 0 [Addr=03f4]
2b56: push constant #0000
2b58: write to bank: A=Addr, B=Value
2b59: clear stack
2b5a: push bit from bank 0 [Addr=03f5]
2b5c: push constant #0000
2b5e: write to bank: A=Addr, B=Value
2b5f: clear stack
2b60: push bit from bank 0 [Addr=03f6]
2b62: push constant #0000
2b64: write to bank: A=Addr, B=Value
2b65: clear stack
2b66: push bit from bank 0 [Addr=03f1]
2b68: push constant #0000
2b6a: write to bank: A=Addr, B=Value
2b6b: clear stack
2b6c: push byte from bank 0 [Addr=007c]
2b6e: push constant #0000
2b70: write to bank: A=Addr, B=Value
2b71: clear stack
2b72: push bit from bank 0 [Addr=03e8]
2b74: jump if !A [Addr=2b7e]
2b76: clear stack
2b77: push constant #0003
2b79: push constant #0001
2b7b: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b7c: jump [Addr=2b84]
2b7e: clear stack
2b7f: push constant #0003
2b81: push constant #0000
2b83: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b84: return
2b85: clear stack
2b86: push special [Type=0008]
2b88: push constant #0000
2b8a: push A==B
2b8b: push special [Type=0008]
2b8d: push constant #0001
2b8f: push A==B
2b90: push A||B
2b91: push special [Type=0008]
2b93: push constant #0002
2b95: push A==B
2b96: push A||B
2b97: jump if !A [Addr=2b9f]
2b99: clear stack
2b9a: push constant #0004
2b9c: push constant #0000
2b9e: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2b9f: return
2ba0: clear stack
2ba1: push special [Type=0008]
2ba3: push constant #0000
2ba5: push A==B
2ba6: push special [Type=0008]
2ba8: push constant #0001
2baa: push A==B
2bab: push A||B
2bac: push special [Type=0008]
2bae: push constant #0002
2bb0: push A==B
2bb1: push A||B
2bb2: jump if !A [Addr=2bba]
2bb4: clear stack
2bb5: push constant #0005
2bb7: push constant #0000
2bb9: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2bba: return
2bbb: clear stack
2bbc: push special [Type=0008]
2bbe: push constant #0000
2bc0: push A==B
2bc1: push special [Type=0008]
2bc3: push constant #0001
2bc5: push A==B
2bc6: push A||B
2bc7: push special [Type=0008]
2bc9: push constant #0002
2bcb: push A==B
2bcc: push A||B
2bcd: jump if !A [Addr=2bd5]
2bcf: clear stack
2bd0: push constant #0006
2bd2: push constant #0000
2bd4: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2bd5: return
2bd6: clear stack
2bd7: push special [Type=0008]
2bd9: push constant #0000
2bdb: push A==B
2bdc: push special [Type=0008]
2bde: push constant #0001
2be0: push A==B
2be1: push A||B
2be2: push special [Type=0008]
2be4: push constant #0002
2be6: push A==B
2be7: push A||B
2be8: push special [Type=0008]
2bea: push constant #0006
2bec: push A==B
2bed: push A||B
2bee: jump if !A [Addr=2bf6]
2bf0: clear stack
2bf1: push constant #0007
2bf3: push constant #0000
2bf5: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2bf6: return
2bf7: clear stack
2bf8: push special [Type=0008]
2bfa: push constant #0000
2bfc: push A==B
2bfd: push special [Type=0008]
2bff: push constant #0001
2c01: push A==B
2c02: push A||B
2c03: push special [Type=0008]
2c05: push constant #0002
2c07: push A==B
2c08: push A||B
2c09: jump if !A [Addr=2c11]
2c0b: clear stack
2c0c: push constant #0008
2c0e: push constant #0000
2c10: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c11: return
2c12: clear stack
2c13: push special [Type=0008]
2c15: push constant #0000
2c17: push A==B
2c18: push special [Type=0008]
2c1a: push constant #0001
2c1c: push A==B
2c1d: push A||B
2c1e: push special [Type=0008]
2c20: push constant #0002
2c22: push A==B
2c23: push A||B
2c24: jump if !A [Addr=2c2c]
2c26: clear stack
2c27: push constant #0009
2c29: push constant #0000
2c2b: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c2c: return
2c2d: clear stack
2c2e: push special [Type=0008]
2c30: push constant #0000
2c32: push A==B
2c33: push special [Type=0008]
2c35: push constant #0001
2c37: push A==B
2c38: push A||B
2c39: push special [Type=0008]
2c3b: push constant #0002
2c3d: push A==B
2c3e: push A||B
2c3f: jump if !A [Addr=2c47]
2c41: clear stack
2c42: push constant #000a
2c44: push constant #0000
2c46: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c47: return
2c48: clear stack
2c49: push special [Type=0008]
2c4b: push constant #0000
2c4d: push A==B
2c4e: push special [Type=0008]
2c50: push constant #0001
2c52: push A==B
2c53: push A||B
2c54: push special [Type=0008]
2c56: push constant #0002
2c58: push A==B
2c59: push A||B
2c5a: jump if !A [Addr=2c72]
2c5c: clear stack
2c5d: push halfword from bank 0 [Addr=0000]
2c5f: push constant #04ad
2c61: push A>=B
2c62: jump if !A [Addr=2c6c]
2c64: clear stack
2c65: push constant #000b
2c67: push constant #0001
2c69: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c6a: jump [Addr=2c72]
2c6c: clear stack
2c6d: push constant #000b
2c6f: push constant #0000
2c71: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c72: return
2c73: clear stack
2c74: push special [Type=0008]
2c76: push constant #0000
2c78: push A==B
2c79: push special [Type=0008]
2c7b: push constant #0001
2c7d: push A==B
2c7e: push A||B
2c7f: push special [Type=0008]
2c81: push constant #0002
2c83: push A==B
2c84: push A||B
2c85: jump if !A [Addr=2c8d]
2c87: clear stack
2c88: push constant #000c
2c8a: push constant #0000
2c8c: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2c8d: return
2c8e: clear stack
2c8f: push special [Type=0008]
2c91: push constant #0000
2c93: push A==B
2c94: push special [Type=0008]
2c96: push constant #0001
2c98: push A==B
2c99: push A||B
2c9a: push special [Type=0008]
2c9c: push constant #0002
2c9e: push A==B
2c9f: push A||B
2ca0: push special [Type=0008]
2ca2: push constant #0006
2ca4: push A==B
2ca5: push A||B
2ca6: jump if !A [Addr=2cae]
2ca8: clear stack
2ca9: push constant #000d
2cab: push constant #0000
2cad: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2cae: return
2caf: clear stack
2cb0: push special [Type=0008]
2cb2: push constant #0000
2cb4: push A==B
2cb5: push special [Type=0008]
2cb7: push constant #0001
2cb9: push A==B
2cba: push A||B
2cbb: push special [Type=0008]
2cbd: push constant #0002
2cbf: push A==B
2cc0: push A||B
2cc1: jump if !A [Addr=2cc9]
2cc3: clear stack
2cc4: push constant #000e
2cc6: push constant #0000
2cc8: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2cc9: return
2cca: clear stack
2ccb: push special [Type=0008]
2ccd: push constant #0000
2ccf: push A==B
2cd0: push special [Type=0008]
2cd2: push constant #0001
2cd4: push A==B
2cd5: push A||B
2cd6: push special [Type=0008]
2cd8: push constant #0002
2cda: push A==B
2cdb: push A||B
2cdc: jump if !A [Addr=2cf1]
2cde: clear stack
2cdf: push bit from bank 0 [Addr=248a]
2ce1: jump if !A [Addr=2ceb]
2ce3: clear stack
2ce4: push constant #000f
2ce6: push constant #0001
2ce8: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2ce9: jump [Addr=2cf1]
2ceb: clear stack
2cec: push constant #000f
2cee: push constant #0000
2cf0: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2cf1: return
2cf2: clear stack
2cf3: push special [Type=0008]
2cf5: push constant #0006
2cf7: push A==B
2cf8: jump if !A [Addr=2d00]
2cfa: clear stack
2cfb: push constant #0010
2cfd: push constant #0000
2cff: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d00: return
2d01: clear stack
2d02: push special [Type=0008]
2d04: push constant #0000
2d06: push A==B
2d07: push special [Type=0008]
2d09: push constant #0001
2d0b: push A==B
2d0c: push A||B
2d0d: push special [Type=0008]
2d0f: push constant #0002
2d11: push A==B
2d12: push A||B
2d13: jump if !A [Addr=2d1b]
2d15: clear stack
2d16: push constant #0011
2d18: push constant #0000
2d1a: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d1b: return
2d1c: clear stack
2d1d: push special [Type=0008]
2d1f: push constant #0000
2d21: push A==B
2d22: push special [Type=0008]
2d24: push constant #0001
2d26: push A==B
2d27: push A||B
2d28: push special [Type=0008]
2d2a: push constant #0002
2d2c: push A==B
2d2d: push A||B
2d2e: jump if !A [Addr=2d36]
2d30: clear stack
2d31: push constant #0012
2d33: push constant #0000
2d35: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d36: return
2d37: clear stack
2d38: push special [Type=0008]
2d3a: push constant #0000
2d3c: push A==B
2d3d: push special [Type=0008]
2d3f: push constant #0001
2d41: push A==B
2d42: push A||B
2d43: push special [Type=0008]
2d45: push constant #0002
2d47: push A==B
2d48: push A||B
2d49: jump if !A [Addr=2d51]
2d4b: clear stack
2d4c: push constant #0013
2d4e: push constant #0000
2d50: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d51: return
2d52: clear stack
2d53: push special [Type=0008]
2d55: push constant #0000
2d57: push A==B
2d58: push special [Type=0008]
2d5a: push constant #0001
2d5c: push A==B
2d5d: push A||B
2d5e: push special [Type=0008]
2d60: push constant #0002
2d62: push A==B
2d63: push A||B
2d64: jump if !A [Addr=2d7c]
2d66: clear stack
2d67: push halfword from bank 0 [Addr=0000]
2d69: push constant #051c
2d6b: push A>=B
2d6c: jump if !A [Addr=2d76]
2d6e: clear stack
2d6f: push constant #0014
2d71: push constant #0001
2d73: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d74: jump [Addr=2d7c]
2d76: clear stack
2d77: push constant #0014
2d79: push constant #0000
2d7b: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d7c: return
2d7d: clear stack
2d7e: push special [Type=0008]
2d80: push constant #0000
2d82: push A==B
2d83: push special [Type=0008]
2d85: push constant #0001
2d87: push A==B
2d88: push A||B
2d89: push special [Type=0008]
2d8b: push constant #0002
2d8d: push A==B
2d8e: push A||B
2d8f: jump if !A [Addr=2d97]
2d91: clear stack
2d92: push constant #0015
2d94: push constant #0000
2d96: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2d97: return
2d98: clear stack
2d99: push special [Type=0008]
2d9b: push constant #0000
2d9d: push A==B
2d9e: push special [Type=0008]
2da0: push constant #0001
2da2: push A==B
2da3: push A||B
2da4: push special [Type=0008]
2da6: push constant #0002
2da8: push A==B
2da9: push A||B
2daa: jump if !A [Addr=2db2]
2dac: clear stack
2dad: push constant #0016
2daf: push constant #0000
2db1: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2db2: return
2db3: clear stack
2db4: push special [Type=0008]
2db6: push constant #0000
2db8: push A==B
2db9: push special [Type=0008]
2dbb: push constant #0001
2dbd: push A==B
2dbe: push A||B
2dbf: push special [Type=0008]
2dc1: push constant #0002
2dc3: push A==B
2dc4: push A||B
2dc5: jump if !A [Addr=2e06]
2dc7: clear stack
2dc8: push halfword from bank 0 [Addr=0000]
2dca: push constant #0642
2dcc: push A<B
2dcd: jump if !A [Addr=2e00]
2dcf: clear stack
2dd0: push bit from bank 0 [Addr=0e78]
2dd2: jump if !A [Addr=2df8]
2dd4: clear stack
2dd5: push bit from bank 0 [Addr=0e7e]
2dd7: push !A
2dd8: jump if !A [Addr=2df0]
2dda: clear stack
2ddb: push bit from bank 0 [Addr=0e7d]
2ddd: push !A
2dde: jump if !A [Addr=2de8]
2de0: clear stack
2de1: push constant #0017
2de3: push constant #0001
2de5: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2de6: jump [Addr=2dee]
2de8: clear stack
2de9: push constant #0017
2deb: push constant #0000
2ded: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2dee: jump [Addr=2df6]
2df0: clear stack
2df1: push constant #0017
2df3: push constant #0000
2df5: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2df6: jump [Addr=2dfe]
2df8: clear stack
2df9: push constant #0017
2dfb: push constant #0000
2dfd: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2dfe: jump [Addr=2e06]
2e00: clear stack
2e01: push constant #0017
2e03: push constant #0000
2e05: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e06: return
2e07: clear stack
2e08: push special [Type=0008]
2e0a: push constant #0000
2e0c: push A==B
2e0d: push special [Type=0008]
2e0f: push constant #0001
2e11: push A==B
2e12: push A||B
2e13: push special [Type=0008]
2e15: push constant #0002
2e17: push A==B
2e18: push A||B
2e19: jump if !A [Addr=2e21]
2e1b: clear stack
2e1c: push constant #0018
2e1e: push constant #0000
2e20: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e21: return
2e22: clear stack
2e23: push special [Type=0008]
2e25: push constant #0000
2e27: push A==B
2e28: push special [Type=0008]
2e2a: push constant #0001
2e2c: push A==B
2e2d: push A||B
2e2e: push special [Type=0008]
2e30: push constant #0002
2e32: push A==B
2e33: push A||B
2e34: jump if !A [Addr=2e3c]
2e36: clear stack
2e37: push constant #0019
2e39: push constant #0000
2e3b: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e3c: return
2e3d: clear stack
2e3e: push special [Type=0008]
2e40: push constant #0000
2e42: push A==B
2e43: push special [Type=0008]
2e45: push constant #0001
2e47: push A==B
2e48: push A||B
2e49: push special [Type=0008]
2e4b: push constant #0002
2e4d: push A==B
2e4e: push A||B
2e4f: jump if !A [Addr=2e57]
2e51: clear stack
2e52: push constant #001a
2e54: push constant #0000
2e56: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e57: return
2e58: clear stack
2e59: push special [Type=0008]
2e5b: push constant #0000
2e5d: push A==B
2e5e: push special [Type=0008]
2e60: push constant #0001
2e62: push A==B
2e63: push A||B
2e64: push special [Type=0008]
2e66: push constant #0002
2e68: push A==B
2e69: push A||B
2e6a: jump if !A [Addr=2e72]
2e6c: clear stack
2e6d: push constant #001b
2e6f: push constant #0000
2e71: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e72: return
2e73: clear stack
2e74: push special [Type=0008]
2e76: push constant #0000
2e78: push A==B
2e79: push special [Type=0008]
2e7b: push constant #0001
2e7d: push A==B
2e7e: push A||B
2e7f: push special [Type=0008]
2e81: push constant #0002
2e83: push A==B
2e84: push A||B
2e85: jump if !A [Addr=2e8d]
2e87: clear stack
2e88: push constant #001c
2e8a: push constant #0000
2e8c: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2e8d: return
2e8e: clear stack
2e8f: push special [Type=0008]
2e91: push constant #0000
2e93: push A==B
2e94: push special [Type=0008]
2e96: push constant #0001
2e98: push A==B
2e99: push A||B
2e9a: push special [Type=0008]
2e9c: push constant #0002
2e9e: push A==B
2e9f: push A||B
2ea0: jump if !A [Addr=2ea8]
2ea2: clear stack
2ea3: push constant #001d
2ea5: push constant #0000
2ea7: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2ea8: return
2ea9: clear stack
2eaa: push special [Type=0008]
2eac: push constant #0000
2eae: push A==B
2eaf: push special [Type=0008]
2eb1: push constant #0001
2eb3: push A==B
2eb4: push A||B
2eb5: push special [Type=0008]
2eb7: push constant #0002
2eb9: push A==B
2eba: push A||B
2ebb: jump if !A [Addr=2ec3]
2ebd: clear stack
2ebe: push constant #002b
2ec0: push constant #0000
2ec2: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2ec3: return
2ec4: clear stack
2ec5: push special [Type=0008]
2ec7: push constant #0000
2ec9: push A==B
2eca: push special [Type=0008]
2ecc: push constant #0001
2ece: push A==B
2ecf: push A||B
2ed0: push special [Type=0008]
2ed2: push constant #0002
2ed4: push A==B
2ed5: push A||B
2ed6: jump if !A [Addr=2ede]
2ed8: clear stack
2ed9: push constant #002c
2edb: push constant #0000
2edd: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2ede: return
2edf: clear stack
2ee0: push special [Type=0008]
2ee2: push constant #0000
2ee4: push A==B
2ee5: push special [Type=0008]
2ee7: push constant #0001
2ee9: push A==B
2eea: push A||B
2eeb: push special [Type=0008]
2eed: push constant #0002
2eef: push A==B
2ef0: push A||B
2ef1: jump if !A [Addr=2ef9]
2ef3: clear stack
2ef4: push constant #002e
2ef6: push constant #0000
2ef8: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2ef9: return
2efa: clear stack
2efb: push special [Type=0008]
2efd: push constant #0000
2eff: push A==B
2f00: jump if !A [Addr=2f0a]
2f02: clear stack
2f03: push constant #002f
2f05: push constant #0000
2f07: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2f08: jump [Addr=2f1c]
2f0a: clear stack
2f0b: push special [Type=0008]
2f0d: push constant #0001
2f0f: push A==B
2f10: push special [Type=0008]
2f12: push constant #0002
2f14: push A==B
2f15: push A||B
2f16: jump if !A [Addr=2f1c]
2f18: clear stack
2f19: push special [Type=0008]
2f1b: run function 31: A=ModelId
2f1c: return
2f1d: clear stack
2f1e: push special [Type=0008]
2f20: push constant #0000
2f22: push A==B
2f23: jump if !A [Addr=2f2b]
2f25: clear stack
2f26: push constant #0030
2f28: push constant #0000
2f2a: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2f2b: return
2f2c: clear stack
2f2d: push special [Type=0008]
2f2f: push constant #0000
2f31: push A==B
2f32: push special [Type=0008]
2f34: push constant #0001
2f36: push A==B
2f37: push A||B
2f38: push special [Type=0008]
2f3a: push constant #0002
2f3c: push A==B
2f3d: push A||B
2f3e: jump if !A [Addr=2f46]
2f40: clear stack
2f41: push constant #0039
2f43: push constant #0000
2f45: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2f46: return
2f47: clear stack
2f48: push special [Type=0008]
2f4a: push constant #0000
2f4c: push A==B
2f4d: push special [Type=0008]
2f4f: push constant #0001
2f51: push A==B
2f52: push A||B
2f53: push special [Type=0008]
2f55: push constant #0002
2f57: push A==B
2f58: push A||B
2f59: jump if !A [Addr=2f61]
2f5b: clear stack
2f5c: push constant #003a
2f5e: push constant #0000
2f60: enter field scene: A=?, B=? (combine to form offset in field.tbl)
2f61: return
2f62: clear stack
2f63: push constant #0000
2f65: set control lock A=isControlsEnabled
2f66: clear stack
2f67: push constant #0001
2f69: unknown: A=?
2f6a: clear stack
2f6b: push special [Type=0008]
2f6d: run function 23: A=ModelId
2f6e: unknown
2f6f: wait for window ready
2f70: clear stack
2f71: push constant #0080
2f73: push constant #00a0
2f75: push constant #0040
2f77: push constant #0019
2f79: set window dimensions: X, Y, W, H
2f7a: clear stack
2f7b: push constant #0000
2f7d: push constant #0000
2f7f: set window parameters, A=Mode, B=IsPermanent
2f80: wait for window ready
2f81: clear stack
2f82: push constant #0022
2f84: set window message: A=MesId
2f85: wait for message acknowledge
2f86: clear stack
2f87: push constant #0001
2f89: shake camera on/off, A=Boolean
2f8a: clear stack
2f8b: push special [Type=0008]
2f8d: push constant #0000
2f8f: unknown, A=?, B=?
2f90: clear stack
2f91: push constant #017f
2f93: play sound effect: A=SfxId
2f94: clear stack
2f95: push constant #001e
2f97: unknown: A=?
2f98: clear stack
2f99: push special [Type=0008]
2f9b: push constant #0003
2f9d: push A==B
2f9e: jump if !A [Addr=2fa7]
2fa0: clear stack
2fa1: push constant #0019
2fa3: set wait frames A=NumFrames
2fa4: wait
2fa5: jump [Addr=2fb4]
2fa7: clear stack
2fa8: push special [Type=0008]
2faa: push constant #0013
2fac: push A==B
2fad: jump if !A [Addr=2fb4]
2faf: clear stack
2fb0: push constant #000f
2fb2: set wait frames A=NumFrames
2fb3: wait
2fb4: clear stack
2fb5: push constant #0000
2fb7: unknown: A=?
2fb8: clear stack
2fb9: push constant #0019
2fbb: set wait frames A=NumFrames
2fbc: wait
2fbd: clear stack
2fbe: push constant #0001
2fc0: push constant #0006
2fc2: push constant #000a
2fc4: unknown, A=?, B=?, C=?
2fc5: clear stack
2fc6: push constant #0002
2fc8: push constant #0000
2fca: active entity play animation: A=AnimationID, B=shouldLoop
2fcb: clear stack
2fcc: push constant #01b1
2fce: play sound effect: A=SfxId
2fcf: clear stack
2fd0: push constant #003c
2fd2: set wait frames A=NumFrames
2fd3: wait
2fd4: clear stack
2fd5: push constant #0001
2fd7: unknown, A=?
2fd8: clear stack
2fd9: push constant #0006
2fdb: unknown, A=?
2fdc: clear stack
2fdd: push constant #0000
2fdf: shake camera on/off, A=Boolean
2fe0: clear stack
2fe1: push constant #0000
2fe3: push constant #0001
2fe5: active entity play animation: A=AnimationID, B=shouldLoop
2fe6: clear stack
2fe7: push constant #0028
2fe9: set wait frames A=NumFrames
2fea: wait
2feb: clear stack
2fec: push bit from bank 0 [Addr=1c3d]
2fee: push constant #0001
2ff0: write to bank: A=Addr, B=Value
2ff1: clear stack
2ff2: push constant #03d6
2ff4: trigger battle: A=SceneId?
2ff5: clear stack
2ff6: push constant #0000
2ff8: unknown: A=?
2ff9: return
2ffa: clear stack
2ffb: push special [Type=0008]
2ffd: push distance from active entity to entity by model id
2ffe: push constant #07d0
3000: push A>=B
3001: jump if !A [Addr=300f]
3003: clear stack
3004: push bit from bank 0 [Addr=1c3d]
3006: push constant #0000
3008: write to bank: A=Addr, B=Value
3009: clear stack
300a: push constant #0001
300c: push constant #0001
300e: active entity play animation: A=AnimationID, B=shouldLoop
300f: clear stack
3010: push special [Type=0008]
3012: push constant #0003
3014: push A==B
3015: push special [Type=0008]
3017: push constant #0013
3019: push A==B
301a: push A||B
301b: jump if !A [Addr=308d]
301d: clear stack
301e: push bit from bank 0 [Addr=1c3d]
3020: jump if !A [Addr=3080]
3022: clear stack
3023: push special [Type=0008]
3025: push constant #0003
3027: push A==B
3028: jump if !A [Addr=3051]
302a: clear stack
302b: push special [Type=0008]
302d: push distance from active entity to entity by model id
302e: push constant #0064
3030: push A<=B
3031: jump if !A [Addr=304f]
3033: clear stack
3034: push constant #0000
3036: set control lock A=isControlsEnabled
3037: clear stack
3038: push special [Type=0008]
303a: push constant #0000
303c: unknown, A=?, B=?
303d: clear stack
303e: push constant #0006
3040: unknown, A=?
3041: clear stack
3042: push special [Type=0008]
3044: run function 24: A=ModelId
3045: unknown
3046: clear stack
3047: push constant #0014
3049: set wait frames A=NumFrames
304a: wait
304b: clear stack
304c: push constant #03d6
304e: trigger battle: A=SceneId?
304f: jump [Addr=307e]
3051: clear stack
3052: push special [Type=0008]
3054: push constant #0013
3056: push A==B
3057: jump if !A [Addr=307e]
3059: clear stack
305a: push special [Type=0008]
305c: push distance from active entity to entity by model id
305d: push constant #0050
305f: push A<=B
3060: jump if !A [Addr=307e]
3062: clear stack
3063: push constant #0000
3065: set control lock A=isControlsEnabled
3066: clear stack
3067: push special [Type=0008]
3069: push constant #0000
306b: unknown, A=?, B=?
306c: clear stack
306d: push constant #0006
306f: unknown, A=?
3070: clear stack
3071: push special [Type=0008]
3073: run function 24: A=ModelId
3074: unknown
3075: clear stack
3076: push constant #0014
3078: set wait frames A=NumFrames
3079: wait
307a: clear stack
307b: push constant #03d6
307d: trigger battle: A=SceneId?
307e: jump [Addr=308d]
3080: clear stack
3081: push special [Type=0008]
3083: push distance from active entity to entity by model id
3084: push constant #0082
3086: push A<=B
3087: jump if !A [Addr=308d]
3089: clear stack
308a: push constant #001d
308c: run function 28: A=ModelId
308d: return
308e: clear stack
308f: push byte from bank 0 [Addr=0396]
3091: push special [Type=0010]
3093: push constant #0003
3095: push A*B
3096: push constant #0008
3098: push A>>B
3099: write to bank: A=Addr, B=Value
309a: clear stack
309b: push byte from bank 0 [Addr=0396]
309d: push constant #0000
309f: push A==B
30a0: jump if !A [Addr=30b0]
30a2: clear stack
30a3: push constant #000e
30a5: push constant #0013
30a7: set active entity mesh coordinates A=MeshX, B=MeshZ
30a8: clear stack
30a9: push constant #0cc2
30ab: push constant #0721
30ad: set active entity coordinates in mesh, A=XCoor, B=ZCoor
30ae: jump [Addr=30da]
30b0: clear stack
30b1: push byte from bank 0 [Addr=0396]
30b3: push constant #0001
30b5: push A==B
30b6: jump if !A [Addr=30c6]
30b8: clear stack
30b9: push constant #000f
30bb: push constant #0013
30bd: set active entity mesh coordinates A=MeshX, B=MeshZ
30be: clear stack
30bf: push constant #00c5
30c1: push constant #012f
30c3: set active entity coordinates in mesh, A=XCoor, B=ZCoor
30c4: jump [Addr=30da]
30c6: clear stack
30c7: push byte from bank 0 [Addr=0396]
30c9: push constant #0002
30cb: push A==B
30cc: jump if !A [Addr=30da]
30ce: clear stack
30cf: push constant #000e
30d1: push constant #0012
30d3: set active entity mesh coordinates A=MeshX, B=MeshZ
30d4: clear stack
30d5: push constant #16c6
30d7: push constant #057a
30d9: set active entity coordinates in mesh, A=XCoor, B=ZCoor
30da: clear stack
30db: push bit from bank 0 [Addr=1c3d]
30dd: jump if !A [Addr=30e7]
30df: clear stack
30e0: push constant #0000
30e2: push constant #0001
30e4: active entity play animation: A=AnimationID, B=shouldLoop
30e5: jump [Addr=30ed]
30e7: clear stack
30e8: push constant #0001
30ea: push constant #0001
30ec: active entity play animation: A=AnimationID, B=shouldLoop
30ed: return
30ee: return

